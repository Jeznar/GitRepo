{
  "name": "Flame Seed",
  "type": "weapon",
  "img": "Icons_JGB/Spells/Creature_Abilities/Flame_Seed/FireBolt_01_Regular_Orange_Thumb.webp",
  "data": {
    "description": {
      "value": "<p><span style=\"color:#191813;font-size:13px\">The wildfire druid's fiery friend can throw a </span><strong style=\"box-sizing:border-box;user-select:text;color:#191813;font-size:13px\">Flame Seed</strong><span style=\"color:#191813;font-size:13px\">, attacking with your the druid's spell attack modifier to hit, range 60 ft., one target you can see. Hit: 1d6 + proficency bonus fire damage</span></p>\n<hr />\n<p><strong>FoundryVTT:</strong> The VFX of this spell adjust in color based on a color keyword found in the image or item icon name.  Recognized keywords:  blue, dark_green, green02, green, dark_red, orange, purple. </p>",
      "chat": "",
      "unidentified": ""
    },
    "source": "",
    "quantity": 1,
    "weight": 1,
    "price": 0,
    "attunement": 0,
    "equipped": true,
    "rarity": "",
    "identified": true,
    "activation": {
      "type": "action",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": 0,
      "units": ""
    },
    "target": {
      "value": null,
      "width": null,
      "units": "",
      "type": ""
    },
    "range": {
      "value": 60,
      "long": null,
      "units": "ft"
    },
    "uses": {
      "value": 0,
      "max": "0",
      "per": ""
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": null
    },
    "ability": "",
    "actionType": "rwak",
    "attackBonus": "5[mod] + 3[prof]",
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": ""
    },
    "damage": {
      "parts": [
        [
          "1d6 + 3",
          "fire"
        ]
      ],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": null,
      "scaling": "spell"
    },
    "armor": {
      "value": 10
    },
    "hp": {
      "value": 0,
      "max": 0,
      "dt": null,
      "conditions": ""
    },
    "weaponType": "simpleM",
    "baseItem": "",
    "properties": {
      "amm": false,
      "hvy": false,
      "fin": false,
      "fir": false,
      "foc": false,
      "lgt": false,
      "rch": false,
      "rel": false,
      "ret": false,
      "spc": false,
      "thr": false,
      "two": false,
      "ver": false,
      "ada": false,
      "lod": false,
      "mgc": false,
      "sil": false,
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "critOther": false
    },
    "proficient": false
  },
  "effects": [],
  "sort": 0,
  "flags": {
    "enhancedcombathud": {
      "set1p": false,
      "set2p": false,
      "set3p": false,
      "set1s": false,
      "set2s": false,
      "set3s": false
    },
    "midi-qol": {
      "criticalThreshold": "20",
      "onUseMacroName": "ItemMacro"
    },
    "magicitems": {
      "enabled": false,
      "equipped": false,
      "attuned": false,
      "charges": "0",
      "chargeType": "c1",
      "destroy": false,
      "destroyFlavorText": "reaches 0 charges: it crumbles into ashes and is destroyed.",
      "rechargeable": false,
      "recharge": "0",
      "rechargeType": "t1",
      "rechargeUnit": "r1",
      "sorting": "l"
    },
    "betterCurses": {
      "isCurse": false,
      "curseName": "",
      "formula": "",
      "mwak": false,
      "rwak": false,
      "msak": false,
      "rsak": false
    },
    "autoanimations": {
      "version": 3,
      "killAnim": false,
      "animLevel": false,
      "options": {
        "ammo": false,
        "rangeType": "",
        "variant": "",
        "enableCustom": false,
        "repeat": null,
        "delay": null
      },
      "override": false,
      "sourceToken": {
        "enable": false
      },
      "targetToken": {
        "enable": false
      },
      "levels3d": {
        "type": ""
      },
      "macro": {
        "enable": false
      },
      "animType": "range",
      "animation": "",
      "color": "",
      "audio": {
        "a01": {
          "enable": false
        },
        "e01": {
          "enable": false
        }
      },
      "preview": false,
      "explosions": {
        "enable": false,
        "animation": "explosion",
        "variant": "01",
        "color": "orange",
        "enableCustom": false,
        "radius": 0.5,
        "delay": 500,
        "below": false
      }
    },
    "core": {
      "sourceId": "Item.ixjP0dFSUdJ4iN9t"
    },
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Flame Seed",
          "type": "script",
          "author": "ZjFlOWYxZjM5ZTZj",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "const MACRONAME = \"Flame_Seed.js\"\n/*****************************************************************************************\n * Run a two seto VFX that changes based on target hit or miss\n * \n * 02/11/22 0.1 Creation of Macro\n *****************************************************************************************/\nconst MACRO = MACRONAME.split(\".\")[0]     // Trim of the version number and extension\nconst LAST_ARG = args[args.length - 1];\nlet aToken;         // Acting token, token for creature that invoked the macro\nif (LAST_ARG.tokenId) aToken = canvas.tokens.get(LAST_ARG.tokenId); \n    else aToken = game.actors.get(LAST_ARG.tokenId);\nlet aItem;          // Active Item information, item invoking this macro\nif (args[0]?.item) aItem = args[0]?.item; \n    else aItem = LAST_ARG.efData?.flags?.dae?.itemData;\n\n//-----------------------------------------------------------------------------------------\n// Determine primary color\n//\n// COOL-THING: Double VFX with color selected by token or item token\nlet color = \"\"      // projectile color\nlet expColor = \"\"   // explosion color\ncolor = extractColor(aToken.data.img);\nif (!color) color = extractColor(aItem.img);\nif (!color) color = \"orange\";\n//-----------------------------------------------------------------------------------------\n// Determine explosion color based on primary\n//\nif     (color === \"blue\")       { expColor=\"blueyellow\" }\nelse if(color ===\"dark_green\")  { expColor=\"green\" }\nelse if(color ===\"green02\")     { expColor=\"green\" }\nelse if(color ===\"green\")       { expColor=\"greenorange\" }\nelse if(color ===\"dark_red\")    { expColor=\"dark_red\" }\nelse if(color ===\"orange\")      { expColor=\"orange\" }\nelse if(color ===\"purple\")      { expColor=\"purple\" }\nelse                            { expColor=\"orange\" }  // No color was found in img names\n//-----------------------------------------------------------------------------------------\n// Play the VFX\n//\nif (args[0].hitTargets[0]) { // Target was hit\n    jez.log(`Color ${color}, ExpColor ${expColor}`)\n    new Sequence()\n        .effect()\n            .file(`jb2a.fire_bolt.${color}`)\n            .atLocation(aToken)\n            .stretchTo(args[0].targets[0])\n            //.missed(args[0].hitTargets.length === 0) // Keeping this for reference\n            .waitUntilFinished(-750) \n        .effect()\n            .file(`jb2a.explosion.${expColor}.0`)\n            .scale(0.5)\n            .atLocation(args[0].hitTargets[0])\n        .play()\n} else {    // Target was missed\n    new Sequence()\n        .effect()\n            .file(`jb2a.fire_bolt.${color}`)\n            .atLocation(aToken)\n            .stretchTo(args[0].targets[0])\n            .missed(args[0].hitTargets.length === 0)\n        .play()\n}\n/*****************************************************************************************\n * Search the passed string for one of the supported color strings.  Return empty string\n * if no supported color is found.\n * \n * Note this will return the first color string matched in the PARM.\n * \n * Supported colors: Blue, Dark_Green, Green02, Green, Dark_Red, Orange, Purple\n *****************************************************************************************/\nfunction extractColor(parm) {\n    let color = \"\";\n    let parmLC = parm.toLowerCase();\n    if (parmLC.includes(\"blue\")) { color = \"blue\" }\n    else if (parmLC.includes(\"dark_green\")) { color = \"dark_green\" }\n    else if (parmLC.includes(\"green02\")) { color = \"green02\" }\n    else if (parmLC.includes(\"green\")) { color = \"green\" }\n    else if (parmLC.includes(\"dark_red\")) { color = \"dark_red\" }\n    else if (parmLC.includes(\"orange\")) { color = \"orange\" }\n    else if (parmLC.includes(\"purple\")) { color = \"purple\" }\n    jez.log(\"Returning color\", color)\n    return (color)\n}",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        }
      }
    },
    "exportSource": {
      "world": "travels-in-barovia",
      "system": "dnd5e",
      "coreVersion": "0.8.9",
      "systemVersion": "1.5.3"
    }
  }
}