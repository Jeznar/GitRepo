{
  "name": "Divine Sense",
  "type": "feat",
  "img": "/systems/dnd5e/icons/skills/light_02.jpg",
  "data": {
    "description": {
      "value": "<p>The presence of strong evil registers on your senses like a noxious odor, and powerful good rings like heavenly music in your ears. As an action, you can open your awareness to detect such forces.</p>\n<p>Until the end of your next turn, you know the <strong><span style=\"text-decoration: underline;\">location</span></strong> and&nbsp;<strong><span style=\"text-decoration: underline;\">type</span> </strong>of any <strong>celestial</strong>, <strong>fiend</strong>, or <strong>undead</strong> within 60 feet of you that is <span style=\"text-decoration: underline;\"><strong>not behind total cover.</strong></span></p>\n<p>Within the same radius, you also detect the presence of any place or object that has been consecrated or desecrated, as with the hallow spell.</p>\n<p>You can use this feature a number of times equal to 1 + your Charisma modifier. When you finish a long rest, you regain all expended uses.</p>\n<hr />\n<p><strong>FoundryVTT:&nbsp;</strong>A VFX indicates the area of effect, remaining elements are manual.</p>",
      "chat": "",
      "unidentified": ""
    },
    "source": "Class",
    "activation": {
      "type": "action",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": 0,
      "units": ""
    },
    "target": {
      "value": null,
      "width": null,
      "units": "",
      "type": "self"
    },
    "range": {
      "value": null,
      "long": null,
      "units": ""
    },
    "uses": {
      "value": 3,
      "max": "4",
      "per": "lr"
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": 1
    },
    "ability": "",
    "actionType": "util",
    "attackBonus": 0,
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": null
    },
    "damage": {
      "parts": [],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": null,
      "scaling": "spell"
    },
    "requirements": "Paladin: Level 1",
    "recharge": {
      "value": 0,
      "charged": false
    }
  },
  "effects": [
    {
      "_id": "gNeraIQSNRUCNbDR",
      "changes": [
        {
          "key": "macro.itemMacro",
          "mode": 0,
          "value": "None",
          "priority": "20"
        }
      ],
      "disabled": false,
      "duration": {
        "startTime": null,
        "rounds": 2,
        "turns": 0,
        "seconds": 12
      },
      "icon": "/systems/dnd5e/icons/skills/light_02.jpg",
      "label": "Divine Sense",
      "transfer": false,
      "flags": {
        "dae": {
          "stackable": "none",
          "macroRepeat": "none",
          "specialDuration": [
            "turnStartSource"
          ],
          "transfer": false,
          "selfTarget": false,
          "durationExpression": ""
        },
        "dnd5e-helpers": {
          "rest-effect": "Short Rest"
        },
        "ActiveAuras": {
          "isAura": false,
          "aura": "None",
          "radius": null,
          "alignment": "",
          "type": "",
          "ignoreSelf": false,
          "height": false,
          "hidden": false,
          "hostile": false,
          "onlyOnce": false,
          "displayTemp": false
        },
        "core": {
          "statusId": ""
        }
      },
      "tint": "",
      "selectedKey": "macro.itemMacro"
    }
  ],
  "flags": {
    "magicitems": {
      "enabled": false,
      "equipped": false,
      "attuned": false,
      "charges": "0",
      "chargeType": "c1",
      "destroy": false,
      "destroyFlavorText": "reaches 0 charges: it crumbles into ashes and is destroyed.",
      "rechargeable": false,
      "recharge": "0",
      "rechargeType": "t1",
      "rechargeUnit": "r1",
      "sorting": "l"
    },
    "betterCurses": {
      "isCurse": false,
      "curseName": "",
      "formula": "",
      "mwak": false,
      "rwak": false,
      "msak": false,
      "rsak": false
    },
    "core": {
      "sourceId": "Item.kaA07MoGI46PCGET"
    },
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Divine Sense",
          "type": "script",
          "author": "ZjFlOWYxZjM5ZTZj",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "const MACRONAME = \"Divine_Sense.0.2.js\"\n/*********1*********2*********3*********4*********5*********6*********7*********8*********9*********0*********1*********2*********3*\n * Implment Paladin Ability Divine Sense.  Specifically manage the visile aura removal \n * when spell complete.\n * \n * 12/26/21 0.1 Creation of Macro\n * 12/15/22 0.2 Update style and fix handling of VFX\n *********1*********2*********3*********4*********5*********6*********7*********8*********9*********0*********1*********2*********3*/ \n const MACRO = MACRONAME.split(\".\")[0]       // Trim off the version number and extension\n const TAG = `${MACRO} |`\n const TL = 0;                               // Trace Level for this macro\n let msg = \"\";                               // Global message string\n //-----------------------------------------------------------------------------------------------------------------------------------\n if (TL>0) jez.trace(`${TAG} === Starting ===`);\n if (TL>1) for (let i = 0; i < args.length; i++) jez.trace(`  args[${i}]`, args[i]);\n //-----------------------------------------------------------------------------------------------------------------------------------\n // Set standard variables\n //\n const L_ARG = args[args.length - 1]; // See https://gitlab.com/tposney/dae#lastarg for contents\n let aToken = (L_ARG.tokenId) ? canvas.tokens.get(L_ARG.tokenId) : game.actors.get(L_ARG.tokenId)\n let aActor = aToken.actor; \n let aItem = (args[0]?.item) ? args[0]?.item : L_ARG.efData?.flags?.dae?.itemData\n const VERSION = Math.floor(game.VERSION);\n const GAME_RND = game.combat ? game.combat.round : 0;\n //-----------------------------------------------------------------------------------------------------------------------------------\n // Set Macro specific globals\n //\nconst DEBUG = true;\nconst IMAGE = \"Icons_JGB/Spells/Spirit_Guardian.jpg\"\nconst DEBUFF_NAME = aItem.name || \"Divine Sense\";\nconst DEBUFF_ICON = aItem.img || \"/systems/dnd5e/icons/skills/light_02.jpg\";\nconst VFX_NAME = `${MACRO}-${aToken.id}`\n//-----------------------------------------------------------------------------------------------------------------------------------\n// Run the main procedures, choosing based on how the macro was invoked\n//\n// if (args[0] === \"on\") await doOn({traceLvl:TL});                     // DAE Application\nif (args[0]?.tag === \"OnUse\") await doOnUse({traceLvl:TL});          // Midi ItemMacro On Use\n// if (args[0] === \"each\") doEach({traceLvl:TL});\t\t\t\t\t     // DAE everyround\nif (args[0] === \"off\") await doOff({traceLvl:TL});                   // DAE removal\nif (TL>1) jez.trace(`${TAG} === Finished ===`);\n/*********1*********2*********3*********4*********5*********6*********7*********8*********9*********0*********1*********2*********3*\n *    END_OF_MAIN_MACRO_BODY\n *                                END_OF_MAIN_MACRO_BODY\n *                                                             END_OF_MAIN_MACRO_BODY\n * \n *  \n ***********************************************************************************************************************************\n * Fire up the VFX when effect is added\n *********1*********2*********3*********4*********5*********6*********7*********8*********9*********0*********1*********2*********3*/ \n async function doOnUse(options={}) {\n    const FUNCNAME = \"doOnUse(options={})\";\n    const FNAME = FUNCNAME.split(\"(\")[0] \n    const TAG = `${MACRO} ${FNAME} |`\n    const TL = options.traceLvl ?? 0\n    if (TL>0) jez.trace(`${TAG} --- Starting ---`);\n    //-------------------------------------------------------------------------------------------------------------------------------\n    // \n    //\n    runVFX(token)\n    //-------------------------------------------------------------------------------------------------------------------------------\n    // Set the CE description\n    //\n    const NEW_DESC = \"Know the location and type of any celestial, fiend, or undead that is not behind total cover.\"\n    const EFFECT = \"Divine Sense\";\n    await jez.setCEDesc(aToken, EFFECT, NEW_DESC, { traceLvl: TL });\n    //-------------------------------------------------------------------------------------------------------------------------------\n    // \n    //\n    msg = `${aToken.name} knows the location and type of any celestial, fiend, or undead within 60 feet that is not behind \n    total cover.`\n    postResults(msg)\n    //-------------------------------------------------------------------------------------------------------------------------------\n    // \n    //\n    if (TL>1) jez.trace(`${TAG} --- Finished ---`);\n    return true;\n}\n/*********1*********2*********3*********4*********5*********6*********7*********8*********9*********0*********1*********2*********3*\n * Perform the code that runs when this macro is removed by DAE, set Off\n * This runs on actor that has the affected removed from it.\n *********1*********2*********3*********4*********5*********6*********7*********8*********9*********0*********1*********2*********3*/ \n async function doOff(options={}) {\n    const FUNCNAME = \"doOff(options={})\";\n    const FNAME = FUNCNAME.split(\"(\")[0] \n    const TAG = `${MACRO} ${FNAME} |`\n    const TL = options.traceLvl ?? 0\n    if (TL===1) jez.trace(`${TAG} --- Starting ---`);\n    if (TL>1) jez.trace(`${TAG} --- Starting --- ${FUNCNAME} ---`,\"options\",options);\n    //-------------------------------------------------------------------------------------------------------------------------------\n    // Comments, perhaps\n    //\n    console.log(`VFX_NAME`,VFX_NAME)\n    Sequencer.EffectManager.endEffects({ name: VFX_NAME });\n\n    if (TL>1) jez.trace(`${TAG} --- Finished ---`);\n    return;\n}\n/*********1*********2*********3*********4*********5*********6*********7*********8*********9*********0*********1*********2*********3*\n * Run some VFX on origin token\n *********1*********2*********3*********4*********5*********6*********7*********8*********9*********0*********1*********2*********3*/ \n function runVFX(token) {\n    const VFX_LOOP = \"modules/jb2a_patreon/Library/TMFX/Radar/Circle/RadarLoop_02_Circle_Normal_500x500.webm\"\n    const VFX_SCALE = 5.4\n     const VFX_OPACITY = 0.8\n     new Sequence()\n         .effect()\n         .file(VFX_LOOP)\n         .attachTo(token)\n         .scale(VFX_SCALE)\n         .opacity(VFX_OPACITY)\n         .persist()\n         .name(VFX_NAME)         // Give the effect a uniqueish name\n         .play()\n }\n /*********1*********2*********3*********4*********5*********6*********7*********8*********9*********0*********1*********2*********3*\n * Post results to the chat card\n *********1*********2*********3*********4*********5*********6*********7*********8*********9*********0*********1*********2*********3*/ \n  function postResults(msg) {\n    const FUNCNAME = \"postResults(msg)\";\n    const FNAME = FUNCNAME.split(\"(\")[0] \n    const TAG = `${MACRO} ${FNAME} |`\n    if (TL>1) jez.trace(`${TAG} --- Starting ---`);\n    if (TL>2) jez.trace(\"postResults Parameters\",\"msg\",msg)\n    //-------------------------------------------------------------------------------------------------------------------------------\n    let chatMsg = game.messages.get(args[args.length - 1].itemCardId);\n    jez.addMessage(chatMsg, { color: jez.randomDarkColor(), fSize: 14, msg: msg, tag: \"saves\" });\n    if (TL>1) jez.trace(`${TAG} --- Finished ---`);\n}",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        }
      }
    },
    "autoanimations": {
      "killAnim": false,
      "animLevel": true,
      "options": {
        "ammo": false,
        "enableCustom01": false,
        "ignoreTarget": false,
        "variant": "01",
        "enableCustom": false,
        "customPath": "",
        "auraRadius": 12,
        "opacity": 0.25
      },
      "override": true,
      "allSounds": {
        "item": {
          "enableAudio": false
        }
      },
      "sourceToken": {
        "enable": false
      },
      "targetToken": {
        "enable": false
      },
      "animType": "aura",
      "animName": "spiritguardians",
      "color": "yellowblue",
      "selfRadius": 12,
      "auraOpacity": 0.25,
      "below": true,
      "autoOverride": {
        "enable": false
      },
      "version": 4,
      "animation": "spiritguardians",
      "audio": {
        "a01": {
          "enable": false,
          "file": "",
          "delay": 0,
          "volume": 0.25
        },
        "e01": {
          "enable": false,
          "file": "",
          "delay": 0,
          "volume": 0.25
        }
      }
    },
    "midi-qol": {
      "effectActivation": false,
      "onUseMacroName": "[postActiveEffects]ItemMacro,[postActiveEffects]Run_RuneVFX_onSelf"
    },
    "midiProperties": {
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "rollOther": false,
      "critOther": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "toggleEffect": false
    },
    "exportSource": {
      "world": "travels-in-barovia-ce",
      "system": "dnd5e",
      "coreVersion": "9.280",
      "systemVersion": "1.6.2"
    }
  }
}