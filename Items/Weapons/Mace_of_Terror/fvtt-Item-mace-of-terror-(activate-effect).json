{
  "name": "Mace of Terror (Activate Effect)",
  "type": "spell",
  "img": "Icons_JGB/Items/Mace-of-Terror.png",
  "data": {
    "description": {
      "value": "<p><strong style=\"box-sizing: border-box; user-select: text; color: #191813; font-size: 13px;\">FoundryVTT</strong><span style=\"color: #191813; font-size: 13px;\">: Target all creatures within 30 feet that you wish to attempt to terrify before using this ability.</span></p>",
      "chat": "",
      "unidentified": ""
    },
    "source": "",
    "activation": {
      "type": "action",
      "cost": 1,
      "condition": "Holding Attuned Mace"
    },
    "duration": {
      "value": null,
      "units": ""
    },
    "target": {
      "value": null,
      "width": null,
      "units": "",
      "type": ""
    },
    "range": {
      "value": 30,
      "long": null,
      "units": "ft"
    },
    "uses": {
      "value": null,
      "max": "",
      "per": ""
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": null
    },
    "ability": "",
    "actionType": "save",
    "attackBonus": 0,
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": ""
    },
    "damage": {
      "parts": [],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "wis",
      "dc": 15,
      "scaling": "flat"
    },
    "level": 1,
    "school": "ill",
    "components": {
      "value": "",
      "vocal": false,
      "somatic": false,
      "material": false,
      "ritual": false,
      "concentration": false
    },
    "materials": {
      "value": "",
      "consumed": false,
      "cost": 0,
      "supply": 0
    },
    "preparation": {
      "mode": "atwill",
      "prepared": false
    },
    "scaling": {
      "mode": "none",
      "formula": ""
    }
  },
  "effects": [],
  "flags": {
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Mace of Terror (Activate Effect)",
          "type": "script",
          "author": "ZjFlOWYxZjM5ZTZj",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "const MACRONAME = \"Mace_of_Terror\"\n/*****************************************************************************************\n * This macro implements the item use ability for the Mace of terror.  Described as:\n * \n *   This magic weapon has 3 charges. While holding it, you can use an action and expend \n *   1 charge to release a wave of terror.\n * \n *   Each creature of your choice in a 30-foot radius extending from you must succeed on \n *   a DC 15 Wisdom saving throw or become frightened of you for 1 minute.\n * \n *   While it is frightened in this way, a creature:\n *   o must spend its turns trying to move as far away from you as it can, and it can't \n *     willingly move to a space within 30 feet of you.\n *   o It also can't take reactions.\n *   o For its action, it can use only the Dash action or try to escape from an effect \n *     that prevents it from moving. If it has nowhere it can move, the creature can use \n *     the Dodge action.\n * \n *   At the end of each of its turns, a creature can repeat the saving throw, ending the \n *   effect on itself on a success.\n * \n * This macro will handle apply a DAE effect to mark affected creatures, create a reminder \n * message in the chatlog and do an overtime save at the end of each affected creature's \n * turn.  It expects the player tro pre target tokens to be affected.  It will do a range \n * check.\n * \n * 03/31/22 0.1 Creation of Macro\n *****************************************************************************************/\nconst MACRO = MACRONAME.split(\".\")[0]     // Trim of the version number and extension\njez.log(`============== Starting === ${MACRONAME} =================`);\nfor (let i = 0; i < args.length; i++) jez.log(`  args[${i}]`, args[i]);\nconst LAST_ARG = args[args.length - 1];\nlet aActor;         // Acting actor, creature that invoked the macro\nif (LAST_ARG.tokenId) aActor = canvas.tokens.get(LAST_ARG.tokenId).actor; \nelse aActor = game.actors.get(LAST_ARG.actorId);\nlet aToken;         // Acting token, token for creature that invoked the macro\nif (LAST_ARG.tokenId) aToken = canvas.tokens.get(LAST_ARG.tokenId); \nelse aToken = game.actors.get(LAST_ARG.tokenId);\nlet aItem;          // Active Item information, item invoking this macro\nif (args[0]?.item) aItem = args[0]?.item; \nelse aItem = LAST_ARG.efData?.flags?.dae?.aItemata;\nlet msg = \"\";\n//----------------------------------------------------------------------------------\n// Run the main procedures, choosing based on how the macro was invoked\n//\nif (args[0] === \"on\") await doOn();                     // DAE Application\nif (args[0]?.tag === \"OnUse\") await doOnUse();          // Midi ItemMacro On Use\nif (args[0] === \"each\") doEach();\t\t\t\t\t    // DAE removal\njez.log(`============== Finishing === ${MACRONAME} =================`);\n/***************************************************************************************************\n *    END_OF_MAIN_MACRO_BODY\n *                                END_OF_MAIN_MACRO_BODY\n *                                                             END_OF_MAIN_MACRO_BODY\n ***************************************************************************************************\n * Post results to the chat card\n ***************************************************************************************************/\n function postResults(msg) {\n    jez.log(msg);\n    let chatMsg = game.messages.get(args[args.length - 1].itemCardId);\n    jez.addMessage(chatMsg, { color: jez.randomDarkColor(), fSize: 14, msg: msg, tag: \"saves\" });\n}\n/***************************************************************************************************\n * Perform the code that runs when this macro is invoked as an ItemMacro \"OnUse\"\n ***************************************************************************************************/\n async function doOnUse() {\n    const FUNCNAME = \"doOnUse()\";\n    if (!preCheck()) return(false);\n    let tToken = canvas.tokens.get(args[0]?.targets[0]?.id); // First Targeted Token, if any\n    let tActor = tToken?.actor;\n    jez.log(`-------------- Starting --- ${MACRONAME} ${FUNCNAME} -----------------`);\n    //---------------------------------------------------------------------------------------------\n    // Set useful variables\n    //\n    let maxRange = jez.getRange(aItem, \"ft\")\n    jez.log(\"maxRange\", maxRange)\n    //---------------------------------------------------------------------------------------------\n    // Step through the failed save tokens, discarding those out of range, apply effect to in range\n    //\n    let outOfRangeNames = \"\"\n    let inRangeNames = \"\"\n    let color = \"purple\" // jez.getRandomRuneColor()\n    for (const element of args[0].failedSaves) {\n        //-----------------------------------------------------------------------------------------\n        // element is likely a TokenDocument5e and I am used to dealing with Token5e, so convert\n        //\n        let cToken = {}\n        if (element.constructor.name === \"TokenDocument5e\") cToken = element._object\n        else cToken = element\n        //-----------------------------------------------------------------------------------------\n        // check the range and do the job\n        //\n        if (jez.inRange(aToken, element, maxRange)) {\n            if (inRangeNames) inRangeNames += `, ${cToken.name}`\n            else inRangeNames = cToken.name\n            jez.runRuneVFX(cToken, jez.getSpellSchool(aItem), color)\n            new Sequence()\n            .effect()\n                .file(\"modules/jb2a_patreon/Library/Generic/Marker/MarkerFear_02_Dark_Purple_400x400.webm\")\n                .attachTo(cToken)\n                .scale(0.6)\n                .opacity(1)\n                .scaleIn(0.1, 1000)\n                .fadeIn(1000) \n                .fadeOut(2000) \n                .scaleOut(0.1, 2000)\n            .play();\n            applyEffect(cToken)\n        } else {\n            if (outOfRangeNames) outOfRangeNames += `, ${cToken.name}`\n            else outOfRangeNames = cToken.name\n        }\n        jez.log(\"inRangeNames\",inRangeNames)\n        jez.log(\"outOfRangeNames\",outOfRangeNames)\n    }\n    msg = `Saving throws In/Out of Range<br>In: ${inRangeNames}<br>Out: ${outOfRangeNames}`\n    postResults(msg)\n    jez.log(`-------------- Finished --- ${MACRONAME} ${FUNCNAME} -----------------`);\n    return (true);\n    /***********************************************************************************************\n    * Check the setup of things.  Setting the global errorMsg and returning true for ok!\n    ************************************************************************************************/\n   function preCheck() {\n       jez.log(\"args[0].targets.length\", args[0].targets.length)\n       if (args[0].targets.length === 0) {     // If not exactly one target, return\n           msg = `Must target at least one target.` \n           postResults(msg);\n           return (false);\n       }\n       jez.log(\"args[0].failedSaves.length\", args[0].failedSaves.length)\n       if (args[0].failedSaves.length === 0) {  // No failed saves\n           msg = `No targets affected by ${aItem.name}`\n           postResults(msg);\n           return(false);\n       }\n       return(true)\n   }\n}\n/***************************************************************************************************\n * Perform the code that runs when this macro is removed by DAE, set On\n ***************************************************************************************************/\nasync function doOn() {\n    const FUNCNAME = \"doOn()\";\n    jez.log(`-------------- Starting --- ${MACRONAME} ${FUNCNAME} -----------------`);\n    jez.log(\"A place for things to be done\");\n    jez.log(`-------------- Finished --- ${MACRONAME} ${FUNCNAME} -----------------`);\n    return;\n}\n/***************************************************************************************************\n * Perform the code that runs when this macro is invoked each round by DAE\n ***************************************************************************************************/\n async function doEach() {\n    const FUNCNAME = \"doEach()\";\n    jez.log(`-------------- Starting --- ${MACRONAME} ${FUNCNAME} -----------------`);\n    new Sequence()\n    .effect()\n        .file(\"modules/jb2a_patreon/Library/Generic/UI/IconFear_01_Dark_Purple_200x200.webm\")\n        .attachTo(aToken)\n        .scale(0.8)\n        .opacity(0.7)\n        .scaleIn(0.1, 1000)\n        .fadeIn(1000) \n        .fadeOut(2000) \n        .scaleOut(0.1, 2000)\n    .play();\n    msg = `Must move as far away from <b>${args[1]}</b> as it can and can not take reactions.\n    For its action, it can use only the Dash action or try to escape from an effect that prevents \n    it from moving. If it has nowhere it can move, ${aToken.name} can use the Dodge action.`\n    jez.postMessage({color: \"purple\", fSize: 14, icon: aToken.data.img, msg: msg, \n                title: `${aToken.name} is Terrified`, token: aToken})\n    jez.log(`-------------- Finished --- ${MACRONAME} ${FUNCNAME} -----------------`);\n    return (true);\n}\n/***************************************************************************************************\n * Perform the code that runs when this macro is invoked each round by DAE\n ***************************************************************************************************/\n async function applyEffect(token5e) {\n    const FUNCNAME = \"applyEffect(token5e)\";\n    const TERRIFIED_COND = \"Terrified\"\n    const TERRIFIED_ICON = \"Icons_JGB/Items/Mace-of-Terror.png\"\n    const GAME_RND = game.combat ? game.combat.round : 0;\n\n    jez.log(`-------------- Starting --- ${MACRONAME} ${FUNCNAME} -----------------`);\n    const SAVE_DC = LAST_ARG.item.data.save.dc\n    const SAVE_TYPE = LAST_ARG.item.data.save.ability\n    let ceDesc = `Terrified of ${aToken.name}. Must move away and can only take Dash action or attempt to escape restraints.` \n    let overTimeValue = `turn=end,label=Terrified,saveDC=${SAVE_DC},saveAbility=${SAVE_TYPE},saveRemove=true`\n    let effectData = [{\n        label: TERRIFIED_COND,\n        icon: TERRIFIED_ICON,\n        origin: LAST_ARG.uuid,\n        disabled: false,\n        flags: { \n            dae: { stackable: false, macroRepeat: \"startEveryTurn\" },\n            convenientDescription: ceDesc \n        },\n        duration: { rounds: 10, seconds: 60, startRound: GAME_RND, startTime: game.time.worldTime },\n        changes: [\n            { key: `macro.itemMacro`, mode: jez.CUSTOM, value: `'${aToken.name}'`, priority: 20 },\n            { key: `flags.midi-qol.OverTime`, mode: jez.OVERRIDE, value: overTimeValue, priority: 20 }\n        ]\n    }];\n    await MidiQOL.socket().executeAsGM(\"createEffects\", { actorUuid: token5e.actor.uuid, effects: effectData });\n    jez.log(`-------------- Finished --- ${MACRONAME} ${FUNCNAME} -----------------`);\n    return (true);\n}",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        }
      }
    },
    "midi-qol": {
      "effectActivation": false,
      "onUseMacroName": "[postActiveEffects]ItemMacro"
    },
    "midiProperties": {
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "rollOther": false,
      "critOther": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "toggleEffect": false
    },
    "core": {
      "sourceId": "Item.4uOy936wOTKfGK2C"
    },
    "exportSource": {
      "world": "travels-in-barovia-ce",
      "system": "dnd5e",
      "coreVersion": "9.280",
      "systemVersion": "1.6.2"
    }
  }
}