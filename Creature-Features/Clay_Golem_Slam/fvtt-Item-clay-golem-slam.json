{
  "name": "Clay Golem Slam",
  "type": "weapon",
  "img": "Tokens/Monsters/Clay_Golem/Clay_Golem_Slam.png",
  "data": {
    "description": {
      "value": "<p><span style=\"box-sizing:border-box;user-select:text;color:#191813;font-family:var(--font-primary);font-size:var(--font-size-14)\">Clay Golem</span><span style=\"color:#191813;font-size:13px\">Â slams at its intended target with fist, shoulder, head, or whatever is handy attempting to do bludgeoning damage.</span></p>\n<p>If the target is a creature, it must succeed on a <strong>DC 15 Constitution</strong> saving throw or have its hit point maximum reduced by an amount equal to the damage taken. The target dies if this attack reduces its hit point maximum to 0. The reduction lasts until removed by the greater restoration spell or other magic.</p>\n<hr />\n<p><strong>FoundryVTT:</strong> This is automated.</p>",
      "chat": "",
      "unidentified": ""
    },
    "source": "",
    "quantity": 1,
    "weight": 1,
    "price": 0,
    "attunement": 0,
    "equipped": false,
    "rarity": "",
    "identified": true,
    "activation": {
      "type": "action",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": 0,
      "units": ""
    },
    "target": {
      "value": null,
      "width": null,
      "units": "",
      "type": ""
    },
    "range": {
      "value": 5,
      "long": null,
      "units": "ft"
    },
    "uses": {
      "value": 0,
      "max": "0",
      "per": ""
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": null
    },
    "ability": "str",
    "actionType": "mwak",
    "attackBonus": "0",
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": ""
    },
    "damage": {
      "parts": [
        [
          "2d10 + @mod",
          "bludgeoning"
        ]
      ],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "con",
      "dc": 15,
      "scaling": "flat"
    },
    "armor": {
      "value": 10
    },
    "hp": {
      "value": 0,
      "max": 0,
      "dt": null,
      "conditions": ""
    },
    "weaponType": "natural",
    "baseItem": "",
    "properties": {
      "amm": false,
      "hvy": false,
      "fin": false,
      "fir": false,
      "foc": false,
      "lgt": false,
      "rch": false,
      "rel": false,
      "ret": false,
      "spc": false,
      "thr": false,
      "two": false,
      "ver": false,
      "ada": false,
      "lod": false,
      "mgc": true,
      "sil": false
    },
    "proficient": true,
    "preparation": null
  },
  "effects": [],
  "flags": {
    "midi-qol": {
      "criticalThreshold": "20",
      "onUseMacroName": "[postActiveEffects]ItemMacro",
      "fumbleThreshold": null,
      "effectActivation": false
    },
    "magicitems": {
      "enabled": false,
      "equipped": false,
      "attuned": false,
      "charges": "0",
      "chargeType": "c1",
      "destroy": false,
      "destroyFlavorText": "reaches 0 charges: it crumbles into ashes and is destroyed.",
      "rechargeable": false,
      "recharge": "0",
      "rechargeType": "t1",
      "rechargeUnit": "r1",
      "sorting": "l"
    },
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Clay Golem Slam",
          "type": "script",
          "author": "ZjFlOWYxZjM5ZTZj",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "const MACRONAME = \"Clay_Golem_Slam.0.2.js\"\n/*****************************************************************************************\n * Implement the reduction in HP Max portion of this ability.\n * \n *   If the target is a creature, it must succeed on a DC 15 Constitution saving throw or \n *   have its hit point maximum reduced by an amount equal to the damage taken. The target \n *   dies if this attack reduces its hit point maximum to 0. The reduction lasts until \n *   removed by the greater restoration spell or other magic.\n * \n * 04/17/22 0.1 Creation of Macro\n * 08/02/22 0.2 Add convenientDescription\n *****************************************************************************************/\nconst MACRO = MACRONAME.split(\".\")[0]     // Trim of the version number and extension\njez.log(`============== Starting === ${MACRONAME} =================`);\nfor (let i = 0; i < args.length; i++) jez.log(`  args[${i}]`, args[i]);\nconst LAST_ARG = args[args.length - 1];\nlet aItem;          // Active Item information, item invoking this macro\nif (args[0]?.item) aItem = args[0]?.item; \nelse aItem = LAST_ARG.efData?.flags?.dae?.itemData;\nlet msg = \"\";\n//----------------------------------------------------------------------------------\n// Run the main procedures, choosing based on how the macro was invoked\n//\nif (args[0]?.tag === \"OnUse\") await doOnUse();          // Midi ItemMacro On Use\n/***************************************************************************************************\n *    END_OF_MAIN_MACRO_BODY\n *                                END_OF_MAIN_MACRO_BODY\n *                                                             END_OF_MAIN_MACRO_BODY\n ***************************************************************************************************\n * Check the setup of things.  Setting the global errorMsg and returning true for ok!\n ***************************************************************************************************/\nfunction preCheck() {\n    if (args[0].targets.length !== 1) {     // If not exactly one target, return\n        msg = `Must target exactly one target.  ${args[0].targets.length} were targeted.`\n        postResults(msg);\n        return (false);\n    }\n    return(true)\n}\n/***************************************************************************************************\n * Post results to the chat card\n ***************************************************************************************************/\n function postResults(msg) {\n    jez.log(msg);\n    let chatMsg = game.messages.get(args[args.length - 1].itemCardId);\n    jez.addMessage(chatMsg, { color: jez.randomDarkColor(), fSize: 14, msg: msg, tag: \"saves\" });\n}\n/***************************************************************************************************\n * Perform the code that runs when this macro is invoked as an ItemMacro \"OnUse\"\n ***************************************************************************************************/\n async function doOnUse() {\n    const FUNCNAME = \"doOnUse()\";\n    if (!preCheck()) return(false);\n    let tToken = canvas.tokens.get(args[0]?.targets[0]?.id); // First Targeted Token, if any\n    //---------------------------------------------------------------------------------------------\n    // Find how much damage was done by triggering attack\n    //\n    const DAM_TYPE = \"bludgeoning\"\n    let damageDetail = await LAST_ARG.damageDetail.find(i=> i.type === DAM_TYPE);\n    if (!damageDetail) {\n        ui.notifications.error(`Oh no, Mister Bill!  Couldn't find any ${DAM_TYPE} damage.`)\n        return;\n    }\n    jez.log(\"damageDetail\",damageDetail)\n    const DAM_DONE = damageDetail.damage\n    jez.log(\"Damage Done\", DAM_DONE)\n    //---------------------------------------------------------------------------------------------\n    // Apply DAE effect to reduce target's max health by amount of damage just done\n    //\n    const CE_DESC = `Maximum health reduced by ${DAM_DONE}.`\n    let effectData = {\n        label: aItem.name,\n        icon: aItem.img,\n        flags: { dae: { itemData: aItem, stackable: true, macroRepeat: \"none\" } },\n        origin: LAST_ARG.uuid,\n        disabled: false,\n        flags: { \n            dae: { itemData: aItem }, \n            convenientDescription: CE_DESC\n        },\n        //duration: {seconds: 86400, hours: 24, startRound: gameRound, startTime: game.time.worldTime },\n        changes: [{ key: \"data.attributes.hp.max\", mode: jez.ADD, value: -DAM_DONE, priority: 20 }]\n    };\n    await MidiQOL.socket().executeAsGM(\"createEffects\", { actorUuid: tToken.actor.uuid, effects: [effectData] });\n    //---------------------------------------------------------------------------------------------\n    // Post a results message\n    //\n    msg = `<b>${tToken.name}</b>'s maximum health has been reduced by ${DAM_DONE}.`\n    postResults(msg)\n    return (true);\n}",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        }
      }
    },
    "autoanimations": {
      "version": 4,
      "killAnim": false,
      "animLevel": false,
      "options": {
        "ammo": false,
        "meleeType": "weapon",
        "variant": "physical",
        "enableCustom": false,
        "repeat": null,
        "delay": null,
        "scale": null,
        "menuType": "weapon"
      },
      "override": true,
      "sourceToken": {
        "enable": false
      },
      "targetToken": {
        "enable": false
      },
      "levels3d": {
        "type": ""
      },
      "macro": {
        "enable": false
      },
      "animType": "melee",
      "animation": "unarmedstrike",
      "color": "orange",
      "audio": {
        "a01": {
          "enable": false
        },
        "a02": {
          "enable": false
        }
      },
      "preview": false,
      "meleeSwitch": {
        "switchType": "on",
        "returning": false
      },
      "explosions": {
        "enable": false
      }
    },
    "midiProperties": {
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "rollOther": false,
      "critOther": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "toggleEffect": false
    },
    "core": {
      "sourceId": "Item.IK1LW3e96FkSXl0S"
    },
    "exportSource": {
      "world": "travels-in-barovia-ce",
      "system": "dnd5e",
      "coreVersion": "9.269",
      "systemVersion": "1.6.2"
    }
  }
}