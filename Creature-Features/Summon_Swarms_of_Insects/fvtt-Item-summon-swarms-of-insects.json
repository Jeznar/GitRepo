{
  "name": "Summon Swarms of Insects",
  "type": "feat",
  "img": "Tokens/Beasts/Swarm_of_Insects/Avatars/Swarm_of_Insects.08.png",
  "data": {
    "description": {
      "value": "<p>Summon 1d4 swarms of insects. A summoned swarm appears in an unoccupied space within 60 feet of of the summoner and acts as her ally. It remains until it dies or untilÂ  the summonor dismisses it as an action.</p>",
      "chat": "",
      "unidentified": ""
    },
    "source": "",
    "activation": {
      "type": "action",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": 0,
      "units": ""
    },
    "target": {
      "value": null,
      "width": null,
      "units": "",
      "type": ""
    },
    "range": {
      "value": null,
      "long": null,
      "units": ""
    },
    "uses": {
      "value": 0,
      "max": "0",
      "per": ""
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": null
    },
    "ability": "",
    "actionType": "other",
    "attackBonus": 0,
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": null
    },
    "damage": {
      "parts": [],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": null,
      "scaling": "spell"
    },
    "requirements": "",
    "recharge": {
      "value": 0,
      "charged": false
    }
  },
  "effects": [],
  "sort": 0,
  "flags": {
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Summon Swarms of Insects",
          "type": "script",
          "author": "ZjFlOWYxZjM5ZTZj",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "const MACRONAME = \"Summon_Swarms_of_Insects\"\n/*****************************************************************************************\n * Basic Structure for a rather complete macro\n * \n * 02/11/22 0.1 Creation of Macro\n *****************************************************************************************/\nconst MACRO = MACRONAME.split(\".\")[0]     // Trim of the version number and extension\njez.log(`============== Starting === ${MACRONAME} =================`);\nfor (let i = 0; i < args.length; i++) jez.log(`  args[${i}]`, args[i]);\nconst LAST_ARG = args[args.length - 1];\nlet aActor;         // Acting actor, creature that invoked the macro\nlet aToken;         // Acting token, token for creature that invoked the macro\nlet aItem;          // Active Item information, item invoking this macro\nif (LAST_ARG.tokenId) aActor = canvas.tokens.get(LAST_ARG.tokenId).actor; else aActor = game.actors.get(LAST_ARG.actorId);\nif (LAST_ARG.tokenId) aToken = canvas.tokens.get(LAST_ARG.tokenId); else aToken = game.actors.get(LAST_ARG.tokenId);\nif (args[0]?.item) aItem = args[0]?.item; else aItem = LAST_ARG.efData?.flags?.dae?.itemData;\nconst CUSTOM = 0, MULTIPLY = 1, ADD = 2, DOWNGRADE = 3, UPGRADE = 4, OVERRIDE = 5;\nlet msg = \"\";\nconst CREATURE_NAME = \"Swarm of Insects\"\n//----------------------------------------------------------------------------------\n// Run the main procedures, choosing based on how the macro was invoked\n//\nif (args[0]?.tag === \"OnUse\") await doOnUse();          // Midi ItemMacro On Use\njez.log(`============== Finishing === ${MACRONAME} =================`);\nreturn;\n/***************************************************************************************************\n *    END_OF_MAIN_MACRO_BODY\n *                                END_OF_MAIN_MACRO_BODY\n *                                                             END_OF_MAIN_MACRO_BODY\n ***************************************************************************************************\n * Perform the code that runs when this macro is invoked as an ItemMacro \"OnUse\"\n ***************************************************************************************************/\nasync function doOnUse() {\n  const FUNCNAME = \"doOnUse()\";\n  jez.log(`-------------- Starting --- ${MACRONAME} ${FUNCNAME} -----------------`);\n  let swarms = new Roll(`1d4`).evaluate({ async: false });\n  game.dice3d?.showForRoll(swarms);\n\n  for (let i = 1; i <= swarms.total; i++) {\n    await summonCritter(CREATURE_NAME, i)\n  }\n  let chatMessage = game.messages.get(args[args.length - 1].itemCardId);\n  msg = `<b>${aToken.name}</b> summons ${swarms.total} ${CREATURE_NAME}`\n\n  await jez.addMessage(chatMessage, { color: jez.randomDarkColor(), fSize: 14, msg: msg, tag: \"saves\" })\n  jez.log(`-------------- Finished --- ${MACRONAME} ${FUNCNAME} -----------------`);\n  return (true);\n}\n/***************************************************************************************************\n * Summon the actor and rename with a numeric suffix\n * \n * https://github.com/trioderegion/warpgate\n ***************************************************************************************************/\nasync function summonCritter(summons, number) {\n  let name = `${summons} ${number}`\n  // COL-THING: Updates the name of the summoned token via warpgate call\n  let updates = { token : {name: name} }\n  const OPTIONS = { controllingActor: aActor };\n  // COOL-THING: Plays VFX before and after the warpgate summon.\n  const CALLBACKS = {\n    pre: async (template) => {\n      preEffects(template);\n      await warpgate.wait(500);\n    },\n    post: async (template, token) => {\n      postEffects(template);\n      await warpgate.wait(500);\n      //greetings(template, token);\n    }\n  };\n  //updates = mergeObject(updates, choice);\n  await warpgate.spawn(summons, updates, CALLBACKS, OPTIONS);\n}\n/***************************************************************************************************\n * \n ***************************************************************************************************/\n async function preEffects(template) {\n  const VFX_FILE = \"modules/jb2a_patreon/Library/Generic/Explosion/Explosion_*_Green_400x400.webm\"\n  new Sequence()\n    .effect()\n    .file(VFX_FILE)\n    .atLocation(template)\n    .center()\n    .scale(1.0)\n    .play()\n}\n/***************************************************************************************************\n * \n ***************************************************************************************************/\n async function postEffects(template) {\n  const VFX_FILE = \"modules/jb2a_patreon/Library/Generic/Smoke/SmokePuff01_*_Dark_Green_400x400.webm\"\n  new Sequence()\n    .effect()\n      .file(VFX_FILE)\n      .atLocation(template)\n      .center()\n      .scale(1.0)\n    .play()\n}",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        }
      }
    },
    "magicitems": {
      "enabled": false,
      "equipped": false,
      "attuned": false,
      "charges": "0",
      "chargeType": "c1",
      "destroy": false,
      "destroyFlavorText": "reaches 0 charges: it crumbles into ashes and is destroyed.",
      "rechargeable": false,
      "recharge": "0",
      "rechargeType": "t1",
      "rechargeUnit": "r1",
      "sorting": "l"
    },
    "enhancedcombathud": {
      "set1p": false,
      "set2p": false,
      "set3p": false
    },
    "midi-qol": {
      "onUseMacroName": "ItemMacro"
    },
    "core": {
      "sourceId": "Item.pRytUt3NkSClUHmq"
    },
    "exportSource": {
      "world": "travels-in-barovia",
      "system": "dnd5e",
      "coreVersion": "0.8.9",
      "systemVersion": "1.5.3"
    }
  }
}