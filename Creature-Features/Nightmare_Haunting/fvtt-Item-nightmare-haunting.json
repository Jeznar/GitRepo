{
  "name": "Nightmare Haunting",
  "type": "feat",
  "img": "Icons_JGB/Monster_Features/Nightmare.png",
  "data": {
    "description": {
      "value": "<p>While on the Ethereal Plane, the hag magically touches a sleeping humanoid on the Material Plane. A <strong>protection from evil and good spell </strong>cast on the target prevents this contact, as does a <strong>magic circle</strong>.</p>\n<p>As long as the contact persists, the target has dreadful visions. If these visions last for at <span style=\"text-decoration:underline\">least 1 hour</span>, the target gains no benefit from its rest, and its hit point <strong>maximum is reduced by 5 (1d10)</strong>.</p>\n<p>If this effect reduces the target's hit point maximum to 0, the target dies, and if the target was evil, its soul is trapped in the hag's soul bag. The reduction to the target's hit point maximum lasts until removed by the <strong>greater restoration spell</strong> or similar magic.</p>\n<p>Â </p>",
      "chat": "",
      "unidentified": ""
    },
    "source": "",
    "activation": {
      "type": "action",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": 0,
      "units": ""
    },
    "target": {
      "value": null,
      "width": null,
      "units": "touch",
      "type": "enemy"
    },
    "range": {
      "value": null,
      "long": null,
      "units": "touch"
    },
    "uses": {
      "value": 1,
      "max": "1",
      "per": "day"
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": null
    },
    "ability": "",
    "actionType": "other",
    "attackBonus": 0,
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": null
    },
    "damage": {
      "parts": [
        [
          "1d10",
          "necrotic"
        ]
      ],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": null,
      "scaling": "spell"
    },
    "requirements": "",
    "recharge": {
      "value": 0,
      "charged": false
    },
    "attunement": null
  },
  "effects": [],
  "flags": {
    "magicitems": {
      "enabled": false,
      "equipped": false,
      "attuned": false,
      "charges": "0",
      "chargeType": "c1",
      "destroy": false,
      "destroyFlavorText": "reaches 0 charges: it crumbles into ashes and is destroyed.",
      "rechargeable": false,
      "recharge": "0",
      "rechargeType": "t1",
      "rechargeUnit": "r1",
      "sorting": "l"
    },
    "enhancedcombathud": {
      "set1p": false,
      "set2p": false,
      "set3p": false
    },
    "midi-qol": {
      "onUseMacroName": "[postActiveEffects]ItemMacro",
      "effectActivation": false
    },
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Nightmare Haunting",
          "type": "script",
          "author": "ZjFlOWYxZjM5ZTZj",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "const MACRONAME = \"Nightmare_Haunting.0.2.js\"\n/*****************************************************************************************\n * Applies a debuff to the target that reduces max HP.  No error checking performed,\n * No save is allowed.\n * \n * 02/18/22 0.1 Creation of Macro\n * 08/02/22 0.2 Add convenientDescription\n *****************************************************************************************/\nconst MACRO = MACRONAME.split(\".\")[0]     // Trim of the version number and extension\njez.log(`============== Starting === ${MACRONAME} =================`);\nfor (let i = 0; i < args.length; i++) jez.log(`  args[${i}]`, args[i]);\nconst LAST_ARG = args[args.length - 1];\nlet aActor;         // Acting actor, creature that invoked the macro\nlet aToken;         // Acting token, token for creature that invoked the macro\nlet aItem;          // Active Item information, item invoking this macro\nif (LAST_ARG.tokenId) aActor = canvas.tokens.get(LAST_ARG.tokenId).actor; else aActor = game.actors.get(LAST_ARG.actorId);\nif (LAST_ARG.tokenId) aToken = canvas.tokens.get(LAST_ARG.tokenId); else aToken = game.actors.get(LAST_ARG.tokenId);\nif (args[0]?.item) aItem = args[0]?.item; else aItem = LAST_ARG.efData?.flags?.dae?.itemData;\nconst CUSTOM = 0, MULTIPLY = 1, ADD = 2, DOWNGRADE = 3, UPGRADE = 4, OVERRIDE = 5;\nlet msg = \"\";\n//----------------------------------------------------------------------------------\n// Run the main procedures, choosing based on how the macro was invoked\n//\n//if (args[0] === \"off\") await doOff();                   // DAE removal\n//if (args[0] === \"on\") await doOn();                     // DAE Application\nif (args[0]?.tag === \"OnUse\") await doOnUse();          // Midi ItemMacro On Use\n//if (args[0] === \"each\") doEach();\t\t\t\t\t    // DAE removal\n//if (args[0]?.tag === \"DamageBonus\") doBonusDamage();    // DAE Damage Bonus\njez.log(`============== Finishing === ${MACRONAME} =================`);\nreturn;\n\n/***************************************************************************************************\n *    END_OF_MAIN_MACRO_BODY\n *                                END_OF_MAIN_MACRO_BODY\n *                                                             END_OF_MAIN_MACRO_BODY\n ***************************************************************************************************\n * Perform the code that runs when this macro is invoked as an ItemMacro \"OnUse\"\n ***************************************************************************************************/\nasync function doOnUse() {\n    const FUNCNAME = \"doOnUse()\";\n    let tToken = canvas.tokens.get(args[0]?.targets[0]?.id); // First Targeted Token, if any\n    let tActor = tToken?.actor;\n    jez.log(`-------------- Starting --- ${MACRONAME} ${FUNCNAME} -----------------`);\n    jez.log(`First Targeted Token (tToken) of ${args[0].targets?.length}, ${tToken?.name}`, tToken);\n    jez.log(`First Targeted Actor (tActor) ${tActor?.name}`, tActor)\n    //---------------------------------------------------------------------------------------------\n    // How much damage does the haunting do?\n    //\n    const GAME_RND = game.combat ? game.combat.round : 0;\n    let damageDetail = await LAST_ARG.damageDetail.find(i=> i.type === \"necrotic\");\n    let damageTotal = (damageDetail.damage-(damageDetail.DR ?? 0))*(damageDetail.damageMultiplier ?? 1);\n    //---------------------------------------------------------------------------------------------\n    // Launch the visual effect\n    //\n    runVFX(tToken)\n    //---------------------------------------------------------------------------------------------\n    // Apply the debuff effect\n    //\n    const CE_DESC = `Maximum health reduced by ${damageTotal}`\n    let effectData = {\n        label: aItem.name,\n        icon: aItem.img,\n        flags: { dae: { itemData: aItem, stackable: true, macroRepeat: \"none\"/*, specialDuration: [\"longRest\"]*/ } },\n        origin: aActor.uuid,\n        disabled: false,\n        flags: { \n            dae: { itemData: aItem }, \n            convenientDescription: CE_DESC\n        },\n        // duration: { rounds: 999999, startRound: GAME_RND },\n        changes: [{ key: \"data.attributes.hp.max\", mode: ADD, value: -damageTotal, priority: 20 }]\n    };\n    await MidiQOL.socket().executeAsGM(\"createEffects\", { actorUuid: tActor.uuid, effects: [effectData] });\n    //---------------------------------------------------------------------------------------------\n    // Post message to chat\n    //\n    // https://www.w3schools.com/tags/ref_colornames.asp\n    let chatMessage = game.messages.get(args[args.length - 1].itemCardId);\n    msg = `${tToken.name} has been afflicted by ${aItem.name}.  Maximum health has been reduced.`\n    jez.addMessage(chatMessage,{color:\"darkslategrey\",fSize:15,msg:msg,tag:\"saves\"})\n    jez.log(`-------------- Finished --- ${MACRONAME} ${FUNCNAME} -----------------`);\n    return (true);\n}\n/***************************************************************************************************\n * Perform the code that runs when this macro is invoked as an ItemMacro \"OnUse\"\n ***************************************************************************************************/\nasync function runVFX(token1) {\n    const VFX_NAME  = `${MACRO}-${aToken.id}`\n    const VFX_INTRO = \"modules/jb2a_patreon/Library/Generic/Magic_Signs/Runes/NecromancyRuneIntro_01_Regular_Red_400x400.webm\"\n    const VFX_LOOP  = \"modules/jb2a_patreon/Library/Generic/Magic_Signs/Runes/NecromancyRuneLoop_01_Regular_Red_400x400.webm\";\n    const VFX_OUTRO = \"modules/jb2a_patreon/Library/Generic/Magic_Signs/Runes/NecromancyRuneOutro_01_Regular_Red_400x400.webm\";\n    const VFX_OPACITY = 1.0;\n    const VFX_SCALE = 0.3;\n// COOL-THING: Intro & Outro VFX\n    new Sequence()\n    .effect()\n        .file(VFX_INTRO)\n        .attachTo(token1)\n        .scaleIn(0.25, 1000)    // Expand from 0.25 to VFXSCALE size over 1 second\n        .rotateIn(180, 1000)    // 1/2 Rotation over 1 second \n        .scale(VFX_SCALE)\n        .opacity(VFX_OPACITY)           \n        .waitUntilFinished(-500) // Negative wait time (ms) clips the effect to avoid fadeout\n    .effect()\n        .file(VFX_LOOP)\n        .attachTo(token1)\n        .scale(VFX_SCALE)\n        .opacity(VFX_OPACITY)  \n        .duration(3000)\n        .name(VFX_NAME)         // Give the effect a uniqueish name\n        .fadeIn(300)            // Fade in for specified time in milliseconds\n        .fadeOut(300)           // Fade out for specified time in milliseconds\n        //.extraEndDuration(-800)  // Time padding on exit to connect to Outro effect\n        .waitUntilFinished(-500) // Negative wait time (ms) clips the effect to avoid fadeout\n    .effect()\n        .file(VFX_OUTRO)\n        .scale(VFX_SCALE)\n        .scaleOut(0.25, 1000)   // Contract from VFXSCALE to 0.25 size over 1 second\n        .rotateOut(180, 1000)   // 1/2 Counter Rotation over 1 second\n        .opacity(VFX_OPACITY)  \n        .attachTo(token1)\n    .play()\n}",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        }
      }
    },
    "core": {
      "sourceId": "Item.904fkfCsBLdlWH94"
    },
    "midiProperties": {
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "rollOther": false,
      "critOther": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "toggleEffect": false
    },
    "exportSource": {
      "world": "travels-in-barovia-ce",
      "system": "dnd5e",
      "coreVersion": "9.269",
      "systemVersion": "1.6.2"
    }
  }
}