{
  "name": "Rutterkin Crippling Fear",
  "type": "feat",
  "img": "systems/dnd5e/icons/spells/horror-eerie-2.jpg",
  "data": {
    "description": {
      "value": "<p>Proximity to multiple Rutterkins is terrifying.</p>\n<section class=\"secret\">\n<p>When a creature that isn&rsquo;t a demon starts its turn <strong>within 30 feet of three or more rutterkins</strong>, it must make a <strong>DC 11 WIS Save</strong>. The creature has <strong>disadvantage on the save if</strong> it&rsquo;s within 30 feet of six or more rutterkins.</p>\n<p>On a successful save, the creature is <strong>immune to the Crippling Fear of all rutterkins for 24 hours</strong>. On a failed save, the creature becomes<strong> frightened of the rutterkins for 1 minute</strong>. While frightened in this way, the creature is restrained.</p>\n<p>At the end of each of the frightened creature&rsquo;s turns, it can <strong>repeat the saving throw</strong>, ending the effect on itself on a success.</p>\n</section>",
      "chat": "",
      "unidentified": ""
    },
    "source": "Mordenkainenâ€™s Tome of Foes pg 136",
    "activation": {
      "type": "special",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": null,
      "units": ""
    },
    "target": {
      "value": null,
      "width": null,
      "units": "",
      "type": ""
    },
    "range": {
      "value": null,
      "long": null,
      "units": ""
    },
    "uses": {
      "value": 0,
      "max": "0",
      "per": ""
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": null
    },
    "ability": "",
    "actionType": "other",
    "attackBonus": 0,
    "chatFlavor": "",
    "critical": null,
    "damage": {
      "parts": [],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": 11,
      "scaling": "wis"
    },
    "requirements": "",
    "recharge": {
      "value": null,
      "charged": false
    }
  },
  "effects": [],
  "flags": {
    "ddbimporter": {
      "dndbeyond": {}
    },
    "monsterMunch": {
      "titleHTML": "<em><strong>Crippling Fear.</strong></em>",
      "fullName": "Crippling Fear."
    },
    "midi-qol": {
      "effectActivation": false,
      "onUseMacroName": "[postActiveEffects]ItemMacro"
    },
    "midiProperties": {
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "rollOther": false,
      "critOther": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "toggleEffect": false
    },
    "magicitems": {
      "enabled": false,
      "equipped": false,
      "attuned": false,
      "charges": "0",
      "chargeType": "c1",
      "destroy": false,
      "destroyFlavorText": "reaches 0 charges: it crumbles into ashes and is destroyed.",
      "rechargeable": false,
      "recharge": "0",
      "rechargeType": "t1",
      "rechargeUnit": "r1",
      "sorting": "l"
    },
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Rutterkin Crippling Fear",
          "type": "script",
          "author": "ZjFlOWYxZjM5ZTZj",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "const MACRONAME = \"Rutterkin_Crippling_Fear.0.1.js\"\nconst TL = 0;                               // Trace Level for this macro\n/*********1*********2*********3*********4*********5*********6*********7*********8*********9*********0\n * Implement Rutterkin's Crippling Fear.  This ability should be used at the start of each creature's \n * turn when they are close enough to Rutterkins (3+) to be potentially affected.\n * \n *   When a creature that isn't a demon starts its turn within 30 feet of three or more rutterkins, \n *   it must make a DC 11 WIS Save. The creature has disadvantage on the save if it's within 30 feet \n *   of six or more rutterkins. On a successful save, the creature is immune to the Crippling Fear of \n *   all rutterkins for 24 hours. On a failed save, the creature becomes frightened of the rutterkins \n *   for 1 minute. While frightened in this way, the creature is restrained.\n * \n * 10/02/23 0.1 Creation of Macro\n *********1*********2*********3*********4*********5*********6*********7*********8*********9*********/\nconst MACRO = MACRONAME.split(\".\")[0]       // Trim off the version number and extension\nconst TAG = `${MACRO} |`\nlet msg = \"\";                               // Global message string\n//---------------------------------------------------------------------------------------------------\nif (TL > 1) jez.log(`${TAG} === Starting ===`);\nif (TL > 2) for (let i = 0; i < args.length; i++) jez.log(`  args[${i}]`, args[i]);\nconst LAST_ARG = args[args.length - 1]; // See https://gitlab.com/tposney/dae#lastarg for contents\n//---------------------------------------------------------------------------------------------------\n// Set the value for the Active Token (aToken)\nlet aToken;\nif (LAST_ARG.tokenId) aToken = canvas.tokens.get(LAST_ARG.tokenId);\nelse aToken = game.actors.get(LAST_ARG.tokenId);\nlet aActor = aToken.actor;\n//\n// Set the value for the Active Item (aItem)\nlet aItem;\nif (args[0]?.item) aItem = args[0]?.item;\nelse aItem = LAST_ARG.efData?.flags?.dae?.itemData;\n//---------------------------------------------------------------------------------------------------\n// Set Macro specific globals\n//\nconst EFFECT_NAME = \"Crippling Fear of Rutterkins\"\nconst EFFECT_IMMUNE_NAME = \"Crippling Fear Immune\"\nconst EFFECT_IMAGE = 'systems/dnd5e/icons/spells/horror-red-2.jpg'\nconst EFFECT_IMMUNE_IMAGE = 'systems/dnd5e/icons/spells/horror-eerie-2.jpg'\nlet ceDesc = \"\"\nconst GAME_RND = game.combat ? game.combat.round : 0;\nconst SAVE_DC = 11\nconst SAVE_STAT = 'wis'\n//---------------------------------------------------------------------------------------------------\n// Run the main procedures, choosing based on how the macro was invoked\n//\nif (args[0]?.tag === \"OnUse\") await doOnUse({ traceLvl: TL });     // Midi ItemMacro On Use\nif (TL > 1) jez.log(`=== Finished === ${MACRONAME} ===`);\n/*********1*********2*********3*********4*********5*********6*********7*********8*********9*********0\n *    END_OF_MAIN_MACRO_BODY\n *                                END_OF_MAIN_MACRO_BODY\n *                                                             END_OF_MAIN_MACRO_BODY\n ****************************************************************************************************\n * Post results to the chat card\n *********1*********2*********3*********4*********5*********6*********7*********8*********9*********/\nfunction postResults(msg) {\n    const FUNCNAME = \"postResults(msg)\";\n    const FNAME = FUNCNAME.split(\"(\")[0]\n    const TAG = `${MACRO} ${FNAME} |`\n    if (TL > 1) jez.log(`${TAG} --- Starting ---`);\n    if (TL > 2) jez.log(\"postResults Parameters\", \"msg\", msg)\n    //-----------------------------------------------------------------------------------------------\n    let chatMsg = game.messages.get(args[args.length - 1].itemCardId);\n    jez.addMessage(chatMsg, { color: jez.randomDarkColor(), fSize: 14, msg: msg, tag: \"saves\" });\n    if (TL > 1) jez.log(`${TAG}--- Finished ---`);\n}\n/*********1*********2*********3*********4*********5*********6*********7*********8*********9*********0\n * Do the things that need doing\n *********1*********2*********3*********4*********5*********6*********7*********8*********9*********/\nasync function doOnUse(options = {}) {\n    const FUNCNAME = \"doOnUse()\";\n    const FNAME = FUNCNAME.split(\"(\")[0]\n    const TAG = `${MACRO} ${FNAME} |`\n    const TL = options.traceLvl ?? 0\n    if (TL === 1) jez.log(`${TAG} --- Starting ---`);\n    if (TL > 1) jez.log(`${TAG} --- Starting --- ${FUNCNAME} ---`, \"options\", options);\n    await jez.wait(100)\n    //-----------------------------------------------------------------------------------------------\n    // Function variables\n    //\n    let tToken = canvas.tokens.get(args[0]?.targets[0]?.id); // First Targeted Token, if any\n    let tActor = tToken?.actor;\n    //-----------------------------------------------------------------------------------------------\n    // 1. If our target is a demon or already immune, it is immune.  Also skip if already affected.\n    //\n    let race = jez.getRace(tToken)\n    if (TL > 1) jez.log(`${TAG} | Target race`,race)\n    if (race.includes(\"demon\")) {\n        postResults(`${tToken.name} is immune (${race})`)\n        return; \n    }\n    let subRace = jez.getRaceSubType(tToken)\n    if (TL > 1) jez.log(`${TAG} | Target subRace`,subRace)\n    if (subRace.includes(\"demon\")) {\n        postResults(`${tToken.name} is immune (${subRace})`)\n        return; \n    }\n    if (jezcon.hasCE(EFFECT_IMMUNE_NAME, tToken.actor.uuid, { traceLvl: 0 })) {\n        if (TL > 1) jez.log(`${TAG} ${tToken.name} is already.`)\n        return postResults(`${tToken.name} is immune`)\n    }\n    if (jezcon.hasCE(EFFECT_NAME, tToken.actor.uuid, { traceLvl: 0 })) {\n        if (TL > 1) jez.log(`${TAG} ${tToken.name} is already affected.`)\n        return postResults(`${tToken.name} is already affected.`)\n    }\n    //-----------------------------------------------------------------------------------------------\n    // 2. Find Rutterkins that are within 30 feet of target\n    //\n    let returned = await jez.inRangeTargets(tToken, 30, { traceLvl: 0 });\n    let rutterkinCount = 0\n    if (returned.length === 0) return jez.badNews(`No tokens in range`, \"i\")\n    for (let i = 0; i < returned.length; i++) {\n        // I'll assume if the string rutterkin is in the creature's actor name it is a Rutterkin\n        jez.log(`${FNAME} | ${i} Tokens: ${returned[i].actor.name}`)\n        if (returned[i].actor.name.toLowerCase().includes('rutterkin')) rutterkinCount++;\n    }\n    if (TL > 1) jez.log(`${FNAME} | Rutterkin count`, rutterkinCount)\n    if (rutterkinCount < 3) return postResults(`Not enough Rutterkins near ${tToken.name} to worry about.`)\n    //-----------------------------------------------------------------------------------------------\n    // 3. Set disadvantage boolean, 6+ rutterkins is true\n    //\n    const HAS_DISADVANTAGE = rutterkinCount >= 6 ? true : false\n    if (TL>1) jez.log(`${FNAME} | Disadvantage on saving throw`, HAS_DISADVANTAGE)\n    //-----------------------------------------------------------------------------------------------\n    // 4. Roll saving throw for the target \n    //\n    if (HAS_DISADVANTAGE)\n        save = (await tToken.actor.rollAbilitySave(SAVE_STAT, { disadvantage: true, chatMessage: true, fastforward: true }));\n    else\n        save = (await tToken.actor.rollAbilitySave(SAVE_STAT, { flavor: null, chatMessage: true, fastforward: true }));\n    //-----------------------------------------------------------------------------------------------\n    // 5. On a save, grant immunity to the target, on failure give bad stuff\n    //\n    if (save.total >= SAVE_DC) {    // Save was made\n        applyImmune(tToken)\n        postResults(`${tToken.name} resists the effect and is now immune to it for some time.`)\n    } else {\n        let aEffect = await tActor?.effects?.find(ef => ef?.data?.label === EFFECT_NAME)\n        if (aEffect) {\n            await aEffect.delete(); // clear prexisiting effect\n            await jez.wait(250)\n        }\n        applyFear(tToken)\n        postResults(`${tToken.name} is effected by ${aItem.name}.`)\n    }\n}\n/***************************************************************************************************\n * Apply the Fear condition to a token, adding CEDesc\n ***************************************************************************************************/\nasync function applyFear(token) {\n    const CE_DESC = `Frightened of Rutterkins`\n    let effectData = [{\n        label: EFFECT_NAME,\n        icon: EFFECT_IMAGE,\n        origin: LAST_ARG.uuid,\n        disabled: false,\n        flags: {\n            dae: { stackable: false },\n            convenientDescription: CE_DESC,\n            isConvenient: true,\n            isCustomConvenient: true\n        },\n        duration: { rounds: 10, seconds: 60, startRound: GAME_RND, startTime: game.time.worldTime },\n        changes: [\n            { key: `macro.CE`, mode: jez.CUSTOM, value: `Restrained`, priority: 20 },\n        ]\n    }];\n    await MidiQOL.socket().executeAsGM(\"createEffects\", { actorUuid: token.actor.uuid, effects: effectData });\n    runVFX(token)\n}\n/***************************************************************************************************\n * Apply the Immunity condition to a token, adding CEDesc\n ***************************************************************************************************/\nasync function applyImmune(token) {\n    const CE_DESC = `Immune to ${aToken.name}'s ${EFFECT_NAME} for some time.`\n    let effectData = [{\n        label: EFFECT_IMMUNE_NAME,\n        icon: EFFECT_IMMUNE_IMAGE,\n        origin: LAST_ARG.uuid,\n        disabled: false,\n        duration: { rounds: 14400, seconds: 86400, startRound: GAME_RND, startTime: game.time.worldTime },\n        flags: {\n            dae: { stackable: false },\n            convenientDescription: CE_DESC,\n            isConvenient: true,\n            isCustomConvenient: true\n        },\n    }];\n    await MidiQOL.socket().executeAsGM(\"createEffects\", { actorUuid: token.actor.uuid, effects: effectData });\n}\n/***************************************************************************************************\n * Run Frightened VFX on Target\n ***************************************************************************************************/\nasync function runVFX(target) {\n    const VFX_LOOP = \"modules/jb2a_patreon/Library/Generic/UI/IconHorror_*_200x200.webm\"\n    new Sequence()\n        .effect()\n        .fadeIn(1000)\n        .fadeOut(1000)\n        .file(VFX_LOOP)\n        .atLocation(target)\n        .scaleToObject(1.25)\n        .play();\n}",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        }
      }
    },
    "core": {
      "sourceId": "Item.4TjXA8JxZf7psg1m"
    },
    "exportSource": {
      "world": "travels-in-barovia-ce",
      "system": "dnd5e",
      "coreVersion": "9.280",
      "systemVersion": "1.6.2"
    }
  }
}