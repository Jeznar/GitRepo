{
  "name": "Rot Grub Bites",
  "type": "weapon",
  "img": "icons/commodities/bones/teeth-sharp-white.webp",
  "data": {
    "description": {
      "value": "<p>%TOKENNAME%' many tiny mouths bite at its victim.</p>\n<section class=\"secret\">\n<p><em>Melee Weapon Attack:</em> +0 to hit, reach 0 ft., one creature in the swarm&rsquo;s space. <em>Hit:</em> The target is infested by 1d4 rot grubs. At the start of each of the target&rsquo;s turns, the target takes 1d6 piercing damage per rot grub infesting it. Applying fire to the bite wound before the end of the target&rsquo;s next turn deals 1 fire damage to the target and kills these rot grubs. After this time, these rot grubs are too far under the skin to be burned.</p>\n<p>If a target infested by rot grubs ends its turn with 0 hit points, it dies as the rot grubs burrow into its heart and kill it. Any effect that cures disease kills all rot grubs infesting the target.</p>\n<hr />\n<p><strong>FoundryVTT</strong>: Damaga over time element is automated.&nbsp; The cure conditions need to be handled manually by removing the DAE effect on the target.</p>\n</section>",
      "chat": "",
      "unidentified": ""
    },
    "source": "Volo's Guide to Monsters pg 208",
    "quantity": 1,
    "weight": 0,
    "price": 0,
    "attunement": 0,
    "equipped": true,
    "rarity": "",
    "identified": true,
    "activation": {
      "type": "special",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": null,
      "units": "inst"
    },
    "target": {
      "value": null,
      "width": null,
      "units": "",
      "type": ""
    },
    "range": {
      "value": 0,
      "long": null,
      "units": "ft"
    },
    "uses": {
      "value": 0,
      "max": "0",
      "per": ""
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": null
    },
    "ability": "dex",
    "actionType": "mwak",
    "attackBonus": "0",
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": ""
    },
    "damage": {
      "parts": [],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": null,
      "scaling": "flat"
    },
    "armor": {
      "value": 10
    },
    "hp": {
      "value": 0,
      "max": 0,
      "dt": null,
      "conditions": ""
    },
    "weaponType": "natural",
    "baseItem": "",
    "properties": {
      "amm": false,
      "fin": false,
      "fir": false,
      "foc": false,
      "hvy": false,
      "lgt": false,
      "lod": false,
      "rch": false,
      "rel": false,
      "ret": false,
      "spc": false,
      "thr": false,
      "two": false,
      "ver": false,
      "ada": false,
      "mgc": false,
      "sil": false
    },
    "proficient": true,
    "requirements": "",
    "recharge": {
      "value": null,
      "charged": null
    }
  },
  "effects": [],
  "flags": {
    "ddbimporter": {
      "dndbeyond": {}
    },
    "monsterMunch": {
      "titleHTML": "<strong>Bites.</strong>",
      "fullName": "Bites."
    },
    "midi-qol": {
      "fumbleThreshold": null,
      "effectActivation": false,
      "onUseMacroName": "[postActiveEffects]ItemMacro"
    },
    "midiProperties": {
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "rollOther": false,
      "critOther": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "toggleEffect": false
    },
    "magicitems": {
      "enabled": false,
      "equipped": false,
      "attuned": false,
      "charges": "0",
      "chargeType": "c1",
      "destroy": false,
      "destroyFlavorText": "reaches 0 charges: it crumbles into ashes and is destroyed.",
      "rechargeable": false,
      "recharge": "0",
      "rechargeType": "t1",
      "rechargeUnit": "r1",
      "sorting": "l"
    },
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Rot Grub Bites",
          "type": "script",
          "author": "ZjFlOWYxZjM5ZTZj",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "const MACRONAME = \"Rot_Grub_Bites.0.1.js\"\n/*********1*********2*********3*********4*********5*********6*********7*********8*********9*********0*********1*********2*********3*\n * Implement the Rot Grub bite effect.\n * \n *   On a Hit: The target is infested by 1d4 rot grubs. At the start of each of the target's turns, the target takes 1d6 piercing \n *   damage per rot grub infesting it. Applying fire to the bite wound before the end of the target's next turn deals 1 fire damage \n *   to the target and kills these rot grubs. After this time, these rot grubs are too far under the skin to be burned.\n * \n * This macro needs to:\n *  1. Check if the target was hit, if not, exit\n *  2. Determine how many grubs are inserted by the bite (1d4)\n *  3. Add a DAE overtime effect to roll the damage at start of vistims turns\n *  \n * The two cure options are to be handled manually.\n * \n * 09/15/23 0.1 Creation of Macro\n *********1*********2*********3*********4*********5*********6*********7*********8*********9*********0*********1*********2*********3*/\nconst MACRO = MACRONAME.split(\".\")[0]       // Trim off the version number and extension\nconst TAG = `${MACRO} |`\nconst TL = 5;                               // Trace Level for this macro\nlet msg = \"\";                               // Global message string\n//-----------------------------------------------------------------------------------------------------------------------------------\nif (TL > 0) jez.trace(`${TAG} === Starting ===`);\nif (TL > 1) for (let i = 0; i < args.length; i++) jez.trace(`  args[${i}]`, args[i]);\n//-----------------------------------------------------------------------------------------------------------------------------------\n// Set standard variables\n//\nconst L_ARG = args[args.length - 1]; // See https://gitlab.com/tposney/dae#lastarg for contents\nlet aToken = (L_ARG.tokenId) ? canvas.tokens.get(L_ARG.tokenId) : game.actors.get(L_ARG.tokenId)\nlet aActor = aToken.actor;\nlet aItem = (args[0]?.item) ? args[0]?.item : L_ARG.efData?.flags?.dae?.itemData\nconst VERSION = Math.floor(game.VERSION);\nconst GAME_RND = game.combat ? game.combat.round : 0;\n//-----------------------------------------------------------------------------------------------------------------------------------\n// Set Macro specific globals\n//\n\n//-----------------------------------------------------------------------------------------------------------------------------------\n// Run the main procedures, choosing based on how the macro was invoked\n//\nif (args[0]?.tag === \"OnUse\") await doOnUse({ traceLvl: TL });          // Midi ItemMacro On Use\nif (TL > 1) jez.trace(`${TAG} === Finished ===`);\n/*********1*********2*********3*********4*********5*********6*********7*********8*********9*********0*********1*********2*********3*\n *    END_OF_MAIN_MACRO_BODY\n *                                END_OF_MAIN_MACRO_BODY\n *                                                             END_OF_MAIN_MACRO_BODY\n ***********************************************************************************************************************************\n * Check the setup of things.  Must hit exactly one target.\n *********1*********2*********3*********4*********5*********6*********7*********8*********9*********0*********1*********2*********3*/\nasync function preCheck() {\n    if (args[0]?.targets?.length !== 1)\n        return jez.badNews(`Illegal number of targets.  ${args[0]?.targets?.length} were targeted.`, 'w')\n    if (args[0].hitTargets.length !== 1)\n        return jez.badNews(`Target was not hit, no effect.`, 'i')\n    return true\n}\n/*********1*********2*********3*********4*********5*********6*********7*********8*********9*********0*********1*********2*********3*\n * Post results to the chat card\n *********1*********2*********3*********4*********5*********6*********7*********8*********9*********0*********1*********2*********3*/\nfunction postResults(msg) {\n    const FUNCNAME = \"postResults(msg)\";\n    const FNAME = FUNCNAME.split(\"(\")[0]\n    const TAG = `${MACRO} ${FNAME} |`\n    if (TL > 1) jez.trace(`${TAG} --- Starting ---`);\n    if (TL > 2) jez.trace(\"postResults Parameters\", \"msg\", msg)\n    //-------------------------------------------------------------------------------------------------------------------------------\n    let chatMsg = game.messages.get(args[args.length - 1].itemCardId);\n    jez.addMessage(chatMsg, { color: jez.randomDarkColor(), fSize: 14, msg: msg, tag: \"saves\" });\n    //-------------------------------------------------------------------------------------------------------------------------------\n    // \n    if (TL > 1) jez.trace(`${TAG} --- Finished ---`);\n}\n/*********1*********2*********3*********4*********5*********6*********7*********8*********9*********0*********1*********2*********3*\n * Perform the code that runs when this macro is invoked as an ItemMacro \"OnUse\"\n *********1*********2*********3*********4*********5*********6*********7*********8*********9*********0*********1*********2*********3*/\nasync function doOnUse(options = {}) {\n    const FUNCNAME = \"doOnUse(options={})\";\n    const FNAME = FUNCNAME.split(\"(\")[0]\n    const TAG = `${MACRO} ${FNAME} |`\n    const TL = options.traceLvl ?? 0\n    if (TL === 1) jez.trace(`${TAG} --- Starting ---`);\n    if (TL > 1) jez.trace(`${TAG} --- Starting --- ${FUNCNAME} ---`, \"options\", options);\n    await jez.wait(100)\n    //-------------------------------------------------------------------------------------------------------------------------------\n    // 1.  Verifies that one target was hit\n    if (!await preCheck()) return (false);  \n    let tToken = canvas.tokens.get(args[0]?.targets[0]?.id); // First Targeted Token, if any\n    let tActor = tToken?.actor;\n    //-------------------------------------------------------------------------------------------------------------------------------\n    // 2. Determine how many rot grubs have infected our victim\n    //\n    const NUM_GRUBS_OBJ = new Roll(`1d4`).evaluate({ async: false });\n    const SPEAKER = ChatMessage.getSpeaker({ actor });\n    NUM_GRUBS_OBJ.toMessage({ speaker: SPEAKER });\n    const NUM_GRUBS = NUM_GRUBS_OBJ.total\n    const GRUB_STR = NUM_GRUBS === 1 ? `Rot Grub` : `Rot Grubs`;\n    if (TL > 1) jez.trace(`${TAG} Inserted ${NUM_GRUBS} Rot Grubs into ${tToken.name}`)\n    //-------------------------------------------------------------------------------------------------------------------------------\n    // 2a. Check for immunity to disease, if immune no effect\n    //\n    if (TL > 1) jez.trace(`${TAG} ${tToken.name} condition immunities: `, tToken.actor.data.data.traits?.ci?.value)\n    if (tToken.actor.data.data.traits?.ci?.value.includes('diseased'))\n        return postResults(`${tToken.name}'s body quickly destroys ${NUM_GRUBS} ${GRUB_STR} which had penetrated.`)\n    //-------------------------------------------------------------------------------------------------------------------------------\n    // 3. Apply a DoT effect\n    //\n    const CE_DESC = `${NUM_GRUBS} ${GRUB_STR} burrowing deeper into flesh.`\n    let overTimeVal = `turn=start,label=${NUM_GRUBS} ${GRUB_STR} burrowing,damageRoll=${NUM_GRUBS}d6,damageType=piercing`\n    let effectData = {\n        label: aItem.name,\n        icon: 'Tokens/Monsters/Rot_Grub/Rot_grub-Avatar.webp',\n        origin: L_ARG.uuid,\n        disabled: false,\n        flags: {\n            convenientDescription: CE_DESC,\n            core: { statusId: 'Force Display' }\n        },\n        changes: [\n            { key: `flags.midi-qol.OverTime`, mode: jez.OVERRIDE, value: overTimeVal, priority: 20 },\n        ]\n    };\n    await MidiQOL.socket().executeAsGM(\"createEffects\", { actorUuid: tToken.actor.uuid, effects: [effectData] });\n    //-------------------------------------------------------------------------------------------------------------------------------\n    // Comments\n    //\n    if (TL > 3) jez.trace(`${TAG} More Detailed Trace Info.`)\n    //-------------------------------------------------------------------------------------------------------------------------------\n    // \n    msg = `${tToken.name} has ${NUM_GRUBS} rot grubs burrowing into their flesh.`\n    postResults(msg)\n    if (TL > 0) jez.trace(`${TAG} --- Finished ---`);\n    return true;\n}",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        }
      }
    },
    "core": {
      "sourceId": "Item.s1g6bxZhdkWns4h8"
    },
    "exportSource": {
      "world": "travels-in-barovia-ce",
      "system": "dnd5e",
      "coreVersion": "9.280",
      "systemVersion": "1.6.2"
    }
  }
}