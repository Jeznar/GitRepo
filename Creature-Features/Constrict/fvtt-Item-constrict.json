{
  "name": "Constrict",
  "type": "weapon",
  "img": "Icons_JGB/Monster_Features/Constricting.png",
  "data": {
    "description": {
      "value": "<p>Melee Weapon  Reach 10 ft., one target. Hit : 9 (2d6 + @mod) bludgeoning damage.</p>\n<ul>\n<li>A large or smaller target is automatically @JournalEntry[QAwq9CcEg3fh3qZ3]{Grappled}</li>\n<li>The grappled target is also @JournalEntry[CZWEqV2uG9aDWJnD]{Restrained}</li>\n<li>Until this grapple ends, user of this ability is @JournalEntry[KmWFRyfFImaXM7O9]{Grappling}</li>\n<li>The target is this ability  can’t constrict another target.</li>\n</ul>\n<p><strong>FoundryVTT</strong>: Escape is handled per the nirmal Grappled rules, not a Save DC as defined in RAW.</p>\n<p> </p>\n<p> </p>",
      "chat": "",
      "unidentified": ""
    },
    "source": "",
    "quantity": 1,
    "weight": 1,
    "price": 0,
    "attunement": 0,
    "equipped": true,
    "rarity": "",
    "identified": true,
    "activation": {
      "type": "action",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": 0,
      "units": ""
    },
    "target": {
      "value": null,
      "width": null,
      "units": "",
      "type": ""
    },
    "range": {
      "value": 10,
      "long": null,
      "units": "ft"
    },
    "uses": {
      "value": 0,
      "max": "0",
      "per": ""
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": null
    },
    "ability": "str",
    "actionType": "mwak",
    "attackBonus": "0",
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": ""
    },
    "damage": {
      "parts": [
        [
          "2d6 + @mod",
          "bludgeoning"
        ]
      ],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": null,
      "scaling": "spell"
    },
    "armor": {
      "value": 10
    },
    "hp": {
      "value": 0,
      "max": 0,
      "dt": null,
      "conditions": ""
    },
    "weaponType": "natural",
    "baseItem": "",
    "properties": {
      "amm": false,
      "hvy": false,
      "fin": false,
      "fir": false,
      "foc": false,
      "lgt": false,
      "rch": true,
      "rel": false,
      "ret": false,
      "spc": false,
      "thr": false,
      "two": false,
      "ver": false,
      "ada": false,
      "lod": false,
      "mgc": false,
      "sil": false,
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "critOther": false
    },
    "proficient": true
  },
  "effects": [],
  "sort": 0,
  "flags": {
    "enhancedcombathud": {
      "set1p": false,
      "set2p": false,
      "set3p": false,
      "set1s": false,
      "set2s": false,
      "set3s": false
    },
    "midi-qol": {
      "criticalThreshold": "20",
      "onUseMacroName": "ItemMacro"
    },
    "magicitems": {
      "enabled": false,
      "equipped": false,
      "attuned": false,
      "charges": "0",
      "chargeType": "c1",
      "destroy": false,
      "destroyFlavorText": "reaches 0 charges: it crumbles into ashes and is destroyed.",
      "rechargeable": false,
      "recharge": "0",
      "rechargeType": "t1",
      "rechargeUnit": "r1",
      "sorting": "l"
    },
    "betterCurses": {
      "isCurse": false,
      "curseName": "",
      "formula": "",
      "mwak": false,
      "rwak": false,
      "msak": false,
      "rsak": false
    },
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Constrict",
          "type": "script",
          "author": "ZjFlOWYxZjM5ZTZj",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "const MACRONAME = \"Constrict\"\n/*****************************************************************************************\n * Vine Blight's Constrict Attack\n * \n *  Melee Weapon Attack: +4, Reach 10 ft., one target. Hit: 9 (2d6 + 2) bludgeoning damage, \n *  and a Large or smaller target is grappled, escape DC 12. Until this grapple ends, the \n *  target is restrained, and the blight can’t constrict another target.\n * \n * An interesting element of this macro is that it teaches the effects to know about their\n * partner and remove it when either partner is removed.\n * \n * 02/11/22 0.1 Creation of Macro\n * 05/03/22 0.2 JGB Updated for FoundryVTT 9.x\n *****************************************************************************************/\nconst MACRO = MACRONAME.split(\".\")[0]     // Trim of the version number and extension\njez.log(`============== Starting === ${MACRONAME} =================`);\nfor (let i = 0; i < args.length; i++) jez.log(`  args[${i}]`, args[i]);\nconst LAST_ARG = args[args.length - 1];\nlet aActor;         // Acting actor, creature that invoked the macro\nlet aToken;         // Acting token, token for creature that invoked the macro\nlet aItem;          // Active Item information, item invoking this macro\nif (LAST_ARG.tokenId) aActor = canvas.tokens.get(LAST_ARG.tokenId).actor; else aActor = game.actors.get(LAST_ARG.actorId);\nif (LAST_ARG.tokenId) aToken = canvas.tokens.get(LAST_ARG.tokenId); else aToken = game.actors.get(LAST_ARG.tokenId);\nif (args[0]?.item) aItem = args[0]?.item; else aItem = LAST_ARG.efData?.flags?.dae?.itemData;\njez.log(\"aItem\", aItem)\nconst CUSTOM = 0, MULTIPLY = 1, ADD = 2, DOWNGRADE = 3, UPGRADE = 4, OVERRIDE = 5;\nlet msg = \"\";\nlet errorMsg = \"\";\nconst GRAPPLED_ICON = \"Icons_JGB/Conditions/grappling.svg\"\nconst GRAPPLING_ICON = \"Icons_JGB/Conditions/grappling.png\"\nconst GRAPPLED_COND = \"Grappled\"\nconst GRAPPLING_COND = \"Grappling\"\nconst LARGE_VALUE = 4\n// COOL-THING: Journal entries looked up by name and formatted as links for chat cards\nconst GRAPPLED_JRNL = `@JournalEntry[${game.journal.getName(\"Grappled\").id}]{Grappled}`\nconst GRAPPLING_JRNL = `@JournalEntry[${game.journal.getName(\"Grappling\").id}]{Grappling}`\nconst RESTRAINED_JRNL = `@JournalEntry[${game.journal.getName(\"Restrained\").id}]{Restrained}`\nconst GAME_RND = game.combat ? game.combat.round : 0;\nconst VFX_LOOP = \"modules/jb2a_patreon/Library/1st_Level/Entangle/Entangle_01_Regular_Green02_400x400.webm\"\nconst VFX_NAME = `${MACRO}`\nconst VFX_OPACITY = 1.0;\nconst VFX_SCALE = 0.4;\n// const SAVE_TYPE = \"wis\"\n// const SAVE_DC = aActor.data.data.attributes.spelldc;\n// const FLAVOR = `${CONFIG.DND5E.abilities[SAVE_TYPE]} <b>DC${SAVE_DC}</b> to avoid <b>${aToken.name}'s ${aItem.name}</b>`;\n\n//----------------------------------------------------------------------------------\n// Run the preCheck function to make sure things are setup as best I can check them\n//\nif (args[0]?.tag === \"OnUse\" && !preCheck()) return\n//----------------------------------------------------------------------------------\n// Run the main procedures, choosing based on how the macro was invoked\n//\nif (args[0] === \"off\") await doOff();                       // DAE removal\n// if (args[0] === \"on\") await doOn();                      // DAE Application\nif (args[0]?.tag === \"OnUse\") await doOnUse();              // Midi ItemMacro On Use\n// if (args[0] === \"each\") doEach();\t\t\t\t\t    // DAE removal\n// if (args[0]?.tag === \"DamageBonus\") doBonusDamage();     // DAE Damage Bonus\njez.log(`============== Finishing === ${MACRONAME} =================`);\njez.log(\"\")\nreturn;\n\n/***************************************************************************************************\n *    END_OF_MAIN_MACRO_BODY\n *                                END_OF_MAIN_MACRO_BODY\n *                                                             END_OF_MAIN_MACRO_BODY\n ***************************************************************************************************/\n\n/***************************************************************************************************\n * Check the setup of things. \n ***************************************************************************************************/\nfunction preCheck() {\n    //----------------------------------------------------------------------------------\n    // Make sure a ONE target was selected and hit before continuing\n    //\n    if (args[0].targets.length !== 1) {     // If not exactly one target, return\n        msg = `Must target exactly one target.  ${args[0].targets.length} were targeted.`\n        ui.notifications.warn(msg)\n        jez.log(msg)\n        return(false);\n    }\n    if (LAST_ARG.hitTargets.length === 0) {  // If target was missed, return\n        msg = `Target was missed.`\n        // ui.notifications.info(msg)\n        return(false);\n    }\n    return (true)\n}\n/***************************************************************************************************\n * Perform the code that runs when this macro is invoked as an ItemMacro \"OnUse\"\n ***************************************************************************************************/\n async function doOnUse() {\n    const FUNCNAME = \"doOnUse()\";\n    let tToken = canvas.tokens.get(args[0]?.targets[0]?.id); // First Targeted Token, if any\n    let tActor = tToken?.actor;\n    jez.log(`-------------- Starting --- ${MACRONAME} ${FUNCNAME} -----------------`);\n    jez.log(`First Targeted Token (tToken) of ${args[0].targets?.length}, ${tToken?.name}`, tToken);\n    jez.log(`First Targeted Actor (tActor) ${tActor?.name}`, tActor)\n    let chatMsg = game.messages.get(args[args.length - 1].itemCardId);\n    //----------------------------------------------------------------------------------\n    // If target is larger than size large, can not be constricted.\n    //\n    let tTokenSize = await jez.getSize(tToken)\n    jez.log(`${tToken.name} size ${tTokenSize.value}, ${tTokenSize.String}`, tTokenSize)\n    if (tTokenSize.value > LARGE_VALUE) {\n        msg = `${tToken.name} is size ${tTokenSize.String} which is too large to be ${aItem.name}.`\n        jez.addMessage(chatMsg, {color:\"purple\", fSize:15, msg:msg, tag:\"saves\" })\n        return(false)\n    }\n    //----------------------------------------------------------------------------------\n    // Check to see if the aActor is currently GRAPPLING_COND\n    //\n    let constricting = aToken.actor.effects.find(i => i.data.label === GRAPPLING_COND);\n    if (constricting) {\n        msg = `${aToken.name} is already ${GRAPPLING_JRNL} can not do this twice, simultaneously.`\n        jez.addMessage(chatMsg, {color:\"purple\", fSize:15, msg:msg, tag:\"saves\" })\n        return(false)\n    }\n    //----------------------------------------------------------------------------------\n    // Perform saving throw\n    //\n    /*\n    let save = (await tToken.actor.rollAbilitySave(SAVE_TYPE, { flavor:FLAVOR, chatMessage: true, fastforward: true }));\n    if (save.total < SAVE_DC) {\n        jez.log(`${tToken.name} failed ${SAVE_TYPE}${save.total} vs ${SAVE_DC}`)\n    } else {\n        jez.log(`${tToken.name} saved ${SAVE_TYPE}${save.total} vs ${SAVE_DC}`)\n        msg = `${tToken.name} saved versus ${aToken.name} ${aItem.name} and is not restrained.`\n        return(false)\n    }\n    */\n    runVFX(tToken)\n    //----------------------------------------------------------------------------------\n    // Apply the GRAPPLED_COND effect to the target.\n    //\n    let restrainedEffect = [{\n        label: GRAPPLED_COND,\n        icon: GRAPPLED_ICON,\n        // origin: aActor.uuid,\n        origin: LAST_ARG.uuid,\n        disabled: false,\n        duration: { rounds: 99, startRound: GAME_RND }, \n        changes: [\n            { key: `flags.VariantEncumbrance.speed`, mode: DOWNGRADE, value: 1, priority: 20 },\n            { key: `data.attributes.movement.walk`, mode: DOWNGRADE, value: 1, priority: 20 },\n            { key: `data.attributes.movement.swim`, mode: DOWNGRADE, value: 1, priority: 20 },\n            { key: `data.attributes.movement.fly`, mode: DOWNGRADE, value: 1, priority: 20 },\n            { key: `data.attributes.movement.climb`, mode: DOWNGRADE, value: 1, priority: 20 },\n            { key: `data.attributes.movement.burrow`, mode: DOWNGRADE, value: 1, priority: 20 },\n            { key: `flags.midi-qol.disadvantage.attack.all`, mode: OVERRIDE, value: 1, priority: 20 },\n            { key: `flags.midi-qol.grants.advantage.attack.all`, mode: OVERRIDE, value: 1, priority: 20 },\n            { key: `flags.midi-qol.disadvantage.ability.save.dex`, mode: OVERRIDE, value: 1, priority: 20 },\n            // The value needs to have the id of the partner token and the name of the effect\n            { key: `macro.itemMacro`, mode: CUSTOM, value: `${aToken.id} ${GRAPPLING_COND}`, priority: 20 },\n        ]\n    }]\n    await MidiQOL.socket().executeAsGM(\"createEffects\",{actorUuid:tToken.actor.uuid, effects: restrainedEffect });\n    //----------------------------------------------------------------------------------\n    // Apply the GRAPPLING_COND effect to the actor.\n    //\n// COOL-THING: Stashes info in itemMacro parameters to enable removal of partner effect\n    let constrictingEffect = [{\n        label: GRAPPLING_COND,\n        icon: GRAPPLING_ICON,\n        //origin: tActor.uuid,\n        origin: LAST_ARG.uuid,\n        disabled: false,\n        duration: { rounds: 99, startRound: GAME_RND }, \n        changes: [\n            { key: `flags.gm-notes.notes`, mode: CUSTOM, value: \"Can only constrict one target at a time\", priority: 20 },\n            { key: `macro.itemMacro`, mode: CUSTOM, value: `${tToken.id} ${GRAPPLED_COND}`, priority: 20 },\n        ]\n    }]\n    await MidiQOL.socket().executeAsGM(\"createEffects\",{actorUuid:aToken.actor.uuid, effects: constrictingEffect });\n    //----------------------------------------------------------------------------------\n    // Post completion message\n    //\n    // https://www.w3schools.com/tags/ref_colornames.asp\n    msg = `${tToken.name} has been ${GRAPPLED_JRNL} and ${RESTRAINED_JRNL} by ${aToken.name} who is \n        ${GRAPPLING_JRNL}.<br><br>${tToken.name} may attempt to end the grapple per standard grapple rules.`\n    jez.addMessage(chatMsg, {color:\"purple\", fSize:15, msg:msg, tag:\"saves\" })\n    jez.log(`-------------- Finished --- ${MACRONAME} ${FUNCNAME} -----------------`);\n    return (true);\n}\n/***************************************************************************************************\n * Perform the code that runs when this macro is removed by DAE, set Off\n ***************************************************************************************************/\n async function doOff() {\n    const FUNCNAME = \"doOff()\";\n    jez.log(`-------------- Starting --- ${MACRONAME} ${FUNCNAME} -----------------`);\n    let pairedId     = args[1];\n    let pairedEffect = args[2];\n    let pairedToken  = canvas.tokens.placeables.find(ef => ef.id === pairedId)\n// COOL-THING: Remove a \"paired\" effect when either of the partner effects is deleted\n    jez.log(`Attempt to remove ${pairedEffect} from ${pairedToken.name} as well.`)\n    let pairedEffectObj = pairedToken.actor.effects.find(i => i.data.label === pairedEffect);\n    if (pairedEffectObj) {\n        jez.log(`Attempting to remove ${pairedEffectObj.id} from ${pairedToken.actor.uuid}`)\n        MidiQOL.socket().executeAsGM(\"removeEffects\",{actorUuid:pairedToken.actor.uuid, effects: [pairedEffectObj.id] });\n    }\n    jez.log(`-------------- Finished --- ${MACRONAME} ${FUNCNAME} -----------------`);\n    return;\n  }\n/***************************************************************************************************\n * Launch the VFX effects\n ***************************************************************************************************/\n async function runVFX(token) {\n    jez.log(\"***Execute VFX***\",token,\"VFX_LOOP\",VFX_LOOP,\"VFX_SCALE\",VFX_SCALE,\n           \"VFX_OPACITY\",VFX_OPACITY,\"VFX_NAME\",VFX_NAME)\n    new Sequence()\n       .effect()\n       .file(VFX_LOOP)\n       .attachTo(token)\n       .scale(VFX_SCALE)\n       .opacity(VFX_OPACITY)\n       .duration(5000)\n       .name(VFX_NAME)         // Give the effect a uniqueish name\n       .fadeIn(10)             // Fade in for specified time in milliseconds\n       .fadeOut(1000)          // Fade out for specified time in milliseconds\n       .extraEndDuration(1200) // Time padding on exit to connect to Outro effect\n       .play();\n   jez.log(\"VFX Launched\")\n}",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        }
      }
    },
    "core": {
      "sourceId": "Item.gLISo2fQLGodwh8f"
    },
    "exportSource": {
      "world": "travels-in-barovia",
      "system": "dnd5e",
      "coreVersion": "0.8.9",
      "systemVersion": "1.5.3"
    }
  }
}