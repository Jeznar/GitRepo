{
  "name": "Magic Weapon",
  "type": "spell",
  "img": "icons/magic/fire/dagger-rune-enchant-flame-blue.webp",
  "data": {
    "description": {
      "value": "<p>You touch a nonmagical weapon. Until the spell ends, that weapon becomes a magic weapon with a +1 bonus to Attack rolls and Damage Rolls.</p>\n<p><strong>At Higher Levels.</strong> When you cast this spell using a spell slot of 4th level or higher, the bonus increases to +2. When you use a spell slot of 6th level or higher, the bonus increases to +3.</p>\n<hr />\n<p><strong>FoundryVTT:&nbsp;</strong>Be sure to pre-target before firing off this spell.</p>",
      "chat": "",
      "unidentified": ""
    },
    "source": "PHB pg. 257",
    "activation": {
      "type": "bonus",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": 1,
      "units": "hour"
    },
    "target": {
      "value": 0,
      "width": null,
      "units": "",
      "type": "creature"
    },
    "range": {
      "value": null,
      "long": null,
      "units": "touch"
    },
    "uses": {
      "value": 0,
      "max": "0",
      "per": ""
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": null
    },
    "ability": "",
    "actionType": "util",
    "attackBonus": 0,
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": null
    },
    "damage": {
      "parts": [],
      "versatile": "",
      "value": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": null,
      "scaling": "spell",
      "value": ""
    },
    "level": 2,
    "school": "trs",
    "components": {
      "value": "",
      "vocal": true,
      "somatic": true,
      "material": false,
      "ritual": false,
      "concentration": true
    },
    "materials": {
      "value": "",
      "consumed": false,
      "cost": 0,
      "supply": 0
    },
    "preparation": {
      "mode": "prepared",
      "prepared": true
    },
    "scaling": {
      "mode": "level",
      "formula": ""
    },
    "attunement": 0
  },
  "effects": [
    {
      "_id": "xe1MqXU3Xz6XftZg",
      "flags": {
        "dae": {
          "transfer": false,
          "stackable": false,
          "specialDuration": [],
          "macroRepeat": "none"
        },
        "ActiveAuras": {
          "isAura": false,
          "ignoreSelf": false,
          "hidden": false,
          "height": false,
          "aura": "None",
          "radius": null
        }
      },
      "changes": [
        {
          "key": "macro.itemMacro",
          "value": "@item.level",
          "mode": 0,
          "priority": 0
        }
      ],
      "disabled": false,
      "duration": {
        "startTime": null
      },
      "icon": "systems/dnd5e/icons/spells/enchant-blue-2.jpg",
      "label": "Magic Weapon",
      "tint": null,
      "transfer": false
    }
  ],
  "flags": {
    "dynamiceffects": {
      "equipActive": true,
      "alwaysActive": false,
      "effects": [
        {
          "modSpecKey": "macro.execute",
          "value": "\"Magic Weapon\" @target @item.level",
          "mode": "+",
          "targetSpecific": false,
          "id": 1,
          "itemId": "f1nQIsVPzwoUTqOt",
          "active": true,
          "_targets": []
        }
      ]
    },
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Magic Weapon",
          "type": "script",
          "author": "ZjFlOWYxZjM5ZTZj",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "const MACRONAME = \"Magic_Weapon.0.1.js\"\n/*****************************************************************************************\n * Implement Magic Weapon based on an ItemMacro that I literally found, source unknown.\n * \n * 05/31/22 0.1 Creation of Macro\n *****************************************************************************************/\nconst MACRO = MACRONAME.split(\".\")[0]     // Trim of the version number and extension\njez.log(`============== Starting === ${MACRONAME} =================`);\nfor (let i = 0; i < args.length; i++) jez.log(`  args[${i}]`, args[i]);\nconst LAST_ARG = args[args.length - 1];\nlet msg = \"\"\n\n//DAE Item Macro Execute, arguments = @item.level\nif (!game.modules.get(\"advanced-macros\")?.active) {ui.notifications.error(\"Please enable the Advanced Macros module\") ;return;}\nlet aToken;         // Acting token, token for creature that invoked the macro\nif (LAST_ARG.tokenId) aToken = canvas.tokens.get(LAST_ARG.tokenId); \nelse aToken = game.actors.get(LAST_ARG.tokenId);\nlet aActor;         // Acting actor, creature that invoked the macro\nif (LAST_ARG.tokenId) aActor = canvas.tokens.get(LAST_ARG.tokenId).actor; \nelse aActor = game.actors.get(LAST_ARG.actorId);\n//---------------------------------------------------------------------------------------------------\n// If we don't have anything targeted post appropriate message and clear the concentrating effect\n//\njez.log(\"aActor\", aActor)\n//----------------------------------------------------------------------------------\n// Run the main procedures, choosing based on how the macro was invoked\n//\nif (args[0] === \"off\") await doOff();                   // DAE removal\nif (args[0] === \"on\") await doOn();                     // DAE Application\nif (args[0]?.tag === \"OnUse\") await doOnUse();          // Midi ItemMacro On Use\njez.log(`============== Finishing === ${MACRONAME} =================`);\n/***************************************************************************************************\n * Perform the code that runs when this macro is invoked as an ItemMacro \"OnUse\"\n ***************************************************************************************************/\n async function doOnUse() {\n    const FUNCNAME = \"doOnUse()\";\n    jez.log(`-------------- Starting --- ${MACRONAME} ${FUNCNAME} -----------------`);\n    if (args[0].targets.length !== 1) { \n        msg = `This spell requires a target be selected before casting.`\n        ui.notifications.warn(msg)\n        postResults(msg);\n        await jez.wait(100)\n        let conc = await aToken.actor.effects.find(i => i.data.label === \"Concentrating\");\n        jez.log(\"conc\", conc)\n        await conc.delete()\n        return\n    }\n    msg = `${aToken.name} has given one weapon magical properties.`\n    postResults(msg)\n    jez.log(`-------------- Finished --- ${MACRONAME} ${FUNCNAME} -----------------`);\n    return (true);\n}\n/***************************************************************************************************\n * Post results to the chat card\n ***************************************************************************************************/\n function postResults(msg) {\n    jez.log(msg);\n    let chatMsg = game.messages.get(args[args.length - 1].itemCardId);\n    jez.addMessage(chatMsg, { color: jez.randomDarkColor(), fSize: 14, msg: msg, tag: \"saves\" });\n}\n/***************************************************************************************************\n * Perform the code that runs when this macro is removed by DAE, set On\n * \n * Select for weapon and apply bonus based on spell level\n ***************************************************************************************************/\nasync function doOn() {\n    const FUNCNAME = \"doOn()\";\n    jez.log(`-------------- Starting --- ${MACRONAME} ${FUNCNAME} -----------------`);\n    //--------------------------------------------------------------------------------------------------\n    //\n    const DAEItem = LAST_ARG.efData.flags.dae.itemData\n\n    let weapons = aActor.items.filter(i => i.data.type === `weapon`);\n    let weapon_content = ``;\n\n    function value_limit(val, min, max) {\n        return val < min ? min : (val > max ? max : val);\n    };\n    //Filter for weapons\n    for (let weapon of weapons) {\n        weapon_content += `<label class=\"radio-label\">\n    <input type=\"radio\" name=\"weapon\" value=\"${weapon.id}\">\n    <img src=\"${weapon.img}\" style=\"border:0px; width: 50px; height:50px;\">\n    ${weapon.data.name}\n    </label>`;\n    }\n\n\n    let content = `\n    <style>\n    .magicWeapon .form-group {\n        display: flex;\n        flex-wrap: wrap;\n        width: 100%;\n        align-items: flex-start;\n      }\n      \n      .magicWeapon .radio-label {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        text-align: center;\n        justify-items: center;\n        flex: 1 0 25%;\n        line-height: normal;\n      }\n      \n      .magicWeapon .radio-label input {\n        display: none;\n      }\n      \n      .magicWeapon img {\n        border: 0px;\n        width: 50px;\n        height: 50px;\n        flex: 0 0 50px;\n        cursor: pointer;\n      }\n          \n      /* CHECKED STYLES */\n      .magicWeapon [type=radio]:checked + img {\n        outline: 2px solid #f00;\n      }\n    </style>\n    <form class=\"magicWeapon\">\n      <div class=\"form-group\" id=\"weapons\">\n          ${weapon_content}\n      </div>\n    </form>\n    `;\n    //---------------------------------------------------------------------------------------------------\n    // Define the dialog to display\n    //\n    new Dialog({\n        content,\n        buttons:\n        {\n            Ok:\n            {\n                label: `Ok`,\n                callback: (html) => {\n                    let itemId = $(\"input[type='radio'][name='weapon']:checked\").val();\n                    let weaponItem = aActor.items.get(itemId);\n                    let copy_item = duplicate(weaponItem);\n                    let spellLevel = Math.floor(DAEItem.data.level / 2);\n                    let bonus = value_limit(spellLevel, 1, 3);\n                    let wpDamage = copy_item.data.damage.parts[0][0];\n                    let verDamage = copy_item.data.damage.versatile;\n                    DAE.setFlag(aActor, `magicWeapon`, {\n                        damage: weaponItem.data.data.attackBonus,\n                        weapon: itemId,\n                        weaponDmg: wpDamage,\n                        verDmg: verDamage,\n                        mgc : copy_item.data.properties.mgc\n                    }\n                    );\n                    if(copy_item.data.attackBonus === \"\") copy_item.data.attackBonus = \"0\"\n                    copy_item.data.attackBonus = `${parseInt(copy_item.data.attackBonus) + bonus}`;\n                    copy_item.data.damage.parts[0][0] = (wpDamage + \" + \" + bonus);\n                    copy_item.data.properties.mgc = true\n                    if (verDamage !== \"\" && verDamage !== null) copy_item.data.damage.versatile = (verDamage + \" + \" + bonus);\n                    aActor.updateEmbeddedDocuments(\"Item\", [copy_item]);\n                }\n            },\n            Cancel:\n            {\n                label: `Cancel`\n            }\n        }\n    }).render(true);\n    jez.log(`-------------- Finished --- ${MACRONAME} ${FUNCNAME} -----------------`);\n}\n/***************************************************************************************************\n * Perform the code that runs when this macro is removed by DAE, set Off\n * \n * Revert weapon and unset flag.\n ***************************************************************************************************/\nasync function doOff() {\n    const FUNCNAME = \"doOff()\";\n    jez.log(`-------------- Starting --- ${MACRONAME} ${FUNCNAME} -----------------`);\n    let { damage, weapon, weaponDmg, verDmg, mgc} = DAE.getFlag(aActor, 'magicWeapon');\n    let weaponItem = aActor.items.get(weapon);\n    let copy_item = duplicate(weaponItem);\n    copy_item.data.attackBonus = damage;\n    copy_item.data.damage.parts[0][0] = weaponDmg;\n    copy_item.data.properties.mgc = mgc\n    if (verDmg !== \"\" && verDmg !== null) copy_item.data.damage.versatile = verDmg;\n    aActor.updateEmbeddedDocuments(\"Item\", [copy_item]);\n    DAE.unsetFlag(aActor, `magicWeapon`);\n    jez.log(`-------------- Finished --- ${MACRONAME} ${FUNCNAME} -----------------`);\n}",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        }
      }
    },
    "dae": {
      "activeEquipped": false,
      "alwaysActive": false
    },
    "midi-qol": {
      "onUseMacroName": "[postActiveEffects]ItemMacro",
      "effectActivation": false
    },
    "core": {
      "sourceId": "Compendium.Dynamic-Effects-SRD.DAE SRD Spells.SP66bVwMD1PYlySJ"
    },
    "enhancedcombathud": {
      "set1s": false,
      "set2s": false,
      "set3s": false
    },
    "betterCurses": {
      "isCurse": false,
      "curseName": "",
      "formula": "",
      "mwak": false,
      "rwak": false,
      "msak": false,
      "rsak": false
    },
    "midiProperties": {
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "rollOther": false,
      "critOther": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "toggleEffect": false
    },
    "exportSource": {
      "world": "travels-in-barovia",
      "system": "dnd5e",
      "coreVersion": "9.269",
      "systemVersion": "1.6.0"
    }
  }
}