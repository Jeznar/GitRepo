{
  "name": "Invisibility",
  "type": "spell",
  "img": "/systems/dnd5e/icons/spells/fog-sky-2.jpg",
  "data": {
    "description": {
      "value": "<p>A creature you touch becomes @JournalEntry[mQFiOglOh7YayBVP]{Invisible} until the spell ends. Anything the target is wearing or carrying is invisible as long as it is on the target's person. The spell ends for a target that attacks or casts a spell.</p>\n<p><strong>At Higher Levels.</strong> When you cast this spell using a spell slot of 3rd level or higher, you can target one additional creature for each slot level above 2nd.</p>",
      "chat": "<p>A creature you touch becomes invisible until the spell ends. Anything the target is wearing or carrying is invisible as long as it is on the target's person. The spell ends for a target that attacks or casts a spell.</p>\n<p><strong>At Higher Levels.</strong> When you cast this spell using a spell slot of 3rd level or higher, you can target one additional creature for each slot level above 2nd.</p>",
      "unidentified": ""
    },
    "source": "Basic Rules, Player's Handbook pg 254",
    "activation": {
      "type": "action",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": 1,
      "units": "hour"
    },
    "target": {
      "value": null,
      "width": null,
      "units": "touch",
      "type": "creature"
    },
    "range": {
      "value": null,
      "long": null,
      "units": "touch"
    },
    "uses": {
      "value": 0,
      "max": "0",
      "per": ""
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": null
    },
    "ability": "",
    "actionType": "util",
    "attackBonus": 0,
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": null
    },
    "damage": {
      "parts": [],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": null,
      "scaling": "spell"
    },
    "level": 2,
    "school": "ill",
    "components": {
      "value": "an eyelash encased in gum arabic",
      "vocal": true,
      "somatic": true,
      "material": true,
      "ritual": false,
      "concentration": true
    },
    "materials": {
      "value": "an eyelash encased in gum arabic",
      "consumed": false,
      "cost": 0,
      "supply": 0
    },
    "preparation": {
      "mode": "prepared",
      "prepared": true
    },
    "scaling": {
      "mode": "none",
      "formula": ""
    }
  },
  "effects": [
    {
      "_id": "4sj41iLn03Ucp7Uk",
      "flags": {
        "dae": {
          "transfer": false,
          "stackable": "none",
          "specialDuration": [
            "1Attack"
          ],
          "macroRepeat": "none"
        },
        "dnd5e-helpers": {
          "rest-effect": "Ignore"
        },
        "ActiveAuras": {
          "isAura": false,
          "aura": "None",
          "radius": null,
          "alignment": "",
          "type": "",
          "ignoreSelf": false,
          "height": false,
          "hidden": false,
          "hostile": false,
          "onlyOnce": false
        }
      },
      "changes": [
        {
          "key": "macro.itemMacro",
          "mode": 0,
          "value": "@target",
          "priority": "0"
        },
        {
          "key": "flags.midi-qol.advantage.attack.all",
          "mode": 2,
          "value": "0",
          "priority": "20"
        },
        {
          "key": "flags.midi-qol.grants.disadvantage.attack.all",
          "mode": 2,
          "value": "0",
          "priority": "20"
        }
      ],
      "disabled": false,
      "duration": {
        "startTime": null,
        "seconds": 3600
      },
      "icon": "Icons_JGB/Conditions/Invisibility.png",
      "label": "Invisibility",
      "tint": null,
      "transfer": false,
      "selectedKey": [
        "macro.itemMacro",
        "flags.midi-qol.advantage.attack.all",
        "flags.midi-qol.grants.disadvantage.attack.all"
      ]
    }
  ],
  "flags": {
    "ddbimporter": {
      "id": 138364,
      "definitionId": 2159,
      "entityTypeId": 435869154,
      "dndbeyond": {
        "lookup": "generic",
        "lookupName": "generic",
        "level": null,
        "castAtLevel": null
      },
      "sources": [
        {
          "sourceId": 1,
          "pageNumber": null,
          "sourceType": 2
        },
        {
          "sourceId": 2,
          "pageNumber": 254,
          "sourceType": 1
        }
      ],
      "tags": [
        "Buff"
      ]
    },
    "betterRolls5e": {
      "quickVersatile": {
        "altValue": true
      },
      "quickCharges": {
        "value": {
          "use": true,
          "resource": true
        },
        "altValue": {
          "use": true,
          "resource": true
        }
      }
    },
    "dae": {
      "activeEquipped": false,
      "alwaysActive": false
    },
    "midi-qol": {
      "onUseMacroName": "[postActiveEffects]ItemMacro",
      "effectActivation": false
    },
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Invisibility",
          "type": "script",
          "author": "ZjFlOWYxZjM5ZTZj",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "const MACRONAME = \"Invisibility.0.4.js\"\n/*****************************************************************************************\n * Implment Invisibility\n * \n * 01/25/22 0.2 Revisions to make it actually work\n * 05/25/22 0.4 Compatibility upgrade for FoundryVTT 9.x\n *****************************************************************************************/\nconst MACRO = MACRONAME.split(\".\")[0]     // Trim of the version number and extension\njez.log(`============== Starting === ${MACRONAME} =================`);\nfor (let i = 0; i < args.length; i++) jez.log(`  args[${i}]`, args[i]);\nconst LAST_ARG = args[args.length - 1];\nlet aActor;         // Acting actor, creature that invoked the macro\nlet aToken;         // Acting token, token for creature that invoked the macro\nlet aItem;          // Active Item information, item invoking this macro\nif (LAST_ARG.tokenId) aActor = canvas.tokens.get(LAST_ARG.tokenId).actor; else aActor = game.actors.get(LAST_ARG.actorId);\nif (LAST_ARG.tokenId) aToken = canvas.tokens.get(LAST_ARG.tokenId); else aToken = game.actors.get(LAST_ARG.tokenId);\nif (args[0]?.item) aItem = args[0]?.item; else aItem = LAST_ARG.efData?.flags?.dae?.itemData;\nlet msg = \"\"\n//DAE Item Macro, no arguments passed\nif (!game.modules.get(\"advanced-macros\")?.active) { ui.notifications.error(\"Please enable the Advanced Macros module\"); return; }\nconst JOURNAL_ENTRY = \"@JournalEntry[mQFiOglOh7YayBVP]{Invisible}\"\n//----------------------------------------------------------------------------------\n// Run the main procedures, choosing based on how the macro was invoked\n//\nif (args[0] === \"off\") await doOff();                   // DAE removal\nif (args[0] === \"on\") await doOn();                     // DAE Application\nif (args[0]?.tag === \"OnUse\") await doOnUse();          // Midi ItemMacro On Use\njez.log(`============== Finishing === ${MACRONAME} =================`);\nreturn;\n/***************************************************************************************************\n * Perform the code that runs when this macro is invoked as an ItemMacro \"OnUse\"\n ***************************************************************************************************/\n async function doOnUse() {\n    const FUNCNAME = \"doOnUse()\";\n    let affectedNumber = args[0].targets.length\n    jez.log(\"affectedNumber\",affectedNumber)\n    let tTokensStr = `<b>${args[0].targets[0].name}</b>`\n    jez.log(\"args[0].targets\",args[0].targets)\n    jez.log(\"args[0].targets.length\",args[0].targets.length)\n    if (args[0].targets.length > 2) {\n        for (let i = 1; i < args[0].targets.length - 1; i++) {\n            tTokensStr += `, <b>${args[0].targets[i].name}</b>`\n        }  \n    }\n    if (args[0].targets.length > 1) tTokensStr += ` and <b>${args[0].targets[args[0].targets.length - 1].name}</b>`\n    jez.log(`Selected creature types: ${tTokensStr}`)\n    let plural = \"\"\n    if (args[0].targets.length === 1) plural =\"s\"\n    msg = `${tTokensStr} become${plural} <b>${JOURNAL_ENTRY}</b>.`\n    //---------------------------------------------------------------------------------------------\n    // Post a results message into the chat card recently found.\n    //\n    const CHAT_MSG = game.messages.get(args[args.length - 1].itemCardId);\n    jez.log(\"chatMessage\", CHAT_MSG)\n    await jez.addMessage(CHAT_MSG, { color: \"steelblue\", fSize: 14, msg: msg, tag: \"saves\"})\n    jez.log(`-------------- Finished --- ${MACRONAME} ${FUNCNAME} -----------------`);\n    return (true);\n}\n/***************************************************************************************************\n * Perform the code that runs when this macro is removed by DAE, set On\n ***************************************************************************************************/\n async function doOn() {\n    const FUNCNAME = \"doOn()\";\n    jez.log(`-------------- Starting --- ${MACRONAME} ${FUNCNAME} -----------------`);\n    jez.log(\"LAST_ARG.efData.origin\",LAST_ARG.efData.origin)\n    const ICON = LAST_ARG.efData.icon\n    let actorID = LAST_ARG.efData.origin.split(\".\")[1]   // Grab originating actor ID from efData.origin\n    let itemID = LAST_ARG.efData.origin.split(\".\")[3]    // Grab originating item ID from efData.origin\n    jez.log(`Origin icon ${ICON}, actorID ${actorID}, itemID ${itemID}`, actorID)\n    const target = canvas.tokens.get(LAST_ARG.tokenId)\n    // target.update({ \"hidden\": true });           // Obsolete as of FoundryVTT 9.x\n    target.document.update({ \"hidden\": true });     // Syntax as of FoundryVTT 9.x\n    //---------------------------------------------------------------------------------------------\n    // Dig through the chat log for all messages spoken by the originating actor, using the item\n    // of interest.  The last one of this set will be the chat message that needs info appended \n    // to it.  Viola!!!\n    //\n    /*let msgHistory = [];                                            // Array to hold the history\n    game.messages.reduce((list, message) => {                       // Tricksy reduce function\n        if (message.data?.flags[\"midi-qol\"]?.itemId === itemID &&   // Messages from origin item\n            message.data.speaker.actor === actorID)                 // Messages from origin actor\n                list.push(message.id);                              // Put'em in an array\n        return list;}, msgHistory);                                 // Array will have all matched msgs \n    let itemCard = msgHistory[msgHistory.length - 1];               // Last entry will be most recent\n    jez.log(`Actor ${actorID}, item ${itemID} casd ${itemCard}`, msgHistory)\n    let chatMessage = game.messages.get(itemCard);*/\n    //---------------------------------------------------------------------------------------------\n    // Check for multiple affected tokens and build appropriate message string.\n    //\n    jez.log(`-------------- Finished --- ${MACRONAME} ${FUNCNAME} -----------------`);\n    return;\n}\n/***************************************************************************************************\n * Perform the code that runs when this macro is removed by DAE, set Off\n ***************************************************************************************************/\n async function doOff() {\n    const FUNCNAME = \"doOff()\";\n    jez.log(`-------------- Starting --- ${MACRONAME} ${FUNCNAME} -----------------`);\n    const ICON = LAST_ARG.efData.icon\n    const target = canvas.tokens.get(LAST_ARG.tokenId)\n    msg = `${target.name} re-appears, no longer invisible.`;\n    await jez.postMessage({color:\"purple\", fSize:14, msg:msg, title:\"Invisibility Ends\", icon:ICON })\n    // await target.update({ \"hidden\": false });           // Obsolete as of FoundryVTT 9.x\n    await target.document.update({ \"hidden\": false });     // Syntax as of FoundryVTT 9.x\n    await jez.wait(1000)\n    target.refresh()\n    jez.log(`-------------- Finished --- ${MACRONAME} ${FUNCNAME} -----------------`);\n    return;\n  }",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        }
      }
    },
    "cf": {
      "id": "temp_kw1jjhsz8u"
    },
    "core": {
      "sourceId": "Compendium.My-Shared-DDB.spells.BJrV9mnIviD3LjJS"
    },
    "enhancedcombathud": {
      "set1p": false,
      "set2p": false,
      "set3p": false
    },
    "betterCurses": {
      "isCurse": false,
      "curseName": "",
      "formula": "",
      "mwak": false,
      "rwak": false,
      "msak": false,
      "rsak": false
    },
    "midiProperties": {
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "rollOther": false,
      "critOther": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "toggleEffect": false
    },
    "exportSource": {
      "world": "travels-in-barovia",
      "system": "dnd5e",
      "coreVersion": "9.269",
      "systemVersion": "1.6.0"
    }
  }
}