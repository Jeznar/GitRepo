{
  "name": "Crown_of_Madness_Helper",
  "type": "script",
  "author": "ZjFlOWYxZjM5ZTZj",
  "img": "icons/commodities/metal/fragments-steel-barbed.webp",
  "scope": "global",
  "command": "const MACRONAME = \"Crown_of_Madness_Helper.0.2.js\"\n/*****************************************************************************************\n * This helper function is intended to be run as a world macro launched by the \n * Crown_of_Madness as an everyturn macro.  It will prompt the caster, removing \n * concentration if they choose to use action for a different purpose.\n * \n * 03/01/22 0.1 Creation of Macro\n * 08/01/22 0.2 Add convenientDescription\n *****************************************************************************************/\nconst MACRO = MACRONAME.split(\".\")[0]     // Trim of the version number and extension\njez.log(`============== Starting === ${MACRONAME} =================`);\nfor (let i = 0; i < args.length; i++) jez.log(`  args[${i}]`, args[i]);\nconst LAST_ARG = args[args.length - 1];\nlet aToken;         // Acting token, token for creature that invoked the macro\nlet aItem;          // Active Item information, item invoking this macro\nif (LAST_ARG.tokenId) aToken = canvas.tokens.get(LAST_ARG.tokenId); else aToken = game.actors.get(LAST_ARG.tokenId);\nif (args[0]?.item) aItem = args[0]?.item; else aItem = LAST_ARG.efData?.flags?.dae?.itemData;\nlet msg = \"\";\n//----------------------------------------------------------------------------------\n// Run the main procedures, choosing based on how the macro was invoked\n//\nif (args[0] === \"each\") doEach();\t\t\t\t\t    // DAE removal\nif (args[0] === \"on\") await doOn();                     // DAE Application\njez.log(`============== Finishing === ${MACRONAME} =================`);\nreturn;\n/***************************************************************************************************\n *    END_OF_MAIN_MACRO_BODY\n *                                END_OF_MAIN_MACRO_BODY\n *                                                             END_OF_MAIN_MACRO_BODY\n ***************************************************************************************************\n * Perform the code that runs when this macro is invoked each round by DAE\n ***************************************************************************************************/\n async function doEach() {\n    const FUNCNAME = \"doEach()\";\n    jez.log(`-------------- Starting --- ${MACRONAME} ${FUNCNAME} -----------------`);\n    jez.log(\"The do Each code\")\n\n    msg = `<br><b>${aToken.name}</b> may use his/her <b>action</b> this turn to continue the ${aItem.name} \n    effect or they may drop concentration and take some other action.  Would you like to maintain the \n    spell?<br><br>`\n    let titleMsg = \"Maintain Control of Madness?\"\n    Dialog.confirm({\n        title: titleMsg,\n        content: msg,\n        yes: () => {/*ui.notifications.info(\"Yes was pressed!\")*/},\n        no: async () => {\n            let concEffect = await aToken.actor.effects.find(i => i.data.label === \"Concentrating\");          \n            let crwnEffect = await aToken.actor.effects.find(i => i.data.label === \"Crown of Madness\");\n            await MidiQOL.socket().executeAsGM(\"removeEffects\", { actorUuid: aToken.actor.uuid, effects: [concEffect.id, crwnEffect.id] });\n            //if (concEffect) {\n            //    jez.log(`Concentrating found on ${aToken.name}, dropping it.`)\n            //    await MidiQOL.socket().executeAsGM(\"removeEffects\", { actorUuid: aToken.actor.uuid, effects: [concEffect.id] });\n            //} else jez.log(`Oddly, Concentrating was missing on ${aToken.name}`);\n        },\n        defaultYes: false\n    })\n    jez.log(`-------------- Finished --- ${MACRONAME} ${FUNCNAME} -----------------`);\n    return (true);\n}\n/*********1*********2*********3*********4*********5*********6*********7*********8*********9*********0\n * Perform the code that runs when this macro is removed by DAE, set On\n *********1*********2*********3*********4*********5*********6*********7*********8*********9*********/ \n async function doOn() {\n    const FUNCNAME = \"doOn()\";\n    const FNAME = FUNCNAME.split(\"(\")[0] \n    const TL = 2\n    if (TL>1) jez.trace(`--- Starting --- ${MACRONAME} ${FNAME} ---`);\n    //-----------------------------------------------------------------------------------------------\n    // Comments, perhaps\n    //\n    if (TL>1) jez.trace(`--- Finished --- ${MACRONAME} ${FNAME} ---`);\n    return true;\n}",
  "flags": {
    "combat-utility-belt": {
      "macroTrigger": ""
    },
    "advanced-macros": {
      "runAsGM": false
    },
    "exportSource": {
      "world": "travels-in-barovia-ce",
      "system": "dnd5e",
      "coreVersion": "9.269",
      "systemVersion": "1.6.2"
    }
  }
}