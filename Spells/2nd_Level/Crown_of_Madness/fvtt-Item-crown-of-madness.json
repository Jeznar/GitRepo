{
  "name": "Crown of Madness",
  "type": "spell",
  "img": "icons/commodities/metal/fragments-steel-barbed.webp",
  "data": {
    "description": {
      "value": "<p>One humanoid of your choice that you can see within range must succeed on a <strong>Wisdom saving</strong> throw or become charmed by you for the duration.</p>\n<p>While the target is charmed in this way, a twisted crown of jagged iron appears on its head, and a madness glows in its eyes.</p>\n<p><br />The charmed target <strong>must use its action before moving on each of its turns to make a melee attack against a creature other than itself that you mentally choose. </strong>The target can act normally on its turn if you choose no creature or if none are within its reach. <br /><br />On your subsequent turns, <strong>you must use your action to maintain control over the target</strong>, or the spell ends. Also, the target can make a <strong>Wisdom saving throw </strong>at the end of each of its turns. On a success, the spell ends.</p>",
      "chat": "<p>One humanoid of your choice that you can see within range must succeed on a Wisdom saving throw or become charmed by you for the duration.</p>\n<p>While the target is charmed in this way, a twisted crown of jagged iron appears on its head, and a madness glows in its eyes. <br /><br />The charmed target must use its action before moving on each of its turns to make a melee attack against a creature other than itself that you mentally choose. The target can act normally on its turn if you choose no creature or if none are within its reach. <br /><br />On your subsequent turns, you must use your action to maintain control over the target, or the spell ends. Also, the target can make a Wisdom saving throw at the end of each of its turns. On a success, the spell ends.</p>",
      "unidentified": ""
    },
    "source": "Player's Handbook pg 229",
    "activation": {
      "type": "action",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": 1,
      "units": "minute"
    },
    "target": {
      "value": 1,
      "width": null,
      "units": "",
      "type": "creature"
    },
    "range": {
      "value": 120,
      "long": null,
      "units": "ft"
    },
    "uses": {
      "value": 0,
      "max": "0",
      "per": ""
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": null
    },
    "ability": "",
    "actionType": "save",
    "attackBonus": 0,
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": null
    },
    "damage": {
      "parts": [],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "wis",
      "dc": null,
      "scaling": "spell"
    },
    "level": 2,
    "school": "enc",
    "components": {
      "value": "",
      "vocal": true,
      "somatic": true,
      "material": false,
      "ritual": false,
      "concentration": true
    },
    "materials": {
      "value": "",
      "consumed": false,
      "cost": 0,
      "supply": 0
    },
    "preparation": {
      "mode": "prepared",
      "prepared": true
    },
    "scaling": {
      "mode": "none",
      "formula": ""
    },
    "attunement": null
  },
  "effects": [
    {
      "_id": "9FwgmSJpiQgdyCuv",
      "changes": [
        {
          "key": "macro.itemMacro",
          "mode": 0,
          "value": "WIS DC@attributes.spelldc",
          "priority": "20"
        },
        {
          "key": "flags.midi-qol.OverTime",
          "mode": 5,
          "value": "turn=end,saveDC=@attributes.spelldc,label=Save vs Crown of Madness,saveAbility=wis,saveRemove=true,saveMagic=true,rollType=save",
          "priority": "20"
        }
      ],
      "disabled": false,
      "duration": {
        "startTime": null,
        "seconds": 60,
        "rounds": 10
      },
      "icon": "Icons_JGB/Conditions/Madness.PNG",
      "label": "Crown of Madness",
      "transfer": false,
      "flags": {
        "dae": {
          "stackable": "none",
          "macroRepeat": "startEveryTurn",
          "specialDuration": [],
          "transfer": false
        },
        "dnd5e-helpers": {
          "rest-effect": "Ignore"
        },
        "ActiveAuras": {
          "isAura": false,
          "aura": "None",
          "radius": null,
          "alignment": "",
          "type": "",
          "ignoreSelf": false,
          "height": false,
          "hidden": false,
          "hostile": false,
          "onlyOnce": false
        }
      },
      "tint": null,
      "selectedKey": [
        "macro.itemMacro",
        "flags.midi-qol.OverTime"
      ]
    }
  ],
  "flags": {
    "ddbimporter": {
      "id": 136476,
      "definitionId": 2329,
      "entityTypeId": 435869154,
      "dndbeyond": {
        "lookup": "generic",
        "lookupName": "generic",
        "level": null,
        "castAtLevel": null
      },
      "sources": [
        {
          "sourceId": 2,
          "pageNumber": 229,
          "sourceType": 1
        }
      ],
      "tags": [
        "Control",
        "Compulsion"
      ]
    },
    "betterRolls5e": {
      "quickVersatile": {
        "altValue": true
      },
      "quickCharges": {
        "value": {
          "use": true,
          "resource": true
        },
        "altValue": {
          "use": true,
          "resource": true
        }
      }
    },
    "cf": {
      "id": "temp_kw1jjhsz8u"
    },
    "core": {
      "sourceId": "Item.ovGTp1xyTHxQv7X5"
    },
    "enhancedcombathud": {
      "set1p": false,
      "set2p": false,
      "set3p": false
    },
    "midi-qol": {
      "onUseMacroName": "[postActiveEffects]ItemMacro",
      "effectActivation": false
    },
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Crown of Madness",
          "type": "script",
          "author": "ZjFlOWYxZjM5ZTZj",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "const MACRONAME = \"Crown_of_Madness.0.2.js\"\n/*****************************************************************************************\n * Basic Structure for a rather complete macro\n * \n * 02/11/22 0.1 Creation of Macro\n * 08/01/22 0.2 Add convenientDescription\n *****************************************************************************************/\nconst MACRO = MACRONAME.split(\".\")[0]     // Trim of the version number and extension\njez.log(`============== Starting === ${MACRONAME} =================`);\nfor (let i = 0; i < args.length; i++) jez.log(`  args[${i}]`, args[i]);\nconst LAST_ARG = args[args.length - 1];\nlet aActor;         // Acting actor, creature that invoked the macro\nlet aToken;         // Acting token, token for creature that invoked the macro\nlet aItem;          // Active Item information, item invoking this macro\nif (LAST_ARG.tokenId) aActor = canvas.tokens.get(LAST_ARG.tokenId).actor; else aActor = game.actors.get(LAST_ARG.actorId);\nif (LAST_ARG.tokenId) aToken = canvas.tokens.get(LAST_ARG.tokenId); else aToken = game.actors.get(LAST_ARG.tokenId);\nif (args[0]?.item) aItem = args[0]?.item; else aItem = LAST_ARG.efData?.flags?.dae?.itemData;\n// const CUSTOM = 0, MULTIPLY = 1, ADD = 2, DOWNGRADE = 3, UPGRADE = 4, OVERRIDE = 5;\nlet msg = \"\";\nconst TL = 0;\nconst EFFECT = \"Madness\"\n// const DEBUFF_NAME = \"Madness\" \n// const DEBUFF_ICON = \"Icons_JGB/Conditions/Madness.PNG\"\n//----------------------------------------------------------------------------------\n// Run the preCheck function to make sure things are setup as best I can check them\n//\nif ((args[0]?.tag === \"OnUse\") && !preCheck()) return;\n//----------------------------------------------------------------------------------\n// Run the main procedures, choosing based on how the macro was invoked\n//\nif (args[0] === \"off\") await doOff();                   // DAE removal\nif (args[0]?.tag === \"OnUse\") await doOnUse();          // Midi ItemMacro On Use\nif (args[0] === \"each\") doEach();\t\t\t\t\t    // DAE removal\njez.log(`============== Finishing === ${MACRONAME} =================`);\nreturn;\n/***************************************************************************************************\n *    END_OF_MAIN_MACRO_BODY\n *                                END_OF_MAIN_MACRO_BODY\n *                                                             END_OF_MAIN_MACRO_BODY\n ***************************************************************************************************\n * Check the setup of things.  Setting the global errorMsg and returning true for ok!\n ***************************************************************************************************/\nfunction preCheck() {\n    jez.log(\"args[0].targets.length\", args[0].targets.length)\n    if (args[0].targets.length !== 1) {     // If not exactly one target, return\n        msg = `Must target exactly one target.  ${args[0].targets.length} were targeted.`\n        postResults();\n        return (false);\n    }\n    jez.log(\"args[0].failedSaveUuids.length\", args[0].failedSaveUuids.length)\n    if (args[0].failedSaveUuids.length !== 1) {  // If target made its save, return\n        msg = `Saving throw succeeded.  ${aItem.name} has no effect.`\n        postResults();\n        return (false);\n    }\n    return (true)\n}\n/***************************************************************************************************\n * Post results to the chat card\n ***************************************************************************************************/\nfunction postResults() {\n    jez.log(msg);\n    let chatMsg = game.messages.get(args[args.length - 1].itemCardId);\n    jez.addMessage(chatMsg, { color: jez.randomDarkColor(), fSize: 14, msg: msg, tag: \"saves\" });\n}\n/***************************************************************************************************\n * Perform the code that runs when this macro is removed by DAE, set Off\n * \n * https://github.com/fantasycalendar/FoundryVTT-Sequencer/wiki/Sequencer-Effect-Manager#end-effects\n ***************************************************************************************************/\nasync function doOff() {\n    const FUNCNAME = \"doOff()\";\n    jez.log(`-------------- Starting --- ${MACRONAME} ${FUNCNAME} -----------------`);\n    jez.log(\"Terminate the VFX\")\n    //const SRC_TOKEN_ID = args[3]            // aqNN90V6BjFcJpI5\n    const SRC_ACTOR_ID = LAST_ARG.origin.split(\".\")[1]  // aqNN90V6BjFcJpI5\n    const VFX_NAME = `${MACRO}-${SRC_ACTOR_ID}`\n    jez.log(\"VFX_NAME\", VFX_NAME)\n    jez.log(\"aToken\", aToken)\n    Sequencer.EffectManager.endEffects({ name: VFX_NAME, object: aToken });\n    jez.log(`-------------- Finished --- ${MACRONAME} ${FUNCNAME} -----------------`);\n    return;\n}\n/***************************************************************************************************\n * Perform the code that runs when this macro is invoked as an ItemMacro \"OnUse\"\n ***************************************************************************************************/\nasync function doOnUse() {\n    const FUNCNAME = \"doOnUse()\";\n    const FNAME = FUNCNAME.split(\"(\")[0]\n    let tToken = canvas.tokens.get(args[0]?.targets[0]?.id); // First Targeted Token, if any\n    let tActor = tToken?.actor;\n    jez.log(`-------------- Starting --- ${MACRONAME} ${FUNCNAME} -----------------`);\n    jez.log(`First Targeted Token (tToken) of ${args[0].targets?.length}, ${tToken?.name}`, tToken);\n    jez.log(`First Targeted Actor (tActor) ${tActor?.name}`, tActor)\n    //--------------------------------------------------------------------------------------------\n    // Put a DAE effect on the target that includes\n    // -- ItemMacro that runs at start of every turn reminding of effect on target (doEach)\n    // -- ItemMacro terminates the VFX when it is removed (doOff)\n    // -- Midi Overtime effect that performs a save at end of each turn\n    //\n    // DAE Effect macro.itemMacro CUSTOM WIS DC16\n    // DAE Effect flags.midi-qol.OverTime OVERRIDE turn=end,saveDC=16,label=Save vs Crown of Madness,saveAbility=wis,saveRemove=true,saveMagic=true,rollType=save\n    // String for the DAE Effect: turn=end,saveDC=@attributes.spelldc,label=Save vs Crown of Madness,saveAbility=wis,saveRemove=true,saveMagic=true,rollType=save\n    //--------------------------------------------------------------------------------------------\n    // Place an effect on the caster that will call the helper macro to see if spell continues\n    //\n    const GAME_RND = game.combat ? game.combat.round : 0;\n    const CE_DESC = `Maintaining the Crown Effect requires action each round.`\n    let effectData = [{\n        changes: [\n            { key: \"macro.execute\", mode: jez.CUSTOM, value: \"Crown_of_Madness_Helper\", priority: 20 }\n        ],\n        origin: aToken.uuid,\n        flags: {\n            dae: { itemData: aItem, macroRepeat: \"startEveryTurn\", token: tToken.uuid },\n            convenientDescription: CE_DESC\n        },\n        disabled: false,\n        duration: { rounds: 10, seconds: 60, startRound: GAME_RND, startTime: game.time.worldTime },\n        icon: aItem.img,\n        label: aItem.name\n    }];\n    jez.log(\"effectData\", effectData)\n    await MidiQOL.socket().executeAsGM(\"createEffects\", { actorUuid: aToken.actor.uuid, effects: effectData });\n\n    //--------------------------------------------------------------------------------------------\n    // Fire off the VFX that will be playing on the subject of madness\n    //\n    runVFX(tToken)\n    //----------------------------------------------------------------------------------------------\n    // Modify recently created effect to have a convenientDescription\n    //\n    await jez.wait(500)\n    if (TL > 1) jez.trace(`${MACRO} ${FNAME} | ==> ${tToken.name}`, tToken)\n    let effect = await tToken.actor.effects.find(i => i.data.label === \"Crown of Madness\");\n    if (TL > 3) jez.trace(`${MACRO} ${FNAME} | Effect`, effect)\n    if (!effect) return jez.badNews(`Could not find \"Crown of Madness\" effect on ${tToken.name}`, \"e\")\n    const C_DESC = `${aToken.name} can force to attack creature in melee range`\n    await effect.update({ flags: { convenientDescription: C_DESC } });\n    //--------------------------------------------------------------------------------------------\n    // Add results to the chat card\n    //\n    msg = `<b>${tToken.name}</b> is afflicted by <b>${EFFECT}</b> from ${aToken.name}'s ${aItem.name}.`\n    postResults();\n    //-------------------------------------------------------------------------------------------------------------\n    // Pair the new debuff with concentration\n    //  \n    await jez.wait(250)\n    jez.pairEffects(aActor, \"Concentrating\", tToken.actor, \"Crown of Madness\")\n    //-------------------------------------------------------------------------------------------------------------\n    // Pair the new debuff with concentration\n    //  \n    await jez.wait(250)\n    jez.pairEffects(aActor, \"Concentrating\", aActor, \"Crown of Madness\")\n    jez.log(`-------------- Finished --- ${MACRONAME} ${FUNCNAME} -----------------`);\n    return (true);\n}\n/**************************************************************************\n * Fire off the two stage visual effects\n **************************************************************************/\nasync function runVFX(token5e) {\n    jez.log(\"Start runVFX(token5e)\", token5e)\n    let VFX_LOOP = \"modules/jb2a_patreon/Library/Generic/Marker/MarkerCircleOfStars_Regular_*_400x400.webm\"\n    let VFX_INTRO = \"modules/jb2a_patreon/Library/Generic/Conditions/Dizzy_Stars/DizzyStars_01_*_400x400.webm\"\n    const VFX_OPACITY = 1.0;\n    const VFX_SCALE = 0.5;\n    const VFX_NAME = `${MACRO}-${aActor.id}`\n    new Sequence()\n        .effect()\n        .file(VFX_INTRO)\n        .attachTo(token5e)\n        .scale(VFX_SCALE)\n        .opacity(VFX_OPACITY)\n        .waitUntilFinished(-1500)\n        .effect()\n        .file(VFX_LOOP)\n        .attachTo(token5e)\n        .scale(VFX_SCALE)\n        .opacity(VFX_OPACITY)\n        .persist()\n        .name(VFX_NAME)\n        .scaleIn(0.1, 1500)         // Expand from 0.25 to 1 size over 1 second\n        .rotateIn(180, 1500)        // 1/2 Rotation over 1 second \n        .scaleOut(0.1, 1500)        // Contract from 1 to 0.25 size over 1 second\n        .rotateOut(180, 1500)       // 1/2 Counter Rotation over 1 second  \n        //.endTime(600)\n        //.waitUntilFinished(-800) \n        .play();\n    jez.log(\"Finish runVFX(token5e)\", token5e)\n}\n/***************************************************************************************************\n * Perform the code that runs when this macro is invoked each round by DAE\n ***************************************************************************************************/\nasync function doEach() {\n    const FUNCNAME = \"doEach()\";\n    jez.log(`-------------- Starting --- ${MACRONAME} ${FUNCNAME} -----------------`);\n    const SAVE_TYPE = args[1].toLowerCase()             // wis from WIS\n    const SAVE_DC = args[2].substring(2)                // 16 from DC16\n    jez.log(\"LAST_ARG.origin\", LAST_ARG.origin)\n    const SRC_ACTOR_ID = LAST_ARG.origin.split(\".\")[1]  // aqNN90V6BjFcJpI5\n    let sActor = game.actors.get(SRC_ACTOR_ID)\n    let sTokenName = sActor.data.token.name\n    jez.log(\"sTokenName\", sTokenName)\n    jez.log(\"sActor\", sActor)\n    jez.log(`SAVE_TYPE ${SAVE_TYPE}, SAVE_DC ${SAVE_DC}, sTokenName ${sTokenName}`)\n\n    msg = `<b>${aToken.name}</b> must use its action before moving this turn to make a melee attack \n    against a creature other than itself that <b>${sTokenName}</b> mentally chooses. ${aToken.name}\n    can act normally if ${sTokenName} chooses no creature or if none are within its reach.`\n    let titleMsg = \"Madness! It's Madness!!!\"\n    // COOL-THING: Simple Acknowledgement Dialog.prompt\n    Dialog.prompt({\n        title: titleMsg,\n        content: `<br>${msg}<br><br>`,\n        label: \"Sadly, I Got the Message\",\n        callback: () => {/*ui.notifications.info(\"Prompt button pressed!\")*/ }\n    });\n    jez.postMessage({ color: jez.randomDarkColor(), fSize: 14, msg: msg, title: titleMsg, token: aToken })\n    jez.log(`Present a start of turn chat message reminding victim of effect of ${EFFECT}`)\n    for (let i = 0; i < args.length; i++) jez.log(`  args[${i}]`, args[i]);\n    jez.log(`-------------- Finished --- ${MACRONAME} ${FUNCNAME} -----------------`);\n    return (true);\n}",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        }
      }
    },
    "midiProperties": {
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "rollOther": false,
      "critOther": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "toggleEffect": false
    },
    "exportSource": {
      "world": "travels-in-barovia-ce",
      "system": "dnd5e",
      "coreVersion": "9.269",
      "systemVersion": "1.6.2"
    }
  }
}