{
  "name": "Psychic Lance",
  "type": "spell",
  "img": "systems/dnd5e/icons/spells/link-royal-3.jpg",
  "data": {
    "description": {
      "value": "<h2>Raulothim's Psychic Lance</h2>\n<p style=\"box-sizing:border-box;outline:0px;margin-top:0px;margin-bottom:15px;caret-color:#000000;font-family:Roboto, Helvetica, sans-serif;font-size:13px\">You unleash a shimmering lance of psychic power from your forehead at a creature that you can see within range. Alternatively, you can utter a creature’s name. If the named target is within range, it becomes the spell’s target even if you can’t see it. If the named target isn’t within range, the lance dissipates without effect.</p>\n<p style=\"box-sizing:border-box;outline:0px;margin-top:0px;margin-bottom:15px;caret-color:#000000;font-family:Roboto, Helvetica, sans-serif;font-size:13px\">The target must make an <strong>INT save</strong>. On a failed save, the target takes <strong>7d6 psychic damage</strong> and is <strong>incapacitated</strong> until the start of your next turn. On a successful save, the creature takes half as much damage and isn’t incapacitated.</p>\n<p style=\"box-sizing:border-box;outline:0px;margin-top:0px;margin-bottom:15px;caret-color:#000000;font-family:Roboto, Helvetica, sans-serif;font-size:13px\"><em style=\"box-sizing:border-box;outline:0px\"><strong style=\"box-sizing:border-box;outline:0px\">At Higher Levels.</strong></em><span class=\"Apple-converted-space\"> </span>When you cast this spell using a spell slot of 5th level or higher, the damage increases by 1d6 for each slot level above 4th.</p>",
      "chat": "",
      "unidentified": ""
    },
    "source": "",
    "activation": {
      "type": "action",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": null,
      "units": ""
    },
    "target": {
      "value": 1,
      "width": null,
      "units": "",
      "type": "creature"
    },
    "range": {
      "value": 120,
      "long": null,
      "units": "ft"
    },
    "uses": {
      "value": null,
      "max": "",
      "per": ""
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": null
    },
    "ability": "",
    "actionType": "save",
    "attackBonus": 0,
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": ""
    },
    "damage": {
      "parts": [
        [
          "7d6[psychic]",
          "psychic"
        ]
      ],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "int",
      "dc": null,
      "scaling": "spell"
    },
    "level": 4,
    "school": "enc",
    "components": {
      "value": "",
      "vocal": true,
      "somatic": false,
      "material": false,
      "ritual": false,
      "concentration": false
    },
    "materials": {
      "value": "",
      "consumed": false,
      "cost": 0,
      "supply": 0
    },
    "preparation": {
      "mode": "prepared",
      "prepared": true
    },
    "scaling": {
      "mode": "level",
      "formula": "1d6"
    }
  },
  "effects": [
    {
      "_id": "b3m98kkzkw5mqjmu",
      "changes": [
        {
          "key": "StatusEffect",
          "mode": 0,
          "value": "Convenient Effect: Incapacitated",
          "priority": "20"
        }
      ],
      "disabled": false,
      "duration": {
        "startTime": null
      },
      "icon": "systems/dnd5e/icons/spells/link-royal-3.jpg",
      "label": "Psychic Lance",
      "transfer": false,
      "flags": {
        "dae": {
          "selfTarget": false,
          "stackable": "none",
          "durationExpression": "",
          "macroRepeat": "none",
          "specialDuration": [
            "turnStartSource"
          ],
          "transfer": false
        },
        "core": {
          "statusId": ""
        },
        "dnd5e-helpers": {
          "rest-effect": "Ignore"
        },
        "ActiveAuras": {
          "isAura": false,
          "aura": "None",
          "radius": null,
          "alignment": "",
          "type": "",
          "ignoreSelf": false,
          "height": false,
          "hidden": false,
          "displayTemp": false,
          "hostile": false,
          "onlyOnce": false
        }
      },
      "tint": null,
      "selectedKey": "StatusEffect"
    }
  ],
  "flags": {
    "midi-qol": {
      "effectActivation": false,
      "onUseMacroName": "[postActiveEffects]ItemMacro"
    },
    "midiProperties": {
      "nodam": false,
      "fulldam": false,
      "halfdam": true,
      "rollOther": false,
      "critOther": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "toggleEffect": false
    },
    "autoanimations": {
      "version": 4,
      "killAnim": false,
      "animLevel": false,
      "options": {
        "ammo": false,
        "staticType": "sourcetarget",
        "menuType": "",
        "variant": "",
        "enableCustom": true,
        "repeat": null,
        "delay": null,
        "scale": null,
        "opacity": null,
        "unbindAlpha": false,
        "unbindVisibility": false,
        "persistent": false,
        "customPath": "modules/jb2a_patreon/Library/Generic/Energy/EnergyBeam_02_Regular_GreenYellow_30ft_1600x400.webm"
      },
      "override": false,
      "sourceToken": {
        "enable": false
      },
      "targetToken": {
        "enable": false
      },
      "levels3d": {
        "type": ""
      },
      "macro": {
        "enable": false
      },
      "animType": "static",
      "animation": "",
      "color": "",
      "audio": {
        "a01": {
          "enable": false
        }
      },
      "preview": false,
      "explosions": {
        "enable": false
      }
    },
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Psychic Lance",
          "type": "script",
          "author": "ZjFlOWYxZjM5ZTZj",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "const MACRONAME = \"Psychic_Lance.0.1.js\"\nconst TL = 1;                               // Trace Level for this macro\n/*********1*********2*********3*********4*********5*********6*********7*********8*********9*********0*********1*********2*********3*\n * Play a VFX effect from the caster to the target\n * \n * 03/22/24 0.1 Creation of Macro\n *********1*********2*********3*********4*********5*********6*********7*********8*********9*********0*********1*********2*********3*/\nconst MACRO = MACRONAME.split(\".\")[0]       // Trim off the version number and extension\nconst TAG = `${MACRO} |`\nlet msg = \"\";                               // Global message string\n//-----------------------------------------------------------------------------------------------------------------------------------\nif (TL > 0) jez.log(`${TAG} === Starting ===`);\nif (TL > 1) for (let i = 0; i < args.length; i++) jez.log(`  args[${i}]`, args[i]);\n//-----------------------------------------------------------------------------------------------------------------------------------\n// Set standard variables\n//\nconst L_ARG = args[args.length - 1]; // See https://gitlab.com/tposney/dae#lastarg for contents\nlet aToken = (L_ARG.tokenId) ? canvas.tokens.get(L_ARG.tokenId) : game.actors.get(L_ARG.tokenId)\n//-----------------------------------------------------------------------------------------------------------------------------------\n// Run the main procedures, choosing based on how the macro was invoked\n//\nif (args[0]?.tag === \"OnUse\") await doOnUse({ traceLvl: TL });          // Midi ItemMacro On Use\nif (TL > 1) jez.log(`${TAG} === Finished ===`);\n/*********1*********2*********3*********4*********5*********6*********7*********8*********9*********0*********1*********2*********3*\n *    END_OF_MAIN_MACRO_BODY\n *                                END_OF_MAIN_MACRO_BODY\n *                                                             END_OF_MAIN_MACRO_BODY\n ***********************************************************************************************************************************\n * Check the setup of things.  Post bad message and return false fr bad, true for ok!\n *********1*********2*********3*********4*********5*********6*********7*********8*********9*********0*********1*********2*********3*/\nasync function preCheck() {\n    if (args[0].targets.length !== 1)\n        return jez.badNews(`Must target exactly one target.  ${args[0]?.targets?.length} were targeted.`, 'w')\n    return true\n}\n/*********1*********2*********3*********4*********5*********6*********7*********8*********9*********0*********1*********2*********3*\n * Perform the code that runs when this macro is invoked as an ItemMacro \"OnUse\"\n *********1*********2*********3*********4*********5*********6*********7*********8*********9*********0*********1*********2*********3*/\nasync function doOnUse(options = {}) {\n    const FUNCNAME = \"doOnUse(options={})\";\n    const FNAME = FUNCNAME.split(\"(\")[0]\n    const TAG = `${MACRO} ${FNAME} |`\n    const TL = options.traceLvl ?? 0\n    if (TL === 1) jez.log(`${TAG} --- Starting ---`);\n    if (TL > 1) jez.log(`${TAG} --- Starting --- ${FUNCNAME} ---`, \"options\", options);\n    await jez.wait(100)\n    //-------------------------------------------------------------------------------------------------------------------------------\n    if (!await preCheck()) return (false);\n    let tToken = canvas.tokens.get(args[0]?.targets[0]?.id); // First Targeted Token, if any\n    runVFX(aToken, tToken)\n    //-------------------------------------------------------------------------------------------------------------------------------\n    // \n    if (TL > 0) jez.log(`${TAG} --- Finished ---`);\n    return true;\n}/***************************************************************************************************\n * Play a VFX beam from the drained target to the caster\n ***************************************************************************************************/\nasync function runVFX(token2, token1) {\n    console.log('runVFX',token1, token2)\n    const VFX_BEAM = \"jb2a.energy_strands.range.multiple.dark_red.01\"\n    const VFX_CLOUD = \"jb2a.energy_strands.complete.dark_red.01\"\n    new Sequence()\n        .effect()\n            .atLocation(token2)\n            .stretchTo(token1)      // Replacement for .reachTowards\n            .scale(1)\n            .repeats(3,1500)\n            .file(VFX_BEAM)\n            .waitUntilFinished(-2000) \n        .effect()\n            .file(VFX_CLOUD)\n            .repeats(2,2000)\n            .atLocation(token1)\n            .scale(0.3)\n            .opacity(1)\n        .play();\n    }",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        }
      }
    },
    "core": {
      "sourceId": "Item.PUIDHty1WmroBTvn"
    },
    "exportSource": {
      "world": "travels-in-barovia-ce",
      "system": "dnd5e",
      "coreVersion": "9.280",
      "systemVersion": "1.6.2"
    }
  }
}