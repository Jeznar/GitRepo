{
  "name": "Confusion",
  "type": "spell",
  "img": "Icons_JGB/Misc/Confusion_Befuddled.png",
  "data": {
    "description": {
      "value": "<p>This spell assails and distorts the minds of creatures, generating illusions and causing uncontrolled actions. Each creature in a sphere of 10-foot-radius centered on a point chosen in the range of the spell must make a Wisdom saving throw otherwise it will be affected by the spell.</p>\n<p>See: <a href=\"https://www.dndbeyond.com/spells/confusion\" target=\"_blank\" rel=\"noopener\">D&amp;D Beyond Description</a> for spell details.</p>\n<p><strong>Higher Levels.&nbsp;</strong>When you cast this spell using a level spell slot 5 or more, the radius of the sphere increases by 5 feet for each level of higher spell slot to 4.</p>\n<hr />\n<p><strong>FoundryVTT</strong>: Up level casting is not automated.&nbsp; It can be achieved by <strong>manually</strong> changing the spell area of affect before an uplevel cast (put it back after though).</p>",
      "chat": "",
      "unidentified": ""
    },
    "source": "PHB pg. 224",
    "activation": {
      "type": "action",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": 1,
      "units": "minute"
    },
    "target": {
      "value": 10,
      "width": null,
      "units": "ft",
      "type": "sphere"
    },
    "range": {
      "value": 90,
      "long": 0,
      "units": "ft"
    },
    "uses": {
      "value": 0,
      "max": "0",
      "per": ""
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": null
    },
    "ability": "",
    "actionType": "save",
    "attackBonus": 0,
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": null
    },
    "damage": {
      "parts": [],
      "versatile": "",
      "value": ""
    },
    "formula": "1d10",
    "save": {
      "ability": "wis",
      "dc": null,
      "scaling": "spell"
    },
    "level": 4,
    "school": "enc",
    "components": {
      "value": "",
      "vocal": true,
      "somatic": true,
      "material": true,
      "ritual": false,
      "concentration": true
    },
    "materials": {
      "value": "Three walnut shells.",
      "consumed": false,
      "cost": 0,
      "supply": 0
    },
    "preparation": {
      "mode": "prepared",
      "prepared": true
    },
    "scaling": {
      "mode": "level",
      "formula": ""
    },
    "attunement": null
  },
  "effects": [
    {
      "_id": "KVLW7oq1VcRL8DCt",
      "flags": {
        "dae": {
          "macroRepeat": "startEveryTurn",
          "stackable": "none",
          "durationExpression": "",
          "specialDuration": [],
          "transfer": false
        },
        "core": {
          "statusId": ""
        },
        "dnd5e-helpers": {
          "rest-effect": "Ignore"
        },
        "ActiveAuras": {
          "isAura": false,
          "aura": "None",
          "radius": null,
          "alignment": "",
          "type": "",
          "ignoreSelf": false,
          "height": false,
          "hidden": false,
          "displayTemp": false,
          "hostile": false,
          "onlyOnce": false
        }
      },
      "changes": [
        {
          "key": "flags.midi-qol.OverTime",
          "mode": 2,
          "value": "turn=end, saveAbility=wis, saveDC=@attributes.spelldc,label=\"Save vs Confusion\"",
          "priority": "20"
        },
        {
          "key": "macro.itemMacro",
          "mode": 0,
          "value": "0",
          "priority": "20"
        }
      ],
      "disabled": false,
      "duration": {
        "startTime": null
      },
      "icon": "Icons_JGB/Misc/Confusion_Befuddled.png",
      "label": "Confusion",
      "tint": "",
      "transfer": false,
      "selectedKey": [
        "flags.midi-qol.OverTime",
        "macro.itemMacro"
      ]
    }
  ],
  "flags": {
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Confusion",
          "type": "script",
          "author": "ZjFlOWYxZjM5ZTZj",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "const MACRONAME = \"Confusion.0.1.js\"\n/*********1*********2*********3*********4*********5*********6*********7*********8*********9*********0\n * This macro is very much based on the one provided with Midi SRD.  I've done a lot of formatting \n * and adding of VFX and polish to the messages.\n * \n * 07/22/22 0.1 Creation of Macro\n *********1*********2*********3*********4*********5*********6*********7*********8*********9*********/\nconst MACRO = MACRONAME.split(\".\")[0]       // Trim of the version number and extension\nconst TL = 0;                               // Trace Level for this macro\nlet msg = \"\";                               // Global message string\n//---------------------------------------------------------------------------------------------------\nif (TL > 1) jez.trace(`=== Starting === ${MACRONAME} ===`);\nif (TL > 2) for (let i = 0; i < args.length; i++) jez.trace(`  args[${i}]`, args[i]);\nconst LAST_ARG = args[args.length - 1];\n//---------------------------------------------------------------------------------------------------\n// Set the value for the Active Token (aToken)\nlet aToken;\nif (LAST_ARG.tokenId) aToken = canvas.tokens.get(LAST_ARG.tokenId);\nelse aToken = game.actors.get(LAST_ARG.tokenId);\n//\n//---------------------------------------------------------------------------------------------------\n// Set Macro specific globals\n//\nconst VFX_FACE_CONFUSED = 'Icons_JGB/Misc/Confusion_Befuddled.png'  // Move in random direction\nconst VFX_FACE_DRUNK = 'Icons_JGB/Misc/Confusion_Drunk.png'         // No actions\nconst VFX_FACE_ANGRY = 'Icons_JGB/Misc/Confusion_Angry.png'         // Attack random target\nconst DIRECTION = [ \n    \"East (Right)\", \"South East (Down/Right)\",\"South (Down)\", \"South West (Down/Left)\",\n    \"West (Left)\", \"North West (Up/Left)\",\"North (Up)\", \"North East (Up/Right)\"];\n//---------------------------------------------------------------------------------------------------\n// Run the main procedures, choosing based on how the macro was invoked\n//\n// if (args[0] === \"off\") await doOff();                   // DAE removal\n// if (args[0]?.tag === \"OnUse\") await doOnUse();          // Midi ItemMacro On Use\nif (args[0] === \"each\") doEach();\t\t\t\t\t    // DAE everyround\nif (TL > 1) jez.trace(`=== Starting === ${MACRONAME} ===`);\n/*********1*********2*********3*********4*********5*********6*********7*********8*********9*********0\n *    END_OF_MAIN_MACRO_BODY\n *                                END_OF_MAIN_MACRO_BODY\n *                                                             END_OF_MAIN_MACRO_BODY\n ****************************************************************************************************\n * Perform the code that runs when this macro is invoked each round by DAE\n *********1*********2*********3*********4*********5*********6*********7*********8*********9*********/\nasync function doEach() {\n    const FUNCNAME = \"doEach()\";\n    const FNAME = FUNCNAME.split(\"(\")[0]\n    if (TL > 1) jez.trace(`--- Starting --- ${MACRONAME} ${FNAME} ---`);\n    //-----------------------------------------------------------------------------------------------\n    // Roll the d10 to see what the confused actor can do\n    //\n    let roll = await new Roll(`1d10`).roll();   // Roll a d10 to decide what the actor can/will do\n    //-----------------------------------------------------------------------------------------------\n    // Step through the possibilities, run correct VFX and set msg\n    //\n    if (roll.total == 1) {\n        let dRoll = await new Roll(`1d8`).roll();   // Roll a d8 to pick a direction\n        msg = `<b>${aToken.name}</b> must use all its Movement to move <b>${DIRECTION[dRoll.total-1]}</b>. \n        ${aToken.name} can take no action this turn.`;\n        runVFX(VFX_FACE_CONFUSED)\n    } else if (roll.total >= 2 && roll.total <= 6 ) {\n        msg = `<b>${aToken.name}</b> can not move or take Actions this turn.`;\n        runVFX(VFX_FACE_DRUNK)\n    } else if (roll.total >= 7 && roll.total <= 8) {\n        msg = `<b>${aToken.name}</b> must use its action to make a melee Attack against a randomly determined \n        creature within its reach. If there is no creature within its reach, ${aToken.name} does nothing this \n        turn.`\n        runVFX(VFX_FACE_ANGRY)\n    } else if (roll.total >= 9) {\n        msg = `<b>${aToken.name}</b> can act and move normally this turn.`;\n    }\n    //-----------------------------------------------------------------------------------------------\n    // Create & Post Chat Card \n    //\n    let cont = `<div class=\"dnd5e chat-card item-card midi-qol-item-card\">\n        <header class=\"card-header flexrow\">\n        <img src=\"systems/dnd5e/icons/spells/wind-magenta-3.jpg\" title=\"Confusion\" width=\"36\" height=\"36\" />\n        <h3 class=\"item-name\">Confusion</h3>\n      </header></div>\n      <div class=\"dice-roll\">\n        <div class=\"dice-result\">\n          <p style=\"color:${jez.randomDarkColor()};font-size:14px\">${msg}</p>\n          <h4 class=\"dice-total\">${roll.total}</h4>\n          </div>`;\n    ChatMessage.create({ roll: roll, speaker: { alias: aToken.name }, content: cont });\n    //-----------------------------------------------------------------------------------------------\n    // Done\n    //\n    if (TL > 1) jez.trace(`--- Finished --- ${MACRONAME} ${FNAME} ---`);\n    return true;\n    //-----------------------------------------------------------------------------------------------\n    // Run simple video on the token with the attitude change\n    //\n    function runVFX(fileName) {\n        new Sequence()\n            .effect()\n            .file(fileName)\n            .atLocation(aToken)\n            .center()\n            .scaleToObject(1)\n            .opacity(1)\n            .fadeIn(1500)\n            .duration(7000)\n            .fadeOut(1500)\n            .play()\n    }\n}",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        }
      }
    },
    "dae": {
      "activeEquipped": false,
      "alwaysActive": false
    },
    "core": {
      "sourceId": "Compendium.Dynamic-Effects-SRD.DAE SRD Spells.MhbRwMn9laXsmL5d"
    },
    "midi-qol": {
      "onUseMacroName": "",
      "effectActivation": false
    },
    "midiProperties": {
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "rollOther": false,
      "critOther": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "toggleEffect": false
    },
    "autoanimations": {
      "version": 4,
      "killAnim": false,
      "animLevel": false,
      "options": {
        "ammo": false,
        "menuType": "circle",
        "variant": "",
        "enableCustom": true,
        "repeat": null,
        "delay": null,
        "scaleX": null,
        "scaleY": null,
        "opacity": null,
        "removeTemplate": true,
        "persistent": false,
        "customPath": "modules/jb2a_patreon/Library/Generic/Butterflies/Butterflies_01_Regular_Orange_Many_400x400.webm"
      },
      "override": true,
      "sourceToken": {
        "enable": false
      },
      "targetToken": {
        "enable": false
      },
      "levels3d": {
        "type": ""
      },
      "macro": {
        "enable": false
      },
      "animType": "template",
      "animation": "",
      "color": "",
      "audio": {
        "a01": {
          "enable": false
        }
      },
      "preview": false
    },
    "exportSource": {
      "world": "travels-in-barovia-ce",
      "system": "dnd5e",
      "coreVersion": "9.269",
      "systemVersion": "1.6.2"
    }
  }
}