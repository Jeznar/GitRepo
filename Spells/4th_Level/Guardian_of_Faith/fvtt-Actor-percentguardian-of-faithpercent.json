{
  "name": "%Guardian of Faith%",
  "type": "npc",
  "img": "Icons_JGB/Spells/4th_Level/Guardian_of_Faith.png",
  "data": {
    "abilities": {
      "str": {
        "value": 10,
        "proficient": 0,
        "bonuses": {
          "check": "",
          "save": ""
        }
      },
      "dex": {
        "value": 10,
        "proficient": 0,
        "bonuses": {
          "check": "",
          "save": ""
        }
      },
      "con": {
        "value": 10,
        "proficient": 0,
        "bonuses": {
          "check": "",
          "save": ""
        }
      },
      "int": {
        "value": 10,
        "proficient": 0,
        "bonuses": {
          "check": "",
          "save": ""
        }
      },
      "wis": {
        "value": 10,
        "proficient": 0,
        "bonuses": {
          "check": "",
          "save": ""
        }
      },
      "cha": {
        "value": 10,
        "proficient": 0,
        "bonuses": {
          "check": "",
          "save": ""
        }
      }
    },
    "attributes": {
      "ac": {
        "flat": null,
        "calc": "default",
        "formula": ""
      },
      "hp": {
        "value": 60,
        "min": 0,
        "max": 60,
        "temp": null,
        "tempmax": 0,
        "formula": "60"
      },
      "init": {
        "value": 0,
        "bonus": 0
      },
      "movement": {
        "burrow": 0,
        "climb": 0,
        "fly": 0,
        "swim": 0,
        "walk": 0,
        "units": "ft",
        "hover": false
      },
      "attunement": {
        "max": 3
      },
      "senses": {
        "darkvision": 0,
        "blindsight": 0,
        "tremorsense": 0,
        "truesight": 0,
        "units": "ft",
        "special": ""
      },
      "spellcasting": "int"
    },
    "details": {
      "biography": {
        "value": "",
        "public": ""
      },
      "alignment": "",
      "race": "",
      "type": {
        "value": "celestial",
        "subtype": "",
        "swarm": "",
        "custom": ""
      },
      "environment": "",
      "cr": 1,
      "spellLevel": 0,
      "xp": {
        "value": 10
      },
      "source": ""
    },
    "traits": {
      "size": "lg",
      "di": {
        "value": [
          "acid",
          "bludgeoning",
          "cold",
          "fire",
          "force",
          "lightning",
          "necrotic",
          "physical",
          "piercing",
          "poison",
          "psychic",
          "radiant",
          "slashing",
          "thunder",
          "silver",
          "adamant",
          "spell",
          "nonmagic",
          "magic",
          "healing",
          "temphp"
        ],
        "custom": ""
      },
      "dr": {
        "value": [],
        "custom": ""
      },
      "dv": {
        "value": [],
        "custom": ""
      },
      "ci": {
        "value": [
          "blinded",
          "charmed",
          "deafened",
          "diseased",
          "exhaustion",
          "frightened",
          "grappled",
          "incapacitated",
          "invisible",
          "paralyzed",
          "petrified",
          "poisoned",
          "prone",
          "restrained",
          "stunned",
          "unconscious"
        ],
        "custom": ""
      },
      "languages": {
        "value": [],
        "custom": ""
      }
    },
    "currency": {
      "pp": 0,
      "gp": 0,
      "ep": 0,
      "sp": 0,
      "cp": 0
    },
    "skills": {
      "acr": {
        "value": 0,
        "ability": "dex",
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "ani": {
        "value": 0,
        "ability": "wis",
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "arc": {
        "value": 0,
        "ability": "int",
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "ath": {
        "value": 0,
        "ability": "str",
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "dec": {
        "value": 0,
        "ability": "cha",
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "his": {
        "value": 0,
        "ability": "int",
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "ins": {
        "value": 0,
        "ability": "wis",
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "itm": {
        "value": 0,
        "ability": "cha",
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "inv": {
        "value": 0,
        "ability": "int",
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "med": {
        "value": 0,
        "ability": "wis",
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "nat": {
        "value": 0,
        "ability": "int",
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "prc": {
        "value": 0,
        "ability": "wis",
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "prf": {
        "value": 0,
        "ability": "cha",
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "per": {
        "value": 0,
        "ability": "cha",
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "rel": {
        "value": 0,
        "ability": "int",
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "slt": {
        "value": 0,
        "ability": "dex",
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "ste": {
        "value": 0,
        "ability": "dex",
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "sur": {
        "value": 0,
        "ability": "wis",
        "bonuses": {
          "check": "",
          "passive": ""
        }
      }
    },
    "spells": {
      "spell1": {
        "value": 0,
        "override": null
      },
      "spell2": {
        "value": 0,
        "override": null
      },
      "spell3": {
        "value": 0,
        "override": null
      },
      "spell4": {
        "value": 0,
        "override": null
      },
      "spell5": {
        "value": 0,
        "override": null
      },
      "spell6": {
        "value": 0,
        "override": null
      },
      "spell7": {
        "value": 0,
        "override": null
      },
      "spell8": {
        "value": 0,
        "override": null
      },
      "spell9": {
        "value": 0,
        "override": null
      },
      "pact": {
        "value": 0,
        "override": null
      }
    },
    "bonuses": {
      "mwak": {
        "attack": "",
        "damage": ""
      },
      "rwak": {
        "attack": "",
        "damage": ""
      },
      "msak": {
        "attack": "",
        "damage": ""
      },
      "rsak": {
        "attack": "",
        "damage": ""
      },
      "abilities": {
        "check": "",
        "save": "",
        "skill": ""
      },
      "spell": {
        "dc": ""
      }
    },
    "resources": {
      "legact": {
        "value": 0,
        "max": 0
      },
      "legres": {
        "value": 0,
        "max": 0
      },
      "lair": {
        "value": false,
        "initiative": 0
      }
    }
  },
  "token": {
    "name": "%Guardian of Faith%",
    "img": "Icons_JGB/Spells/4th_Level/Guardian_of_Faith.png",
    "displayName": 30,
    "actorLink": false,
    "width": 2,
    "height": 2,
    "scale": 1,
    "mirrorX": false,
    "mirrorY": false,
    "lockRotation": false,
    "rotation": 0,
    "alpha": 1,
    "vision": false,
    "dimSight": 0,
    "brightSight": 0,
    "sightAngle": 0,
    "light": {
      "alpha": 0.5,
      "angle": 0,
      "bright": 0,
      "coloration": 1,
      "dim": 0,
      "gradual": true,
      "luminosity": 0.5,
      "saturation": 0,
      "contrast": 0,
      "shadows": 0,
      "animation": {
        "speed": 5,
        "intensity": 5,
        "reverse": false
      },
      "darkness": {
        "min": 0,
        "max": 1
      }
    },
    "disposition": 0,
    "displayBars": 30,
    "bar1": {
      "attribute": "attributes.hp"
    },
    "bar2": {
      "attribute": null
    },
    "flags": {},
    "randomImg": false
  },
  "items": [
    {
      "_id": "bD32cNi9DNAvBdJZ",
      "name": "Rebuke Trespass",
      "type": "spell",
      "img": "Icons_JGB/Spells/4th_Level/Guardian_of_Faith.png",
      "data": {
        "description": {
          "value": "<p>This abilit should be used on any creature hostile to you that moves to a space within 10 feet of the guardian for the first time on a turn.</p>\n<p>It must succeed on a Dexterity saving throw. The creature takes 20 radiant damage on a failed save, or half as much damage on a successful one. The guardian vanishes when it has dealt a total of 60 damage.</p>\n<hr />\n<p><strong>FoundryVTT</strong>: This needs to be manually targeted and fired against each trespasser.</p>",
          "chat": "",
          "unidentified": ""
        },
        "source": "",
        "activation": {
          "type": "special",
          "cost": 0,
          "condition": "Target comes within 10 feet first time in a turn"
        },
        "duration": {
          "value": null,
          "units": "inst"
        },
        "target": {
          "value": null,
          "width": null,
          "units": "",
          "type": ""
        },
        "range": {
          "value": 10,
          "long": null,
          "units": "ft"
        },
        "uses": {
          "value": null,
          "max": "",
          "per": ""
        },
        "consume": {
          "type": "",
          "target": "",
          "amount": null
        },
        "ability": "",
        "actionType": "save",
        "attackBonus": 0,
        "chatFlavor": "",
        "critical": {
          "threshold": null,
          "damage": ""
        },
        "damage": {
          "parts": [
            [
              "20",
              "radiant"
            ]
          ],
          "versatile": ""
        },
        "formula": "",
        "save": {
          "ability": "dex",
          "dc": null,
          "scaling": "wis"
        },
        "level": 0,
        "school": "abj",
        "components": {
          "value": "",
          "vocal": false,
          "somatic": false,
          "material": false,
          "ritual": false,
          "concentration": false
        },
        "materials": {
          "value": "",
          "consumed": false,
          "cost": 0,
          "supply": 0
        },
        "preparation": {
          "mode": "atwill",
          "prepared": true
        },
        "scaling": {
          "mode": "none",
          "formula": ""
        },
        "attunement": null
      },
      "effects": [],
      "folder": null,
      "sort": 0,
      "permission": {
        "default": 0,
        "ZjFlOWYxZjM5ZTZj": 3
      },
      "flags": {
        "midi-qol": {
          "effectActivation": false,
          "onUseMacroName": "[postActiveEffects]ItemMacro"
        },
        "midiProperties": {
          "nodam": false,
          "fulldam": false,
          "halfdam": true,
          "rollOther": false,
          "critOther": false,
          "magicdam": false,
          "magiceffect": false,
          "concentration": false,
          "toggleEffect": false
        },
        "itemacro": {
          "macro": {
            "data": {
              "_id": null,
              "name": "Rebuke Trespass",
              "type": "script",
              "author": "ZjFlOWYxZjM5ZTZj",
              "img": "icons/svg/dice-target.svg",
              "scope": "global",
              "command": "const MACRONAME = \"Rebuke_Trespass.0.1.js\"\n/*********1*********2*********3*********4*********5*********6*********7*********8*********9*********0\n * Inflict damage to the caster equal to the basic damage caused to the target, that is don't \n * consider potential target resistance/vulerabilities\n * \n * 08/04/22 0.1 Creation of Macro\n *********1*********2*********3*********4*********5*********6*********7*********8*********9*********/ \nconst MACRO = MACRONAME.split(\".\")[0]       // Trim of the version number and extension\nconst TAG = `${MACRO} |`\nconst TL = 0;                               // Trace Level for this macro\nlet msg = \"\";                               // Global message string\n//---------------------------------------------------------------------------------------------------\nif (TL>1) jez.trace(`=== Starting === ${MACRONAME} ===`);\nif (TL>2) for (let i = 0; i < args.length; i++) jez.trace(`  args[${i}]`, args[i]);\nconst LAST_ARG = args[args.length - 1];\n//---------------------------------------------------------------------------------------------------\n// Set the value for the Active Token (aToken)\nlet aToken;         \nif (LAST_ARG.tokenId) aToken = canvas.tokens.get(LAST_ARG.tokenId); \nelse aToken = game.actors.get(LAST_ARG.tokenId);\nlet aActor = aToken.actor; \n//\n// Set the value for the Active Item (aItem)\nlet aItem;         \nif (args[0]?.item) aItem = args[0]?.item; \nelse aItem = LAST_ARG.efData?.flags?.dae?.itemData;\n//---------------------------------------------------------------------------------------------------\n// Set Macro specific globals\n//\nconst MAGICMACRO = \"ActorUpdate\";\nconst ActorUpdate = game.macros.getName(MAGICMACRO);\nif (!ActorUpdate) return jez.badNews(`Cannot locate ${MAGICMACRO} GM Macro`,\"e\");\nif (!ActorUpdate.data.flags[\"advanced-macros\"].runAsGM) \n    return jez.badNews(`${MAGICMACRO} \"Execute as GM\" needs to be checked.`);\n//---------------------------------------------------------------------------------------------------\n// Run the main procedures, choosing based on how the macro was invoked\n//\nif (args[0]?.tag === \"OnUse\") await doOnUse();          // Midi ItemMacro On Use\nif (TL>1) jez.trace(`=== Starting === ${MACRONAME} ===`);\n/*********1*********2*********3*********4*********5*********6*********7*********8*********9*********0\n *    END_OF_MAIN_MACRO_BODY\n *                                END_OF_MAIN_MACRO_BODY\n *                                                             END_OF_MAIN_MACRO_BODY\n ****************************************************************************************************\n * Post results to the chat card\n *********1*********2*********3*********4*********5*********6*********7*********8*********9*********/ \n function postResults(msg) {\n    const FUNCNAME = \"postResults(msg)\";\n    const FNAME = FUNCNAME.split(\"(\")[0] \n    const TAG = `${MACRO} ${FNAME} |`\n    if (TL>1) jez.trace(`${TAG} --- Starting ---`);\n    if (TL>2) jez.trace(\"postResults Parameters\",\"msg\",msg)\n    //-----------------------------------------------------------------------------------------------\n    let chatMsg = game.messages.get(args[args.length - 1].itemCardId);\n    jez.addMessage(chatMsg, { color: jez.randomDarkColor(), fSize: 14, msg: msg, tag: \"saves\" });\n    if (TL>1) jez.trace(`${TAG}--- Finished ---`);\n}\n/*********1*********2*********3*********4*********5*********6*********7*********8*********9*********0\n * Perform the code that runs when this macro is invoked as an ItemMacro \"OnUse\"\n *********1*********2*********3*********4*********5*********6*********7*********8*********9*********/ \n async function doOnUse() {\n    const FUNCNAME = \"doOnUse()\";\n    const FNAME = FUNCNAME.split(\"(\")[0] \n    const TAG = `${MACRO} ${FNAME} |`\n    if (TL===1) jez.trace(`${TAG} --- Starting ---`);\n    if (TL>1) jez.trace(`${TAG} --- Starting --- ${FUNCNAME} ---`);\n    // await jez.wait(100)\n    //-----------------------------------------------------------------------------------------------\n    // Must only target one token\n    //\n    let targetCnt = args[0].targets.length\n    if (targetCnt !== 1) return jez.badNews(`Target one target, you targeted ${targetCnt}.`,\"w\")\n    let tToken = canvas.tokens.get(args[0]?.targets[0]?.id); // First Targeted Token, if any\n    let tActor = tToken?.actor;\n    //-----------------------------------------------------------------------------------------------\n    // If the target made its save, deduct 20 from our hosts health\n    //\n    if (args[0].saves.length === 1){\n        if (TL>1) jez.trace(`${TAG} ${tToken.name} made it's save!`)\n        let hpVal = aActor.data.data.attributes.hp.value - 10\n        ActorUpdate.execute(token.id, { \"data.attributes.hp.value\": hpVal }); // Clip off some HP\n    }\n    //-----------------------------------------------------------------------------------------------\n    // If the target failed its save, deduct 10 from our hosts health\n    //\n    if (args[0].failedSaves.length === 1){\n        if (TL>1) jez.trace(`${TAG} ${tToken.name} failed it's save`)\n        let hpVal = aActor.data.data.attributes.hp.value - 20\n        ActorUpdate.execute(token.id, { \"data.attributes.hp.value\": hpVal }); // Clip off some HP\n    }\n    //-----------------------------------------------------------------------------------------------\n    // If our host reached zero health, remove the watch dog from our summoning actor\n    //\n    await jez.wait(100)\n    if (aActor.data.data.attributes.hp.value <= 0) {\n        if (TL>1) jez.trace(`${TAG} Remove our watchdog effect`)\n        let flagValue = await DAE.getFlag(aToken.actor, \"Guardian_of_Faith\");\n        if (TL>1) jez.trace(`${TAG} ${aToken.name} flag value ${flagValue}`)\n        oToken = await canvas.tokens.placeables.find(ef => ef.id === flagValue)\n        if (!oToken) return jez.badNews(`Unable to find token associated with ID #${flagValue}`,\"w\")\n        if (TL>2) jez.trace(`${TAG} UUID of actor for ${oToken.name}`,oToken.actor.uuid)\n        await jezcon.remove(\"Guardian of Faith\", oToken.actor.uuid, {traceLvl: TL});\n    }\n    //-----------------------------------------------------------------------------------------------\n    // If our host reached zero health, remove our host from the scene\n    //\n    if (aActor.data.data.attributes.hp.value <= 0) {\n        if (TL>1) jez.trace(`${TAG} Despawn our host`)\n    }\n    //-----------------------------------------------------------------------------------------------\n    // Exit message\n    //\n    msg = `${aToken} rebukes the trespass of ${tToken.name}`\n    postResults(msg)\n    if (TL>1) jez.trace(`--- Finished --- ${MACRONAME} ${FNAME} ---`);\n    return true;\n}",
              "folder": null,
              "sort": 0,
              "permission": {
                "default": 0
              },
              "flags": {}
            }
          }
        },
        "core": {
          "sourceId": "Item.DFOY9KBO8kFrQv10"
        }
      }
    }
  ],
  "effects": [],
  "flags": {
    "midi-qol": {
      "concentration-damage": 0
    },
    "exportSource": {
      "world": "travels-in-barovia-ce",
      "system": "dnd5e",
      "coreVersion": "9.269",
      "systemVersion": "1.6.2"
    }
  }
}