{
  "name": "Haste",
  "type": "spell",
  "img": "systems/dnd5e/icons/spells/haste-royal-2.jpg",
  "data": {
    "description": {
      "value": "<p>Choose a willing creature that you can see within range. Until the spell ends:</p>\n<blockquote>\n<p><em>✅ the target’s speed is doubled,</em></p>\n<p><em><span style=\"font-family:var(--font-primary);font-size:var(--font-size-14)\">✅ </span>it gains a +2 bonus to AC,</em></p>\n<p><em><span style=\"font-family:var(--font-primary);font-size:var(--font-size-14)\">✅ </span>it has advantage on Dexterity Saving Throws, and </em></p>\n<p><em>❌ <span style=\"font-family:var(--font-primary);font-size:var(--font-size-14)\">it gains an additional action on each of its turns. That action can be used only to take the Attack (one weapon attac⁠k only), Dash, Disengage, Hide, or Use an Object action.</span></em></p>\n</blockquote>\n<p>When the spell ends, the target can take @JournalEntry[VGOznMHXmGTon811]{No Actions},  move or otherwise until after its next turn, as a wave of lethargy sweeps over it.</p>\n<hr />\n<p><strong>FoundryVTT</strong>: Green check mark elements are automated.  Red X elements are not automated.</p>",
      "chat": "",
      "unidentified": ""
    },
    "source": "PHB pg. 250",
    "activation": {
      "type": "action",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": 1,
      "units": "minute"
    },
    "target": {
      "value": 1,
      "width": null,
      "units": "",
      "type": "creature"
    },
    "range": {
      "value": 30,
      "long": 0,
      "units": "ft"
    },
    "uses": {
      "value": 0,
      "max": "0",
      "per": ""
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": null
    },
    "ability": "",
    "actionType": "util",
    "attackBonus": 0,
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": null
    },
    "damage": {
      "parts": [],
      "versatile": "",
      "value": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": null,
      "scaling": "spell",
      "value": ""
    },
    "level": 3,
    "school": "trs",
    "components": {
      "value": "",
      "vocal": true,
      "somatic": true,
      "material": true,
      "ritual": false,
      "concentration": true
    },
    "materials": {
      "value": "A shaving of licorice root",
      "consumed": false,
      "cost": 0,
      "supply": 0
    },
    "preparation": {
      "mode": "prepared",
      "prepared": true
    },
    "scaling": {
      "mode": "none",
      "formula": ""
    },
    "attributes": {
      "spelldc": 10
    },
    "attunement": null
  },
  "effects": [
    {
      "_id": "0VoBuTMoLbqIwtJJ",
      "flags": {
        "core": {
          "statusId": ""
        },
        "dae": {
          "stackable": "none",
          "durationExpression": "",
          "macroRepeat": "startEveryTurn",
          "specialDuration": [],
          "transfer": false
        },
        "dnd5e-helpers": {
          "rest-effect": "Ignore"
        },
        "ActiveAuras": {
          "isAura": false,
          "aura": "None",
          "radius": null,
          "alignment": "",
          "type": "",
          "ignoreSelf": false,
          "height": false,
          "hidden": false,
          "displayTemp": false,
          "hostile": false,
          "onlyOnce": false
        }
      },
      "changes": [
        {
          "key": "data.attributes.ac.bonus",
          "mode": 2,
          "value": "+2",
          "priority": "20"
        },
        {
          "key": "flags.midi-qol.advantage.ability.save.dex",
          "mode": 2,
          "value": "+2",
          "priority": "20"
        },
        {
          "key": "data.attributes.movement.all",
          "mode": 0,
          "value": "*2",
          "priority": "10"
        },
        {
          "key": "macro.itemMacro",
          "mode": 0,
          "value": "0",
          "priority": "20"
        }
      ],
      "disabled": false,
      "duration": {
        "startTime": null
      },
      "icon": "systems/dnd5e/icons/spells/haste-royal-2.jpg",
      "label": "Haste",
      "tint": null,
      "transfer": false,
      "selectedKey": [
        "data.attributes.ac.bonus",
        "flags.midi-qol.advantage.ability.save.dex",
        "data.attributes.movement.all",
        "macro.itemMacro"
      ]
    }
  ],
  "flags": {
    "dynamiceffects": {
      "equipActive": true,
      "alwaysActive": false,
      "effects": [
        {
          "modSpecKey": "macro.itemMacro",
          "value": "@target",
          "mode": "+",
          "targetSpecific": false,
          "id": 1,
          "itemId": "n4AhwxY8hCTyI5nb",
          "active": true,
          "_targets": []
        },
        {
          "modSpecKey": "data.attributes.ac.value",
          "value": "2",
          "mode": "+",
          "targetSpecific": false,
          "id": 2,
          "itemId": "n4AhwxY8hCTyI5nb",
          "active": true,
          "_targets": [],
          "label": "Attributes Armor Class"
        }
      ]
    },
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Haste",
          "type": "script",
          "author": "ZjFlOWYxZjM5ZTZj",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "const MACRONAME = \"Haste.0.1.js\"\n/*****************************************************************************************\n * Macro is intended to be fired as an ItemMacro by Haste.  Specifically, play a message\n * reminding players of ectra action every turn and apply the \"no actions\" effect for \n * one round at effect expiration.\n * \n * 06/02/22 0.1 Creation of Macro\n *****************************************************************************************/\nconst MACRO = MACRONAME.split(\".\")[0]     // Trim of the version number and extension\njez.log(`============== Starting === ${MACRONAME} =================`);\nfor (let i = 0; i < args.length; i++) jez.log(`  args[${i}]`, args[i]);\nconst LAST_ARG = args[args.length - 1];\nlet aActor;         // Acting actor, creature that invoked the macro\nif (LAST_ARG.tokenId) aActor = canvas.tokens.get(LAST_ARG.tokenId).actor; \nelse aActor = game.actors.get(LAST_ARG.actorId);\nlet aToken;         // Acting token, token for creature that invoked the macro\nif (LAST_ARG.tokenId) aToken = canvas.tokens.get(LAST_ARG.tokenId); \nelse aToken = game.actors.get(LAST_ARG.tokenId);\nlet aItem;          // Active Item information, item invoking this macro\nif (args[0]?.item) aItem = args[0]?.item; \nelse aItem = LAST_ARG.efData?.flags?.dae?.itemData;\nlet msg = \"\";\n//----------------------------------------------------------------------------------\n// Run the main procedures, choosing based on how the macro was invoked\n//\nif (args[0] === \"off\") await doOff();                   // DAE removal\n//if (args[0] === \"on\") await doOn();                     // DAE Application\nif (args[0]?.tag === \"OnUse\") await doOnUse();          // Midi ItemMacro On Use\nif (args[0] === \"each\") doEach();\t\t\t\t\t    // DAE removal\n// DamageBonus must return a function to the caller\n//if (args[0]?.tag === \"DamageBonus\") return(doBonusDamage());    \njez.log(`============== Finishing === ${MACRONAME} =================`);\n/***************************************************************************************************\n *    END_OF_MAIN_MACRO_BODY\n *                                END_OF_MAIN_MACRO_BODY\n *                                                             END_OF_MAIN_MACRO_BODY\n ***************************************************************************************************\n * Post results to the chat card\n ***************************************************************************************************/\n function postResults(msg) {\n    jez.log(msg);\n    let chatMsg = game.messages.get(args[args.length - 1].itemCardId);\n    jez.addMessage(chatMsg, { color: jez.randomDarkColor(), fSize: 14, msg: msg, tag: \"saves\" });\n}\n/***************************************************************************************************\n * Perform the code that runs when this macro is invoked as an ItemMacro \"OnUse\"\n ***************************************************************************************************/\n async function doOnUse() {\n    const FUNCNAME = \"doOnUse()\";\n    let tToken = canvas.tokens.get(args[0]?.targets[0]?.id); // First Targeted Token, if any\n    jez.log(`-------------- Starting --- ${MACRONAME} ${FUNCNAME} -----------------`);\n    msg = `${tToken.name} is under the effects of Haste, gaining several benefits.`\n    postResults(msg)\n    jez.log(`-------------- Finished --- ${MACRONAME} ${FUNCNAME} -----------------`);\n    return (true);\n}\n/***************************************************************************************************\n * Check the setup of things.  Setting the global errorMsg and returning true for ok!\n ***************************************************************************************************/\nasync function preCheck() {\n    if (args[0].targets.length !== 1) {     // If not exactly one target, return\n        msg = `Must target exactly one target.  ${args[0].targets.length} were targeted.`\n        postResults(msg);\n        return (false);\n    }\n    return(true)\n}\n/***************************************************************************************************\n * Perform the code that runs when this macro is removed by DAE, set Off\n ***************************************************************************************************/\n async function doOff() {\n    const FUNCNAME = \"doOff()\";\n    jez.log(`-------------- Starting --- ${MACRONAME} ${FUNCNAME} -----------------`);\n    jez.postMessage({color: jez.randomDarkColor(), \n                fSize: 14, \n                icon: aToken.data.img, \n                msg: `${aToken.name} suffers from waves of lethergy as the ferntic energy fades.`, \n                title: `No longer hasted!`, \n                token: aToken})\n    // ---------------------------------------------------------------------------------------\n    // Add an effect to the active token that expires at the end of its next turn imposing \n    // CUB condition: No Action\n    //\n    const GAME_RND = game.combat ? game.combat.round : 0;\n    let effectData = {\n        label: \"No Actions\",\n        icon: aItem.img,\n        origin: aToken.uuid,\n        disabled: false,\n        // flags: { dae: { itemData: aItem, specialDuration: ['turnEndSource'] } },\n        flags: { dae: { itemData: aItem, specialDuration: ['turnEnd'] } },\n        duration: { rounds: 2, seconds: 12, startRound: GAME_RND, startTime: game.time.worldTime },\n        changes: [\n            { key: `macro.CUB`, mode: jez.CUSTOM, value: \"No_Actions\", priority: 20 }\n        ]\n    };\n    await MidiQOL.socket().executeAsGM(\"createEffects\", { actorUuid: aActor.uuid, effects: [effectData] });\n    jez.log(`-------------- Finished --- ${MACRONAME} ${FUNCNAME} -----------------`);\n    return;\n}\n/***************************************************************************************************\n * Perform the code that runs when this macro is invoked each round by DAE\n ***************************************************************************************************/\n async function doEach() {\n    const FUNCNAME = \"doEach()\";\n    jez.log(`-------------- Starting --- ${MACRONAME} ${FUNCNAME} -----------------`);\n    jez.postMessage({color: jez.randomDarkColor(), \n        fSize: 12, \n        icon: aToken.data.img, \n        msg: `${aToken.name} is under the effects of Haste, gaining an additional action this turn. \n        That action can be used only to take the Attack (one weapon attac⁠k only), Dash, Disengage, \n        Hide, or Use an Object action.`,\n        title: `<b>${aToken.name}</b> is Hasted!`, \n        token: aToken})\n    jez.log(`-------------- Finished --- ${MACRONAME} ${FUNCNAME} -----------------`);\n    return (true);\n}",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        }
      }
    },
    "dae": {
      "activeEquipped": false,
      "alwaysActive": false
    },
    "core": {
      "sourceId": "Item.amrbkImxY8OJO528"
    },
    "midi-qol": {
      "onUseMacroName": "[postActiveEffects]ItemMacro",
      "effectActivation": false,
      "forceCEOn": false
    },
    "exportSource": {
      "world": "travels-in-barovia",
      "system": "dnd5e",
      "coreVersion": "9.269",
      "systemVersion": "1.6.0"
    },
    "midiProperties": {
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "rollOther": false,
      "critOther": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "toggleEffect": false
    }
  }
}