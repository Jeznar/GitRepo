{
  "name": "Tricksy Fey",
  "type": "npc",
  "img": "Tokens/Spells/3rd_Level/Summon_Fey/Avatars/Fey_Spirit_Triksy.Avatar.jpg",
  "data": {
    "abilities": {
      "str": {
        "value": 13,
        "proficient": 0,
        "bonuses": {
          "check": "",
          "save": ""
        }
      },
      "dex": {
        "value": 16,
        "proficient": 0,
        "bonuses": {
          "check": "",
          "save": ""
        }
      },
      "con": {
        "value": 14,
        "proficient": 0,
        "bonuses": {
          "check": "",
          "save": ""
        }
      },
      "int": {
        "value": 14,
        "proficient": 0,
        "bonuses": {
          "check": "",
          "save": ""
        }
      },
      "wis": {
        "value": 11,
        "proficient": 0,
        "bonuses": {
          "check": "",
          "save": ""
        }
      },
      "cha": {
        "value": 16,
        "proficient": 0,
        "bonuses": {
          "check": "",
          "save": ""
        }
      }
    },
    "attributes": {
      "ac": {
        "flat": 12,
        "calc": "flat",
        "formula": ""
      },
      "hp": {
        "value": 30,
        "min": 0,
        "max": 30,
        "temp": null,
        "tempmax": null,
        "formula": "30"
      },
      "init": {
        "value": 0,
        "bonus": 0
      },
      "movement": {
        "burrow": 0,
        "climb": 0,
        "fly": 0,
        "swim": 0,
        "walk": 30,
        "units": "ft",
        "hover": false
      },
      "attunement": {
        "max": 3
      },
      "senses": {
        "darkvision": 60,
        "blindsight": 0,
        "tremorsense": 0,
        "truesight": 0,
        "units": "ft",
        "special": "passive perception 10"
      },
      "spellcasting": "int"
    },
    "details": {
      "biography": {
        "value": "",
        "public": ""
      },
      "alignment": "",
      "race": "",
      "type": {
        "value": "fey",
        "subtype": "",
        "swarm": "",
        "custom": ""
      },
      "environment": "",
      "cr": 1,
      "spellLevel": 0,
      "xp": {
        "value": 10
      },
      "source": "Tasha’s Cauldron of Everything , pg. 112",
      "gender": "",
      "age": "",
      "height": "",
      "weight": "",
      "eyes": "",
      "skin": "",
      "hair": "",
      "notes1name": "",
      "notes2name": "",
      "notes3name": "",
      "notes4name": ""
    },
    "traits": {
      "size": "sm",
      "di": {
        "value": [],
        "custom": ""
      },
      "dr": {
        "value": [],
        "custom": ""
      },
      "dv": {
        "value": [],
        "custom": ""
      },
      "ci": {
        "value": [],
        "custom": ""
      },
      "languages": {
        "value": [
          "sylvan"
        ],
        "custom": "Languages of summoner"
      }
    },
    "currency": {
      "pp": 0,
      "gp": 0,
      "ep": 0,
      "sp": 0,
      "cp": 0
    },
    "skills": {
      "acr": {
        "value": 0,
        "ability": "dex",
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "ani": {
        "value": 0,
        "ability": "wis",
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "arc": {
        "value": 0,
        "ability": "int",
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "ath": {
        "value": 0,
        "ability": "str",
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "dec": {
        "value": 0,
        "ability": "cha",
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "his": {
        "value": 0,
        "ability": "int",
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "ins": {
        "value": 0,
        "ability": "wis",
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "itm": {
        "value": 0,
        "ability": "cha",
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "inv": {
        "value": 0,
        "ability": "int",
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "med": {
        "value": 0,
        "ability": "wis",
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "nat": {
        "value": 0,
        "ability": "int",
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "prc": {
        "value": 0,
        "ability": "wis",
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "prf": {
        "value": 0,
        "ability": "cha",
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "per": {
        "value": 0,
        "ability": "cha",
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "rel": {
        "value": 0,
        "ability": "int",
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "slt": {
        "value": 0,
        "ability": "dex",
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "ste": {
        "value": 0,
        "ability": "dex",
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "sur": {
        "value": 0,
        "ability": "wis",
        "bonuses": {
          "check": "",
          "passive": ""
        }
      }
    },
    "spells": {
      "spell1": {
        "value": 0,
        "override": null
      },
      "spell2": {
        "value": 0,
        "override": null
      },
      "spell3": {
        "value": 0,
        "override": null
      },
      "spell4": {
        "value": 0,
        "override": null
      },
      "spell5": {
        "value": 0,
        "override": null
      },
      "spell6": {
        "value": 0,
        "override": null
      },
      "spell7": {
        "value": 0,
        "override": null
      },
      "spell8": {
        "value": 0,
        "override": null
      },
      "spell9": {
        "value": 0,
        "override": null
      },
      "pact": {
        "value": 0,
        "override": null
      }
    },
    "bonuses": {
      "mwak": {
        "attack": "",
        "damage": ""
      },
      "rwak": {
        "attack": "",
        "damage": ""
      },
      "msak": {
        "attack": "",
        "damage": ""
      },
      "rsak": {
        "attack": "",
        "damage": ""
      },
      "abilities": {
        "check": "",
        "save": "",
        "skill": ""
      },
      "spell": {
        "dc": ""
      }
    },
    "resources": {
      "legact": {
        "value": 0,
        "max": 0
      },
      "legres": {
        "value": 0,
        "max": 0
      },
      "lair": {
        "value": false,
        "initiative": 0
      }
    }
  },
  "token": {
    "name": "Fey - Tricksy",
    "img": "Tokens/Spells/3rd_Level/Summon_Fey/Tokens/Fey_Spirit_Triksy.png",
    "displayName": 30,
    "actorLink": false,
    "width": 1,
    "height": 1,
    "scale": 0.8,
    "mirrorX": false,
    "mirrorY": false,
    "lockRotation": false,
    "rotation": 0,
    "alpha": 1,
    "vision": false,
    "dimSight": 0,
    "brightSight": 0,
    "dimLight": 0,
    "brightLight": 0,
    "sightAngle": 0,
    "lightAngle": 0,
    "lightAlpha": 0.25,
    "lightAnimation": {
      "speed": 5,
      "intensity": 5
    },
    "disposition": 0,
    "displayBars": 30,
    "bar1": {
      "attribute": "attributes.hp"
    },
    "bar2": {
      "attribute": ""
    },
    "flags": {
      "splatter": {
        "bloodColor": ""
      },
      "token-hud-wildcard": {
        "default": ""
      },
      "token-auras": {
        "aura1": {
          "permission": "all",
          "colour": "#ffffff",
          "opacity": 0.5,
          "distance": null,
          "square": false
        },
        "aura2": {
          "permission": "all",
          "colour": "#ffffff",
          "opacity": 0.5,
          "distance": null,
          "square": false
        }
      },
      "tagger": {
        "tags": ""
      },
      "monks-little-details": {
        "token-combat-animation": "",
        "token-highlight": ""
      }
    },
    "randomImg": false,
    "tint": null,
    "lightColor": null,
    "lockCamera": false,
    "x": null,
    "y": null,
    "elevation": null,
    "light": {
      "alpha": 0.5,
      "angle": 0,
      "bright": 0,
      "coloration": 1,
      "dim": 0,
      "gradual": true,
      "luminosity": 0.5,
      "saturation": 0,
      "contrast": 0,
      "shadows": 0,
      "animation": {
        "speed": 5,
        "intensity": 5,
        "reverse": false
      },
      "darkness": {
        "min": 0,
        "max": 1
      },
      "color": null
    },
    "actor": {
      "data": {
        "flags": {
          "conditional-visibility": {
            "blindsight": {
              "visionLevelValue": 0
            },
            "blinded": {
              "visionLevelValue": 0
            },
            "darkvision": {
              "visionLevelValue": 0
            },
            "devilssight": {
              "visionLevelValue": 0
            },
            "seeinvisible": {
              "visionLevelValue": 0
            },
            "tremorsense": {
              "visionLevelValue": 0
            },
            "truesight": {
              "visionLevelValue": 0
            },
            "dataforcevisible": false,
            "datausestealthpassive": false,
            "hidden": {
              "visionLevelValue": 0
            },
            "indarkness": {
              "visionLevelValue": 0
            },
            "invisible": {
              "visionLevelValue": 0
            },
            "obscured": {
              "visionLevelValue": 0
            }
          }
        }
      }
    }
  },
  "items": [
    {
      "_id": "sCZcVxpywsl6hzb2",
      "name": "Multiattack",
      "type": "feat",
      "img": "Icons_JGB/Monster_Features/Multiattack.png",
      "data": {
        "description": {
          "value": "<p>The fey makes a number of attacks equal to half this spell&rsquo;s level (rounded down).</p>\n<p>&nbsp;</p>",
          "chat": "",
          "unidentified": ""
        },
        "source": "",
        "activation": {
          "type": "action",
          "cost": 1,
          "condition": ""
        },
        "duration": {
          "value": 0,
          "units": ""
        },
        "target": {
          "value": null,
          "width": null,
          "units": "",
          "type": ""
        },
        "range": {
          "value": null,
          "long": null,
          "units": ""
        },
        "uses": {
          "value": 0,
          "max": "0",
          "per": ""
        },
        "consume": {
          "type": "",
          "target": "",
          "amount": null
        },
        "ability": "",
        "actionType": "",
        "attackBonus": 0,
        "chatFlavor": "",
        "critical": {
          "threshold": null,
          "damage": null
        },
        "damage": {
          "parts": [],
          "versatile": ""
        },
        "formula": "",
        "save": {
          "ability": "",
          "dc": null,
          "scaling": "spell"
        },
        "requirements": "",
        "recharge": {
          "value": 0,
          "charged": false
        }
      },
      "effects": [],
      "folder": "Qn8cvWIVjBiyiGxo",
      "sort": 1200000,
      "permission": {
        "default": 0,
        "ZjFlOWYxZjM5ZTZj": 3
      },
      "flags": {
        "magicitems": {
          "enabled": false,
          "equipped": false,
          "attuned": false,
          "charges": "0",
          "chargeType": "c1",
          "destroy": false,
          "destroyFlavorText": "reaches 0 charges: it crumbles into ashes and is destroyed.",
          "rechargeable": false,
          "recharge": "0",
          "rechargeType": "t1",
          "rechargeUnit": "r1",
          "sorting": "l"
        },
        "betterCurses": {
          "isCurse": false,
          "curseName": "",
          "formula": "",
          "mwak": false,
          "rwak": false,
          "msak": false,
          "rsak": false
        },
        "core": {
          "sourceId": "Item.ZDc5ODM4ZDRhNWZj"
        }
      }
    },
    {
      "_id": "bZs3XRzu6vcQzCXe",
      "name": "Fey Step",
      "type": "spell",
      "img": "icons/magic/control/debuff-energy-snare-brown.webp",
      "data": {
        "description": {
          "value": "<p>As a <strong>Bonus Action</strong>, the fey magically teleports up to 30 feet to an unoccupied space it can see. Then one of the following effects occurs, based on the fey&rsquo;s chosen mood:</p>\n<p><strong>Fuming</strong>.&nbsp;The fey has advantage on the next attack roll it makes before the end of this turn.</p>\n<p><strong>Mirthful</strong>.&nbsp;The fey can force one creature it can see within 10 feet of it to make a Wisdom saving throw against your spell save DC. Unless the save succeeds, the target is&nbsp;<a href=\"https://www.dndbeyond.com/compendium/rules/basic-rules/appendix-a-conditions#Charmed\" data-tooltip-href=\"//www.dndbeyond.com/conditions/2-tooltip?disable-webm=1&amp;disable-webm=1\">charmed</a>&nbsp;by you and the fey for 1 minute or until the target takes any damage.</p>\n<p><strong>Tricksy</strong>.&nbsp;The fey can fill a 5-foot cube within 5 feet of it with magical darkness, which lasts until the end of its next turn.</p>",
          "chat": "",
          "unidentified": ""
        },
        "source": "PHB pg. 260",
        "activation": {
          "type": "bonus",
          "cost": 1,
          "condition": ""
        },
        "duration": {
          "value": null,
          "units": "inst"
        },
        "target": {
          "value": null,
          "width": null,
          "units": "",
          "type": ""
        },
        "range": {
          "value": null,
          "long": null,
          "units": "ft"
        },
        "uses": {
          "value": 0,
          "max": "0",
          "per": ""
        },
        "consume": {
          "type": "",
          "target": "",
          "amount": null
        },
        "ability": "",
        "actionType": "util",
        "attackBonus": 0,
        "chatFlavor": "",
        "critical": {
          "threshold": null,
          "damage": null
        },
        "damage": {
          "parts": [],
          "versatile": "",
          "value": ""
        },
        "formula": "",
        "save": {
          "ability": "",
          "dc": null,
          "scaling": "spell",
          "value": ""
        },
        "level": 2,
        "school": "con",
        "components": {
          "value": "",
          "vocal": true,
          "somatic": false,
          "material": false,
          "ritual": false,
          "concentration": false
        },
        "materials": {
          "value": "",
          "consumed": false,
          "cost": 0,
          "supply": 0
        },
        "preparation": {
          "mode": "innate",
          "prepared": true
        },
        "scaling": {
          "mode": "none",
          "formula": ""
        }
      },
      "effects": [],
      "folder": "zr9AfGYgUHzgtvDV",
      "sort": -131250,
      "permission": {
        "default": 2,
        "ZjFlOWYxZjM5ZTZj": 3
      },
      "flags": {
        "autoanimations": {
          "killAnim": false,
          "options": {
            "ammo": false,
            "overrideAuto": false,
            "autoVariant": "01",
            "autoColor": "blue",
            "autoRepeat": 1,
            "autoDelay": 500,
            "autoScale": 1,
            "hideTemplate": false,
            "enableCustom01": false,
            "scale": 1.5
          },
          "override": true,
          "allSounds": {
            "item": {
              "enableAudio": false
            }
          },
          "sourceToken": {
            "enable": false
          },
          "targetToken": {
            "enable": false
          },
          "animLevel": false,
          "animType": "t12",
          "animName": "mistystep",
          "color": "green",
          "teleDist": 30
        },
        "enhancedcombathud": {
          "set1s": false,
          "set2s": false,
          "set3s": false
        },
        "midi-qol": {
          "onUseMacroName": "",
          "effectActivation": false
        },
        "betterCurses": {
          "isCurse": false,
          "curseName": "",
          "formula": "",
          "mwak": false,
          "rwak": false,
          "msak": false,
          "rsak": false
        },
        "core": {
          "sourceId": "Item.YzgyZjBlMzdkNDdm"
        },
        "itemacro": {
          "macro": {
            "data": {
              "_id": null,
              "name": "Fey Step",
              "type": "script",
              "author": "ZjFlOWYxZjM5ZTZj",
              "img": "icons/svg/dice-target.svg",
              "scope": "global",
              "command": "const MACRONAME = \"Fey_Step.0.2\"\nconsole.log(MACRONAME)\n/*****************************************************************************************\n * Create a temporary attack item to use against the victim of Heat Metal\n * \n * 01/13/22 0.1 Creation of Macro\n * 01/14/22 0.2 Add Fuming self buff\n *****************************************************************************************/\nconst DEBUG = true;\nconst MACRO = MACRONAME.split(\".\")[0]     // Trim of the version number and extension\nlog(\"\")\nlog(`============== Starting === ${MACRONAME} =================`);\nfor (let i = 0; i < args.length; i++) log(`  args[${i}]`, args[i]);\nconst lastArg = args[args.length - 1];\nlet aActor;         // Acting actor, creature that invoked the macro\nlet aToken;         // Acting token, token for creature that invoked the macro\nlet aItem;          // Active Item information, item invoking this macro\nif (lastArg.tokenId) aActor = canvas.tokens.get(lastArg.tokenId).actor; else aActor = game.actors.get(lastArg.actorId);\nif (lastArg.tokenId) aToken = canvas.tokens.get(lastArg.tokenId); else aToken = game.actors.get(lastArg.tokenId);\nif (args[0]?.item) aItem = args[0]?.item; else aItem = lastArg.efData?.flags?.dae?.itemData;\nconst CUSTOM = 0, MULTIPLY = 1, ADD = 2, DOWNGRADE = 3, UPGRADE = 4, OVERRIDE = 5;\nlog(\"------- Global Values Set -------\",\n    `Active Token (aToken) ${aToken?.name}`, aToken,\n    `Active Actor (aActor) ${aActor?.name}`, aActor,\n    `Active Item (aItem) ${aItem?.name}`, aItem)\nlet msg = \"\";\nlet errorMsg = \"\";\n\nlet nameParts = aToken.name.split(\" \")\nlet mood = nameParts[nameParts.length - 2]\nlog(`${aToken.name} is a in a ==>${mood}<== mood.`)\n\nPerformMoodSpecificSteps();\n\nlog(`============== Finishing === ${MACRONAME} =================`);\nlog(\"\")\nreturn;\n\nasync function PerformMoodSpecificSteps() {\n        log(\"Starting Async Function\");\n        switch (mood) {\n            case \"Fuming\":\n                log(\"Do fuming stuff\");\n\n                const buff = `Fuming Feystep Advantage`\n                let gameRound = game.combat ? game.combat.round : 0;\n                let effectData = {\n                    label: buff,\n                    icon: aItem.img,\n                    origin: aActor.uuid,\n                    disabled: false,\n                    duration: { turns: 1, startRound: gameRound },\n                    flags: { dae: { macroRepeat: \"none\", specialDuration: [\"turnStart\", \"1Attack\"] } },\n                    changes: [\n                        { key: `flags.midi-qol.advantage.attack.all`, mode: ADD, value: 1, priority: 20 },\n                    ]\n                };\n                await MidiQOL.socket().executeAsGM(\"createEffects\", { actorUuid: aActor.uuid, effects: [effectData] });\n                break;\n            case \"Mirthful\":\n                log(\"do mirthful stuff\");\n                /* \n                 * Mirthful. The fey can force one creature it can see within 10 feet of it to make a Wisdom saving \n                 * throw against your spell save DC. Unless the save succeeds, the target is charmed by you and the \n                 * fey for 1 minute or until the target takes any damage.\n                 */\n                break;\n            case \"Tricksy\":\n                log(\"do tricksy stuff\");\n\n\n\n                // code block\n                break;\n            default:\n                errorMsg = `Summoned Fey does not have an allowed \"mood\" (Fuming, Mirthful, or Tricksy)`;\n                log(errorMsg);\n                ui.notifications.error(errorMsg);\n                return (false);\n\n            // code block\n        }\n\n        return;\n}\n\n/***************************************************************************************************\n *    END_OF_MAIN_MACRO_BODY\n *                                END_OF_MAIN_MACRO_BODY\n *                                                             END_OF_MAIN_MACRO_BODY\n ***************************************************************************************************/\n\n/***************************************************************************************************\n * DEBUG Logging\n * \n * If passed an odd number of arguments, put the first on a line by itself in the log,\n * otherwise print them to the log seperated by a colon.  \n * \n * If more than two arguments, add numbered continuation lines. \n ***************************************************************************************************/\nfunction log(...parms) {\n    if (!DEBUG) return;             // If DEBUG is false or null, then simply return\n    let numParms = parms.length;    // Number of parameters received\n    let i = 0;                      // Loop counter\n    let lines = 1;                  // Line counter \n\n    if (numParms % 2) {  // Odd number of arguments\n        console.log(parms[i++])\n        for ( i; i<numParms; i=i+2) console.log(` ${lines++})`, parms[i],\":\",parms[i+1]);\n    } else {            // Even number of arguments\n        console.log(parms[i],\":\",parms[i+1]);\n        i = 2;\n        for ( i; i<numParms; i=i+2) console.log(` ${lines++})`, parms[i],\":\",parms[i+1]);\n    }\n}\nasync function wait(ms) { return new Promise(resolve => { setTimeout(resolve, ms); }); }",
              "folder": null,
              "sort": 0,
              "permission": {
                "default": 0
              },
              "flags": {}
            }
          }
        },
        "midiProperties": {
          "nodam": false,
          "fulldam": false,
          "halfdam": false,
          "rollOther": false,
          "critOther": false,
          "magicdam": false,
          "magiceffect": false,
          "concentration": false,
          "toggleEffect": false
        }
      },
      "changes": []
    },
    {
      "_id": "wxyX711KUNsj8hCf",
      "name": "Summon Darkness, 5 Foot",
      "type": "spell",
      "img": "modules/jb2a_patreon/Library/2nd_Level/Darkness/Darkness_01_Green_Thumb.webp",
      "data": {
        "description": {
          "value": "<p>Immediately after using @Item[4ZDtnbKJV5y6jjW5]{Fey Step}, a 5 foot radius sphere of darkness may be summoned into an adjacent space. The darkness remains until the end of your next turn.</p>",
          "chat": "",
          "unidentified": ""
        },
        "source": "PHB pg. 260",
        "activation": {
          "type": "bonus",
          "cost": 1,
          "condition": ""
        },
        "duration": {
          "value": null,
          "units": "inst"
        },
        "target": {
          "value": null,
          "width": null,
          "units": "",
          "type": ""
        },
        "range": {
          "value": 5,
          "long": null,
          "units": ""
        },
        "uses": {
          "value": 0,
          "max": "0",
          "per": ""
        },
        "consume": {
          "type": "",
          "target": "",
          "amount": null
        },
        "ability": "",
        "actionType": "util",
        "attackBonus": 0,
        "chatFlavor": "",
        "critical": {
          "threshold": null,
          "damage": null
        },
        "damage": {
          "parts": [],
          "versatile": "",
          "value": ""
        },
        "formula": "",
        "save": {
          "ability": "",
          "dc": null,
          "scaling": "spell",
          "value": ""
        },
        "level": 2,
        "school": "con",
        "components": {
          "value": "",
          "vocal": true,
          "somatic": false,
          "material": false,
          "ritual": false,
          "concentration": false
        },
        "materials": {
          "value": "",
          "consumed": false,
          "cost": 0,
          "supply": 0
        },
        "preparation": {
          "mode": "innate",
          "prepared": false
        },
        "scaling": {
          "mode": "none",
          "formula": ""
        },
        "attunement": null
      },
      "effects": [],
      "folder": "Qn8cvWIVjBiyiGxo",
      "sort": 647657,
      "permission": {
        "default": 2,
        "ZjFlOWYxZjM5ZTZj": 3
      },
      "flags": {
        "autoanimations": {
          "killAnim": false,
          "options": {
            "ammo": false,
            "overrideAuto": false,
            "autoVariant": "01",
            "autoColor": "blue",
            "autoRepeat": 1,
            "autoDelay": 500,
            "autoScale": 1
          },
          "override": false,
          "allSounds": {
            "item": {
              "enableAudio": false
            }
          },
          "sourceToken": {
            "enable": false
          },
          "targetToken": {
            "enable": false
          },
          "below": false,
          "autoOverride": {
            "enable": false
          },
          "version": 4,
          "audio": {
            "a01": {
              "enable": false,
              "file": "",
              "delay": 0,
              "volume": 0.25
            },
            "e01": {
              "enable": false,
              "file": "",
              "delay": 0,
              "volume": 0.25
            }
          }
        },
        "enhancedcombathud": {
          "set1s": false,
          "set2s": false,
          "set3s": false
        },
        "midi-qol": {
          "onUseMacroName": "[postActiveEffects]ItemMacro",
          "effectActivation": false
        },
        "betterCurses": {
          "isCurse": false,
          "curseName": "",
          "formula": "",
          "mwak": false,
          "rwak": false,
          "msak": false,
          "rsak": false
        },
        "core": {
          "sourceId": "Item.YzgyZjBlMzdkNDdm"
        },
        "midiProperties": {
          "nodam": false,
          "fulldam": false,
          "halfdam": false,
          "rollOther": false,
          "critOther": false,
          "magicdam": false,
          "magiceffect": false,
          "concentration": false,
          "toggleEffect": false
        },
        "itemacro": {
          "macro": {
            "data": {
              "_id": null,
              "name": "Summon Darkness, 5 Foot",
              "type": "script",
              "author": "ZjFlOWYxZjM5ZTZj",
              "img": "icons/svg/dice-target.svg",
              "scope": "global",
              "command": "const MACRONAME = \"Summoned_Darkness.0.1.js\"\n/*********1*********2*********3*********4*********5*********6*********7*********8*********9*********0*********1*********2*********3*\n * This is an ability for the Tricksy Fey:\n * \n *   Immediately after using  Fey Step, a 5 foot radius sphere of darkness may be summoned into an adjacent space. The darkness \n *   remains until the end of your next turn.\n * \n * 12/17/22 0.1 Created from Magehand.0.7\n *********1*********2*********3*********4*********5*********6*********7*********8*********9*********0*********1*********2*********3*/\nconst MACRO = MACRONAME.split(\".\")[0]       // Trim off the version number and extension\nconst TAG = `${MACRO} |`\nconst TL = 0;                               // Trace Level for this macro\nlet msg = \"\";                               // Global message string\n//-----------------------------------------------------------------------------------------------------------------------------------\nif (TL > 0) jez.trace(`${TAG} === Starting ===`);\nif (TL > 1) for (let i = 0; i < args.length; i++) jez.trace(`  args[${i}]`, args[i]);\n//-----------------------------------------------------------------------------------------------------------------------------------\n// Set standard variables\n//\nconst L_ARG = args[args.length - 1]; // See https://gitlab.com/tposney/dae#lastarg for contents\nlet aToken = (L_ARG.tokenId) ? canvas.tokens.get(L_ARG.tokenId) : game.actors.get(L_ARG.tokenId)\nlet aActor = aToken.actor;\nlet aItem = (args[0]?.item) ? args[0]?.item : L_ARG.efData?.flags?.dae?.itemData\nconst VERSION = Math.floor(game.VERSION);\nconst GAME_RND = game.combat ? game.combat.round : 0;\n//-----------------------------------------------------------------------------------------------------------------------------------\n// Set Macro specific globals\n//\nconst MINION = \"Summoned Darkness, 5 Foot\"\nconst MINION_NAME = `Tricksy Darkness`\n//-----------------------------------------------------------------------------------------------------------------------------------\n// Run the main procedures, choosing based on how the macro was invoked\n//\nif (args[0]?.tag === \"OnUse\") await doOnUse({ traceLvl: TL });          // Midi ItemMacro On Use\nif (args[0] === \"off\") await doOff({ traceLvl: TL });                   // DAE removal\nif (TL > 1) jez.trace(`${TAG} === Finished ===`);\n/*********1*********2*********3*********4*********5*********6*********7*********8*********9*********0*********1*********2*********3*\n *    END_OF_MAIN_MACRO_BODY\n *                                END_OF_MAIN_MACRO_BODY\n *                                                             END_OF_MAIN_MACRO_BODY\n ***********************************************************************************************************************************\n * Check the setup of things.  Post bad message and return false fr bad, true for ok!\n *********1*********2*********3*********4*********5*********6*********7*********8*********9*********0*********1*********2*********3*/\nasync function preCheck() {\n    if (args[0].targets.length !== 1)\n        return jez.badNews(`Must target exactly one target.  ${args[0]?.targets?.length} were targeted.`, 'w')\n    return true\n}\n/*********1*********2*********3*********4*********5*********6*********7*********8*********9*********0*********1*********2*********3*\n * Post results to the chat card\n *********1*********2*********3*********4*********5*********6*********7*********8*********9*********0*********1*********2*********3*/\nfunction postResults(msg) {\n    const FUNCNAME = \"postResults(msg)\";\n    const FNAME = FUNCNAME.split(\"(\")[0]\n    const TAG = `${MACRO} ${FNAME} |`\n    if (TL > 1) jez.trace(`${TAG} --- Starting ---`);\n    if (TL > 2) jez.trace(\"postResults Parameters\", \"msg\", msg)\n    //-------------------------------------------------------------------------------------------------------------------------------\n    let chatMsg = game.messages.get(args[args.length - 1].itemCardId);\n    jez.addMessage(chatMsg, { color: jez.randomDarkColor(), fSize: 14, msg: msg, tag: \"saves\" });\n    //-------------------------------------------------------------------------------------------------------------------------------\n    // \n    if (TL > 1) jez.trace(`${TAG} --- Finished ---`);\n}\n/*********1*********2*********3*********4*********5*********6*********7*********8*********9*********0*********1*********2*********3*\n * Perform the code that runs when this macro is invoked as an ItemMacro \"OnUse\"\n *********1*********2*********3*********4*********5*********6*********7*********8*********9*********0*********1*********2*********3*/\nasync function doOnUse(options = {}) {\n    const FUNCNAME = \"doOnUse(options={})\";\n    const FNAME = FUNCNAME.split(\"(\")[0]\n    const TAG = `${MACRO} ${FNAME} |`\n    const TL = options.traceLvl ?? 0\n    if (TL === 1) jez.trace(`${TAG} --- Starting ---`);\n    if (TL > 1) jez.trace(`${TAG} --- Starting --- ${FUNCNAME} ---`, \"options\", options);\n    await jez.wait(100)\n    //-------------------------------------------------------------------------------------------------------------------------------\n    // Portals need the same color for pre and post effects, so get that set here. Even though only used\n    // when we are doing portals.  This is needed to force the same choice for pre and post VFX.\n    //\n    const PORTAL_COLORS = [ \"Dark_Blue\", \"Dark_Green\", \"Dark_Purple\", \"Dark_Red\", \"Dark_RedYellow\", \"Dark_Yellow\" ]\n    let index = Math.floor((Math.random() * PORTAL_COLORS.length))\n    let portalColor = PORTAL_COLORS[index]\n    //-------------------------------------------------------------------------------------------------------------------------------\n    // Build the dataObject for our summon call\n    //\n    let argObj = {\n        defaultRange: 5,                   // Defaults to 30, but this varies per spell\n        duration: 4000,                     // Duration of the intro VFX\n        img: aItem.img,                     // Image to use on the summon location cursor\n        introTime: 250,                     // Amount of time to wait for Intro VFX\n        introVFX: `~Portals/Portal_${portalColor}_H_400x400.webm`, // default introVFX file\n        templateName: MINION, \n        minionName: MINION_NAME,\n        name: aItem.name,                   // Name of action (message only), typically aItem.name\n        outroVFX: `~Portals/Masked/Portal_${portalColor}_H_NoBG_400x400.webm`, // default outroVFX file\n        source: aToken,                     // Coords for source (with a center), typically aToken\n        width: 1,                           // Width of token to be summoned, 1 is the default\n        traceLvl: TL                        // Trace level, matching calling function decent choice\n    }\n    //-------------------------------------------------------------------------------------------------------------------------------\n    // Set up Portal effect\n    //\n    argObj.duration = 4000\n    argObj.introTime = 250\n    argObj.introVFX = `~Portals/Portal_${portalColor}_H_400x400.webm`\n    argObj.outroVFX = `~Portals/Masked/Portal_${portalColor}_H_NoBG_400x400.webm`\n    if (TL > 2) for (let key in argObj) jez.trace(`${MACRO} | argObj.${key}`, argObj[key])\n    //-------------------------------------------------------------------------------------------------------------------------------\n    const SPAWN_ARRAY = await jez.spawnAt(MINION, aToken, aActor, aItem, argObj)\n    const DARKNESS_TOKEN_ID = SPAWN_ARRAY[0]\n    if (TL > 1) jez.trace(`${TAG} jez.spawnAt returned`,DARKNESS_TOKEN_ID)\n    //-------------------------------------------------------------------------------------------------------------------------------\n    // Add an effect that expires at the end of the Fey's next turn (in combat) which will trigger doOff and delete the summoned\n    // darkness token.\n    //\n    const EXPIRE = [\"turnStart\", \"newDay\", \"longRest\", \"shortRest\"];\n    const CE_DESC = `Darkness lasts but only 6 seconds`\n    let effectData = {\n      label: aItem.name,\n      icon: aItem.img,\n      origin: L_ARG.uuid,\n      disabled: false,\n      duration: { seconds: 12, startTime: game.time.worldTime },\n      flags: { \n        dae: { macroRepeat: \"none\", specialDuration: EXPIRE }, \n        convenientDescription: CE_DESC \n      },\n      changes: [\n           { key: `macro.execute`, mode: jez.ADD, value: `DeleteTokenMacro ${DARKNESS_TOKEN_ID}`, priority: 20 },\n      ]\n    };\n    if (TL > 1) jez.trace(`${FNAME} | effectData`,effectData);\n    if (TL > 3) jez.trace(`${FNAME} | MidiQOL.socket().executeAsGM(\"createEffects\"`,\"aToken.actor.uuid\",\n    aToken.actor.uuid,\"effectData\",effectData);\n    await MidiQOL.socket().executeAsGM(\"createEffects\", { actorUuid: aToken.actor.uuid, effects: [effectData] });  \n    //-------------------------------------------------------------------------------------------------------------------------------\n    // \n    msg = `${aToken.name} summons an inky pool of darkness into reality.`\n    postResults(msg)\n    if (TL > 0) jez.trace(`${TAG} --- Finished ---`);\n    return true;\n}\n\n//-------------------------------------------------------------------------------------------------\n// Search for pre-existing magehand, if found, despawn it.\n//\n// let previousSummon = canvas.tokens.placeables.find(ef => ef.name === MINION_NAME)\n// if (previousSummon) warpgate.dismiss(previousSummon.id, game.scenes.viewed.id)\n\n\n\n//-------------------------------------------------------------------------------------------------\n// Post message\n//\n// let chatMessage = game.messages.get(args[args.length - 1].itemCardId);\n// msg = `<b>${aToken.name}</b> summons <b>${MINION_NAME}</b> to the field.`;\n// jez.addMessage(chatMessage, { color: jez.randomDarkColor(), fSize: 15, msg: msg, tag: \"saves\" })\n/***************************************************************************************************\n *    END_OF_MAIN_MACRO_BODY\n *                                END_OF_MAIN_MACRO_BODY\n *                                                             END_OF_MAIN_MACRO_BODY\n ***************************************************************************************************/",
              "folder": null,
              "sort": 0,
              "permission": {
                "default": 0
              },
              "flags": {}
            }
          }
        }
      }
    },
    {
      "_id": "qGj3PaheCU9hijPo",
      "name": "Shortsword (Fey)",
      "type": "weapon",
      "img": "icons/weapons/swords/sword-guard-brown.webp",
      "data": {
        "description": {
          "value": "<p>Fey - Fuming thrusts its shortsword toward its target.</p>\n<p><em>Melee Weapon Attack</em>:</p>\n<ul>\n<li>Summoner's spell attack modifier to hit,</li>\n<li>Reach 5 ft.,</li>\n<li>One target. </li>\n<li>Hit: 1d6 + 3 + the spell’s level piercing damage + 1d6 force damage</li>\n</ul>",
          "chat": "",
          "unidentified": ""
        },
        "source": "",
        "quantity": 1,
        "weight": 1,
        "price": 0,
        "attunement": 0,
        "equipped": true,
        "rarity": "",
        "identified": true,
        "activation": {
          "type": "action",
          "cost": 1,
          "condition": ""
        },
        "duration": {
          "value": 0,
          "units": ""
        },
        "target": {
          "value": null,
          "width": null,
          "units": "",
          "type": ""
        },
        "range": {
          "value": 5,
          "long": null,
          "units": "ft"
        },
        "uses": {
          "value": 0,
          "max": "0",
          "per": ""
        },
        "consume": {
          "type": "",
          "target": "",
          "amount": null
        },
        "ability": "dex",
        "actionType": "mwak",
        "attackBonus": "0",
        "chatFlavor": "",
        "critical": {
          "threshold": null,
          "damage": ""
        },
        "damage": {
          "parts": [
            [
              "1d6 + @mod",
              "piercing"
            ]
          ],
          "versatile": ""
        },
        "formula": "",
        "save": {
          "ability": "",
          "dc": null,
          "scaling": "spell"
        },
        "armor": {
          "value": 10
        },
        "hp": {
          "value": 0,
          "max": 0,
          "dt": null,
          "conditions": ""
        },
        "weaponType": "martialM",
        "baseItem": "",
        "properties": {
          "amm": false,
          "fir": false,
          "fin": false,
          "hvy": false,
          "lgt": false,
          "lod": false,
          "rch": false,
          "rel": false,
          "spc": false,
          "thr": false,
          "two": false,
          "ver": false,
          "ret": false,
          "foc": false,
          "ada": false,
          "mgc": false,
          "sil": false
        },
        "proficient": true,
        "preparation": null
      },
      "effects": [],
      "folder": null,
      "sort": 100000,
      "permission": {
        "default": 0,
        "OWMxOGU2MjdiMzhi": 3,
        "ZjFlOWYxZjM5ZTZj": 3
      },
      "flags": {
        "ddbimporter": {
          "dndbeyond": {
            "type": "Shortsword",
            "damage": {
              "parts": []
            },
            "classFeatures": [],
            "filterType": "Weapon",
            "tags": [
              "Damage",
              "Combat"
            ],
            "sources": []
          },
          "id": 0,
          "entityTypeId": 0,
          "definitionEntityTypeId": 1782728300,
          "definitionId": 30,
          "originalName": "Shortsword"
        },
        "betterRolls5e": {
          "quickDamage": {
            "context": {
              "0": ""
            },
            "value": {
              "0": true
            },
            "altValue": {
              "0": true
            }
          },
          "quickVersatile": {
            "altValue": true
          },
          "quickCharges": {
            "value": {
              "use": false,
              "resource": true
            },
            "altValue": {
              "use": false,
              "resource": true
            }
          }
        },
        "magicitems": {
          "enabled": false,
          "equipped": false,
          "attuned": false,
          "charges": "0",
          "chargeType": "c1",
          "destroy": false,
          "destroyFlavorText": "reaches 0 charges: it crumbles into ashes and is destroyed.",
          "rechargeable": false,
          "recharge": "0",
          "rechargeType": "t1",
          "rechargeUnit": "r1",
          "sorting": "l"
        },
        "cf": {
          "id": "temp_god5dulh2zn"
        },
        "core": {
          "sourceId": "Compendium.My-Shared-DDB.items.vcu6E9FxXVLKehxl"
        },
        "enhancedcombathud": {
          "set1p": false,
          "set2p": false,
          "set3p": false,
          "set1s": false,
          "set2s": false,
          "set3s": false
        },
        "midi-qol": {
          "criticalThreshold": "20",
          "onUseMacroName": "",
          "fumbleThreshold": null,
          "effectActivation": false
        },
        "betterCurses": {
          "isCurse": false,
          "curseName": "",
          "formula": "",
          "mwak": false,
          "rwak": false,
          "msak": false,
          "rsak": false
        },
        "midiProperties": {
          "nodam": false,
          "fulldam": false,
          "halfdam": false,
          "rollOther": false,
          "critOther": false,
          "magicdam": false,
          "magiceffect": false,
          "concentration": false,
          "toggleEffect": false
        }
      }
    }
  ],
  "effects": [],
  "flags": {
    "core": {
      "sourceId": "Actor.IYbT2YoSrwFYmCw5",
      "sheetClass": ""
    },
    "midi-qol": {
      "concentration-damage": 0
    },
    "gm-notes": {},
    "exportSource": {
      "world": "travels-in-barovia-ce",
      "system": "dnd5e",
      "coreVersion": "9.280",
      "systemVersion": "1.6.2"
    }
  }
}