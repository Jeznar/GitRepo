{
  "name": "Summon Fey",
  "type": "spell",
  "img": "icons/creatures/mammals/elk-moose-marked-green.webp",
  "data": {
    "description": {
      "value": "<p>You call forth a fey spirit. It manifests in an unoccupied space that you can see within range. This corporeal form uses the Fey Spirit stat block. When you cast the spell, choose a mood:</p>\n<ul>\n<li><strong>Fuming</strong>,</li>\n<li><strong>Mirthful</strong>, or</li>\n<li><strong>Tricksy</strong>.</li>\n</ul>\n<p>The creature resembles a fey creature of your choice marked by the chosen mood, which determines one of the traits in its stat block. The creature disappears when it drops to 0 hit points or when the spell ends.</p>\n<p>The creature is an ally to you and your companions. In combat, the creature <strong>shares your initiative&nbsp;count</strong>, but it takes its turn <strong>immediately after yours</strong>. It obeys your verbal commands (no action required by you). If you don&rsquo;t issue any, it takes the Dodge action and uses its move to avoid danger.</p>\n<p><em><strong>At Higher Levels.</strong></em> When you cast this spell using a spell slot of 4th level or higher, use the higher level wherever the spell&rsquo;s level appears in the stat block.</p>\n<hr />\n<p><strong>FoundryVTT</strong>: This is fully automated.&nbsp; Depends on Fey actors in Actor directory.</p>",
      "chat": "<p>You call forth a fey spirit. It manifests in an unoccupied space that you can see within range. This corporeal form uses the Fey Spirit stat block. When you cast the spell, choose a mood: Fuming, Mirthful, or Tricksy. The creature resembles a fey creature of your choice marked by the chosen mood, which determines one of the traits in its stat block. The creature disappears when it drops to 0 hit points or when the spell ends.</p>\n<p>The creature is an ally to you and your companions. In combat, the creature shares your initiative count, but it takes its turn immediately after yours. It obeys your verbal commands (no action required by you). If you don’t issue any, it takes the Dodge action and uses its move to avoid danger.</p>\n<p><em><strong>At Higher Levels.</strong></em> When you cast this spell using a spell slot of 4th level or higher, use the higher level wherever the spell’s level appears in the stat block.</p>\n<div class=\"Basic-Text-Frame stat-block-finder\">\n<p class=\"Stat-Block-Styles_Stat-Block-Title\">Fey Spirit</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Metadata\">Small fey</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Data\"><strong>Armor Class</strong> 12 + the level of the spell (natural armor)</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Data\"><strong>Hit Points</strong> 30 + 10 for each spell level above 3rd</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Data\"><strong>Speed</strong> 40 ft.</p>\n<div class=\"stat-block-ability-scores\">\n<div class=\"stat-block-ability-scores-stat\">\n<div class=\"stat-block-ability-scores-heading\">STR</div>\n<div class=\"stat-block-ability-scores-data\"><span class=\"stat-block-ability-scores-score\">13</span><span class=\"stat-block-ability-scores-modifier\">(+1)</span></div>\n</div>\n<div class=\"stat-block-ability-scores-stat\">\n<div class=\"stat-block-ability-scores-heading\">DEX</div>\n<div class=\"stat-block-ability-scores-data\"><span class=\"stat-block-ability-scores-score\">16</span><span class=\"stat-block-ability-scores-modifier\">(+3)</span></div>\n</div>\n<div class=\"stat-block-ability-scores-stat\">\n<div class=\"stat-block-ability-scores-heading\">CON</div>\n<div class=\"stat-block-ability-scores-data\"><span class=\"stat-block-ability-scores-score\">14</span><span class=\"stat-block-ability-scores-modifier\">(+2)</span></div>\n</div>\n<div class=\"stat-block-ability-scores-stat\">\n<div class=\"stat-block-ability-scores-heading\">INT</div>\n<div class=\"stat-block-ability-scores-data\"><span class=\"stat-block-ability-scores-score\">14</span><span class=\"stat-block-ability-scores-modifier\">(+2)</span></div>\n</div>\n<div class=\"stat-block-ability-scores-stat\">\n<div class=\"stat-block-ability-scores-heading\">WIS</div>\n<div class=\"stat-block-ability-scores-data\"><span class=\"stat-block-ability-scores-score\">11</span><span class=\"stat-block-ability-scores-modifier\">(+0)</span></div>\n</div>\n<div class=\"stat-block-ability-scores-stat\">\n<div class=\"stat-block-ability-scores-heading\">CHA</div>\n<div class=\"stat-block-ability-scores-data\"><span class=\"stat-block-ability-scores-score\">16</span><span class=\"stat-block-ability-scores-modifier\">(+3)</span></div>\n</div>\n</div>\n<p class=\"Stat-Block-Styles_Stat-Block-Data\"><strong>Condition Immunities</strong> charmed</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Data\"><strong>Senses</strong> darkvision 60 ft., passive Perception 10</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Data\"><strong>Languages</strong> Sylvan, understands the languages you speak</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Data-Last\"><strong>Challenge</strong> — <strong>Proficiency Bonus</strong> equals your bonus</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Heading\">Actions</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Body\"><em><strong>Multiattack.</strong></em> The fey makes a number of attacks equal to half this spell’s level (rounded down).</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Body\"><em><strong>Shortsword.</strong> Melee Weapon Attack:</em> your spell attack modifier to hit, reach 5 ft., one target. <em>Hit:</em> 1d6 + 3 + the spell’s level piercing damage + 1d6 force damage.</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Heading\">Bonus Actions</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Body\"><em><strong>Fey Step.</strong></em> The fey magically teleports up to 30 feet to an unoccupied space it can see. Then one of the following effects occurs, based on the fey’s chosen mood:</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Body\"><strong>Fuming.</strong> The fey has advantage on the next attack roll it makes before the end of this turn.</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Body\"><strong>Mirthful.</strong> The fey can force one creature it can see within 10 feet of it to make a Wisdom saving throw against your spell save DC. Unless the save succeeds, the target is charmed by you and the fey for 1 minute or until the target takes any damage.</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Body\"><strong>Tricksy.</strong> The fey can fill a 5-foot cube within 5 feet of it with magical darkness, which lasts until the end of its next turn.</p>\n</div>",
      "unidentified": ""
    },
    "source": "Tasha’s Cauldron of Everything pg 112",
    "activation": {
      "type": "action",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": 1,
      "units": "hour"
    },
    "target": {
      "value": null,
      "width": null,
      "units": "",
      "type": "self"
    },
    "range": {
      "value": 90,
      "long": null,
      "units": "ft"
    },
    "uses": {
      "value": 0,
      "max": "0",
      "per": ""
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": null
    },
    "ability": "",
    "actionType": "other",
    "attackBonus": 0,
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": null
    },
    "damage": {
      "parts": [],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": null,
      "scaling": "spell"
    },
    "level": 3,
    "school": "con",
    "components": {
      "value": "a gilded flower worth at least 300 gp",
      "vocal": true,
      "somatic": true,
      "material": true,
      "ritual": false,
      "concentration": true
    },
    "materials": {
      "value": "a gilded flower worth at least 300 gp",
      "consumed": false,
      "cost": 300,
      "supply": 0
    },
    "preparation": {
      "mode": "always",
      "prepared": false
    },
    "scaling": {
      "mode": "none",
      "formula": ""
    },
    "attunement": null
  },
  "effects": [
    {
      "_id": "BmMAs5tbX0Vkezbo",
      "changes": [],
      "disabled": false,
      "duration": {
        "startTime": null,
        "seconds": 3600
      },
      "icon": "icons/creatures/mammals/elk-moose-marked-green.webp",
      "label": "Summon Fey",
      "transfer": false,
      "flags": {
        "dae": {
          "stackable": "none",
          "macroRepeat": "none",
          "specialDuration": [],
          "transfer": false,
          "selfTarget": false,
          "durationExpression": ""
        },
        "dnd5e-helpers": {
          "rest-effect": "Ignore"
        },
        "ActiveAuras": {
          "isAura": false,
          "aura": "None",
          "radius": null,
          "alignment": "",
          "type": "",
          "ignoreSelf": false,
          "height": false,
          "hidden": false,
          "hostile": false,
          "onlyOnce": false,
          "displayTemp": false
        },
        "core": {
          "statusId": ""
        }
      },
      "tint": null,
      "selectedKey": "macro.itemMacro"
    }
  ],
  "flags": {
    "ddbimporter": {
      "id": 5855036,
      "definitionId": 721204,
      "entityTypeId": 435869154,
      "dndbeyond": {
        "lookup": "generic",
        "lookupName": "generic",
        "level": null,
        "castAtLevel": null
      },
      "sources": [
        {
          "sourceId": 67,
          "pageNumber": 112,
          "sourceType": 1
        }
      ],
      "tags": [
        "Summoning"
      ]
    },
    "betterRolls5e": {
      "quickVersatile": {
        "altValue": true
      },
      "quickCharges": {
        "value": {
          "use": true,
          "resource": true
        },
        "altValue": {
          "use": true,
          "resource": true
        }
      }
    },
    "cf": {
      "id": "temp_edz3xuutj1n"
    },
    "core": {
      "sourceId": "Compendium.My-Shared-DDB.spells.BFXiao4yXPLa6oAG"
    },
    "midi-qol": {
      "onUseMacroName": "[postActiveEffects]ItemMacro",
      "effectActivation": false
    },
    "enhancedcombathud": {
      "set1p": false,
      "set2p": false,
      "set3p": false
    },
    "betterCurses": {
      "isCurse": false,
      "curseName": "",
      "formula": "",
      "mwak": false,
      "rwak": false,
      "msak": false,
      "rsak": false
    },
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Summon Fey",
          "type": "script",
          "author": "ZjFlOWYxZjM5ZTZj",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "const MACRONAME = \"Summon_Fey.0.2.js\"\nconsole.log(MACRONAME)\n/*****************************************************************************************\n * Rebuild Summon Fey which used to utilize the Automated Evocations module.\n * \n *   You call forth a fey spirit. It manifests in an unoccupied space that you can see \n *   within range. This corporeal form uses the Fey Spirit stat block. When you cast \n *   the spell, choose a mood: Fuming, Mirthful, or Tricksy. The creature resembles a \n *   fey creature of your choice marked by the chosen mood, which determines one of the \n *   traits in its stat block. The creature disappears when it drops to 0 hit points or \n *   when the spell ends.\n * \n *   The creature is an ally to you and your companions. In combat, the creature shares \n *   your initiative count, but it takes its turn immediately after yours. It obeys your \n *   verbal commands (no action required by you). If you don't issue any, it takes the \n *   Dodge action and uses its move to avoid danger.\n * \n *   At Higher Levels. When you cast this spell using a spell slot of 4th level or higher, \n *   use the higher level wherever the spell's level appears in the stat block.\n * \n * 01/14/22 0.1 Creation of Macro\n * 11/26/22 0.2 Update to not use AE module\n *****************************************************************************************/\nconst MACRO = MACRONAME.split(\".\")[0]       // Trim off the version number and extension\nconst TAG = `${MACRO} |`\nconst TL = 0;                               // Trace Level for this macro\nlet msg = \"\";                               // Global message string\n//---------------------------------------------------------------------------------------------------\nif (TL > 1) jez.trace(`${TAG} === Starting ===`);\nif (TL > 2) for (let i = 0; i < args.length; i++) jez.trace(`  args[${i}]`, args[i]);\nconst LAST_ARG = args[args.length - 1]; // See https://gitlab.com/tposney/dae#lastarg for contents\n//---------------------------------------------------------------------------------------------------\n// Set the value for the Active Token (aToken)\nlet aToken;\nif (LAST_ARG.tokenId) aToken = canvas.tokens.get(LAST_ARG.tokenId);\nelse aToken = game.actors.get(LAST_ARG.tokenId);\nlet aActor = aToken.actor;\n//\n// Set the value for the Active Item (aItem)\nlet aItem;\nif (args[0]?.item) aItem = args[0]?.item;\nelse aItem = LAST_ARG.efData?.flags?.dae?.itemData;\n//---------------------------------------------------------------------------------------------------\n// Set Macro specific globals\n//\nconst RUNASGMMACRO = \"DeleteTokenMacro\";\nconst viewedScene = game.scenes.viewed;\nconst EFFECT_NAME = 'Summon Fey'\nconst SPELL_LEVEL = args[0].spellLevel\nconst SPELL_DC = aActor.data.data.attributes.spelldc\n//----------------------------------------------------------------------------------\n// Run the main procedures, choosing based on how the macro was invoked\n//\nif (args[0]?.tag === \"OnUse\") await doOnUse({ traceLvl: TL });     // Midi ItemMacro On Use\nif (args[0] === \"off\") await doOff({ traceLvl: TL });                           // DAE removal\nif (TL > 1) jez.trace(`${TAG} === Finished ===`);\nreturn;\n/*********1*********2*********3*********4*********5*********6*********7*********8*********9*********0\n *    END_OF_MAIN_MACRO_BODY\n *                                END_OF_MAIN_MACRO_BODY\n *                                                             END_OF_MAIN_MACRO_BODY\n ****************************************************************************************************\n * Perform the code that runs when this macro is invoked as an ItemMacro \"OnUse\"\n *********1*********2*********3*********4*********5*********6*********7*********8*********9*********/\nasync function doOnUse(options = {}) {\n    const FUNCNAME = \"doOnUse(options={})\";\n    const FNAME = FUNCNAME.split(\"(\")[0]\n    const TAG = `${MACRO} ${FNAME} |`\n    const TL = options.traceLvl ?? 0\n    if (TL === 1) jez.trace(`${TAG} --- Starting ---`);\n    if (TL > 1) jez.trace(`${TAG} --- Starting --- ${FUNCNAME} ---`, \"options\", options);\n    await jez.wait(100)\n    //-----------------------------------------------------------------------------------------------\n    // Define our doOnUse Values\n    //\n    const FEY_MOODS = [\"Fuming\", \"Mirthful\", \"Tricksy\"]\n    if (TL > 1) jez.trace(`${TAG} FEY_MOODS`, FEY_MOODS)\n    let feyTemplates = []\n    for (let i = 0; i < FEY_MOODS.length; i++) feyTemplates.push(`${FEY_MOODS[i]} Fey`)\n    if (TL > 1) jez.trace(`${TAG} feyTemplates`, feyTemplates)\n    //-----------------------------------------------------------------------------------------------\n    // Make sure the templates exist in the actor's directory\n    //\n    for (let i = 0; i < feyTemplates.length; i++) {\n        if (TL > 1) jez.trace(`${TAG} Looking for actor ${feyTemplates[i]}`)\n        let nameActor = game.actors.getName(feyTemplates[i])\n        if (!nameActor)\n            return jez.badNews(`$TAG \"${feyTemplates[i]}\" could not be found in actor directory`, \"e\")\n    }\n    //-----------------------------------------------------------------------------------------------\n    // Dialog to select the mood of our spirit\n    //\n    const queryTitle = \"Select Mood of the Fey to be Summoned\"\n    const queryText = \"Pick one from the list (or I'll do it for you!)\"\n    const MOOD = await jez.pickRadioListArray(queryTitle, queryText, dummyFunction, FEY_MOODS.sort());\n    if (!MOOD) MOOD = FEY_MOODS[Math.floor(Math.random() * FEY_MOODS.length)]\n    const MINION = `${MOOD} Fey`\n    if (TL > 1) jez.trace(`${TAG} Fey selected`, MINION)\n    function dummyFunction(itemSelected) { return } // RadioList requires a function...\n    //-----------------------------------------------------------------------------------------------\n    // \n    //\n    const ALLOWED_UNITS = [\"\", \"ft\", \"any\"];\n    let maxRange = jez.getRange(aItem, ALLOWED_UNITS) ?? 90\n    //--------------------------------------------------------------------------------------------------\n    // Portals need the same color for pre and post effects, so get that set here. Even though only used\n    // when we are doing portals\n    //\n    const PORTAL_COLORS = [\"Bright_Blue\", \"Dark_Blue\", \"Dark_Green\", \"Dark_Purple\", \"Dark_Red\",\n        \"Dark_RedYellow\", \"Dark_Yellow\", \"Bright_Green\", \"Bright_Orange\", \"Bright_Purple\", \"Bright_Red\",\n        \"Bright_Yellow\"]\n    let index = Math.floor((Math.random() * PORTAL_COLORS.length))\n    let portalColor = PORTAL_COLORS[index]\n    //--------------------------------------------------------------------------------------------------\n    // Build the dataObject for our summon call\n    //\n    const MINION_NAME = `${aToken.name}'s ${MINION}`\n    let argObj = {\n        defaultRange: maxRange,             // Defaults to 30, but this varies per spell\n        duration: 4000,                     // Duration of the intro VFX\n        introTime: 250,                     // Amount of time to wait for Intro VFX\n        introVFX: `~Portals/Portal_${portalColor}_H_400x400.webm`, // default introVFX file\n        minionName: MINION_NAME,\n        templateName: MINION,\n        name: aItem.name,                   // Name of action (message only), typically aItem.name\n        outroVFX: `~Portals/Masked/Portal_${portalColor}_H_NoBG_400x400.webm`, // default outroVFX file\n        scale: 0.5,\t\t\t\t\t\t    // \n        source: aToken,                     // Coords for source (with a center), typically aToken\n        width: 1,                           // Width of token to be summoned, 1 is the default\n        traceLvl: TL                        // Trace level, matching calling function decent choice\n    }\n    // ---------------------------------------------------------------------------------------------\n    // Get updates dependeing on mood and caster values\n    //\n    argObj.updates = customization(MINION_NAME, SPELL_LEVEL, MOOD, SPELL_DC, {traceLvl: TL})\n    if (TL > 1) jez.trace(`${TAG} Updates for our ${MOOD} Fey`,argObj.updates)\n    //--------------------------------------------------------------------------------------------------\n    // Nab the data for our soon to be summoned critter so we can have the right image (img) and use it\n    // to update the img attribute or set basic image to match this item\n    //\n    let summonData = await game.actors.getName(MINION)\n    argObj.img = summonData ? summonData.img : aItem.img\n    //--------------------------------------------------------------------------------------------------\n    // Do the actual summon\n    //\n    const FEY_ID_ARRAY = await jez.spawnAt(MINION, aToken, aActor, aItem, argObj)\n    const FEY_ID = FEY_ID_ARRAY[0]\n    if (TL > 1) jez.trace(`${TAG} Token ID of Summoned Fey`, FEY_ID) // '1pQBnOntUvRCZzQS'\n    //--------------------------------------------------------------------------------------------------\n    // Modify existing DAE effect to despawn our summon on termination\n    //\n    let effect = await aActor.effects.find(i => i.data.label === EFFECT_NAME);\n    if (!effect) return jez.badNews(`${TAG} Oddly, could not find ${EFFECT_NAME} on ${aToken.name}`,'e')\n    effect.data.changes.push({\n        key: `macro.itemMacro`, mode: jez.CUSTOM, value:`\"${MINION_NAME}\" ${FEY_ID}`, priority: 20\n    })\n    const result = await effect.update({ 'changes': effect.data.changes });\n    if(!result) return jez.badNews(`${TAG} Sadly, could not update ${EFFECT_NAME} on ${aToken.name}`,'e')\n    if (TL > 1) jez.trace(`${TAG} Active Effect ${EFFECT_NAME} on ${aToken.name} updated!`, result);\n    //--------------------------------------------------------------------------------------------------\n    // Add our Fey to combat tracker with appropriate initiative, if summoner is in combat\n    //\n    const ATOKEN_INIT_VALUE = aToken?.combatant?.data?.initiative\n    if (!ATOKEN_INIT_VALUE) jez.badNews(`${aToken.name} not in combat, can't add ${MINION_NAME}.`,'i')\n    else {\n        const FEY_INIT = ATOKEN_INIT_VALUE - 0.001\n        await jez.combatAddRemove('Add', FEY_ID, {traceLvl: TL})\n        await jez.wait(1000) \n        await jez.combatInitiative(FEY_ID, { formula: FEY_INIT, traceLvl: 0 }) \n    }\n    //--------------------------------------------------------------------------------------------------\n    // Final Message\n    //\n    msg = `${aToken.name} has summoned a ${MINION}. It obeys ${aToken.name}'s verbal commands (no \n        action required from ${aToken.name}). If no command issued in a round, it takes the Dodge \n        action and uses its move to avoid danger.`\n    postResults(msg)\n    if (TL > 1) jez.trace(`${TAG} --- Finished ---`);\n    return true;\n}\n/***************************************************************************************************\n * Perform the code that runs when this macro is removed by DAE, set Off\n * \n * https://github.com/fantasycalendar/FoundryVTT-Sequencer/wiki/Sequencer-Effect-Manager#end-effects\n ***************************************************************************************************/\nasync function doOff(options = {}) {\n    const FUNCNAME = \"doOff(options={})\";\n    const FNAME = FUNCNAME.split(\"(\")[0]\n    const TAG = `${MACRO} ${FNAME} |`\n    const TL = options.traceLvl ?? 0\n    if (TL === 1) jez.trace(`${TAG} --- Starting ---`);\n    if (TL > 1) jez.trace(`${TAG} --- Starting --- ${FUNCNAME} ---`, \"options\", options);\n    //-----------------------------------------------------------------------------------------------\n    //\n    //\n    const FEY_NAME = args[1]\n    const FEY_ID = args[2]\n    const SCENE_ID = game.scenes.viewed.id\n    let fToken = canvas.tokens.placeables.find(ef => ef.id === FEY_ID)\n    if (TL > 2) jez.trace(`${TAG} Despawning Fey Info`,\n        \"FEY_NAME ==>\", FEY_NAME,\n        \"SCENE_ID ==>\", SCENE_ID,\n        \"FEY_ID ==>\", FEY_ID,\n        \"fToken  ==>\", fToken)\n    if (fToken) {\n        if (TL > 2) jez.trace(`${TAG} Dismissing ${fToken.name}`, fToken)\n        runVFXSmoke(fToken.center)\n        warpgate.dismiss(FEY_ID, SCENE_ID)\n        await jez.wait(750)\n    }\n    if (TL > 1) jez.trace(`${TAG} --- Finished ---`);\n    return;\n}\n/*********1*********2*********3*********4*********5*********6*********7*********8*********9*********0\n * Run a simple smoke VFX on specified location\n *********1*********2*********3*********4*********5*********6*********7*********8*********9*********/\n async function runVFXSmoke(coords) {\n    const VFX_SMOKE = `modules/jb2a_patreon/Library/Generic/Smoke/SmokePuff01_*_Regular_Grey_400x400.webm`\n    new Sequence()\n        .effect()\n        .file(VFX_SMOKE)\n        .atLocation(coords)\n        .scale(.5)\n        .opacity(.5)\n        .play()\n}\n/***************************************************************************************************\n * Post the results to chat card\n ***************************************************************************************************/\nfunction postResults(msg) {\n    const FUNCNAME = \"postResults(msg)\";\n    const FNAME = FUNCNAME.split(\"(\")[0]\n    const TAG = `${MACRO} ${FNAME} |`\n    if (TL > 1) jez.trace(`${TAG} --- Starting ---`);\n    if (TL > 2) jez.trace(\"postResults Parameters\", \"msg\", msg)\n    //-----------------------------------------------------------------------------------------------\n    let chatMsg = game.messages.get(args[args.length - 1].itemCardId);\n    jez.addMessage(chatMsg, { color: jez.randomDarkColor(), fSize: 14, msg: msg, tag: \"saves\" });\n    if (TL > 1) jez.trace(`${TAG}--- Finished ---`);\n}\n/***************************************************************************************************\n * Return a data object appropriate for each of the three Fey moods to be used to customize the\n * summoned token by spell level (for up casts)\n ***************************************************************************************************/\nfunction customization(MINION_NAME, SPELL_LEVEL, MOOD, SPELL_DC, options = {}) {\n    const FUNCNAME = \"postResults(msg)\";\n    const FNAME = FUNCNAME.split(\"(\")[0]\n    const TAG = `${MACRO} ${FNAME} |`\n    const TL = options.traceLvl ?? 0\n    if (TL > 1) jez.trace(`${TAG} --- Starting ---`);\n    if (TL > 2) jez.trace(\"customization Parameters\", 'MINION_NAME', MINION_NAME,\n        'SPELL_LEVEL', SPELL_LEVEL, 'MOOD       ', MOOD, 'SPELL_DC   ', SPELL_DC, \n        \"options    \", options)\n    //-----------------------------------------------------------------------------------------------\n    // Function Variables\n    //\n    let updates = {}\n    //-----------------------------------------------------------------------------------------------\n    // Fuming Mood\n    //\n    if (MOOD === \"Fuming\") {\n        if (TL > 1) jez.trace(`${TAG} Special case treatment of our ${MOOD} Fey`)\n        updates = {\n            token: { \"name\": MINION_NAME },\n            actor: {\n                \"data.attributes.hp.max\": (SPELL_LEVEL || 3) * 10,\n                \"data.attributes.hp.value\": (SPELL_LEVEL || 3) * 10,\n                \"data.attributes.ac.flat\": (SPELL_LEVEL || 3) + 12,\n                \"name\": MINION_NAME\n            },\n            embedded: {\n                Item: {\n                    \"Multiattack\": {\n                        \"data.description.value\": `<p>The summoned <b>fey</b> makes <b>${Math.floor(SPELL_LEVEL / 2)}\n                        </b> attack(s) per attack action.</p>`\n                    },\n                    \"Shortsword\": {\n                        \"data.attackBonus\": SPELL_DC - 8,\n                        \"data.damage.parts\": [[`1d6+@mod+${(SPELL_LEVEL || 3)}`, \"piercing\"]],\n                        \"data.description.value\":\n                            `<p><b>Melee Weapon Attack:</b> ${aToken.name}'s spell attack modifier to hit, \n                            reach 5 ft., one target. Hit: 1d6 + 3 (DEX Mod) + ${SPELL_LEVEL} (spell's level) piercing damage\n                            + 1d6 force damage.</p>`,\n                    }\n                },\n            }\n        }\n    }\n    //-----------------------------------------------------------------------------------------------\n    // Mirthful Mood\n    //\n    if (MOOD === \"Mirthful\") {\n        if (TL > 1) jez.trace(`${TAG} Special case treatment of our ${MOOD} Fey`)\n        updates = {\n            token: { \"name\": MINION_NAME },\n            actor: {\n                \"data.attributes.hp.max\": (SPELL_LEVEL || 3) * 10,\n                \"data.attributes.hp.value\": (SPELL_LEVEL || 3) * 10,\n                \"data.attributes.ac.flat\": (SPELL_LEVEL || 3) + 12,\n                \"name\": (MINION_NAME)\n            },\n            embedded: {\n                Item: {\n                    \"Multiattack\": {\n                        \"data.description.value\": `<p>The summoned <b>fey</b> makes <b>${Math.floor(SPELL_LEVEL / 2)}\n                        </b> attack(s) per attack action.</p>`\n                    },\n                    \"Shortsword\": {\n                        \"data.attackBonus\": SPELL_DC - 8,\n                        \"data.damage.parts\": [[`1d6+@mod+${(SPELL_LEVEL || 3)}`, \"piercing\"]],\n                        \"data.description.value\":\n                            `<p><b>Melee Weapon Attack:</b> ${aToken.name}'s spell attack modifier to hit, \n                            reach 5 ft., one target. Hit: 1d6 + 3 (DEX Mod) + ${SPELL_LEVEL} (spell's level) piercing damage\n                            + 1d6 force damage.</p>`,\n                    },\n                    \"Mirthful Fey Charm\": {\n                        \"data.save.dc\": (SPELL_DC || 8),\n                        \"data.description.value\":\n                            `Immediately after a <b>@Item[4ZDtnbKJV5y6jjW5]{Fey Step}</b>, the fey can attempt to charm \n                            one creature it can see within 10 feet of it, The creature must make a \n                            DC${SPELL_DC} wisdom save or be \n                            @JournalEntry[i3AsMG5XwVIvE8TK]{charmed} by the fey and ${aToken.name} for \n                            1 minute or until the target takes any damage.` \n                    }\n                },\n            }\n        }\n    }\n    //-----------------------------------------------------------------------------------------------\n    // Tricksy Mood\n    //\n    if (MOOD === \"Tricksy\") {\n        if (TL > 1) jez.trace(`${TAG} Special case treatment of our ${MOOD} Fey`)\n        updates = {\n            token: { \"name\": MINION_NAME },\n            actor: {\n                \"data.attributes.hp.max\": (SPELL_LEVEL || 3) * 10,\n                \"data.attributes.hp.value\": (SPELL_LEVEL || 3) * 10,\n                \"data.attributes.ac.flat\": (SPELL_LEVEL || 3) + 12,\n                \"name\": (MINION_NAME)\n            },\n            embedded: {\n                Item: {\n                    \"Multiattack\": {\n                        \"data.description.value\": `<p>The summoned <b>fey</b> makes <b>${Math.floor(SPELL_LEVEL / 2)}\n                        </b> attack(s) per attack action.</p>`\n                    },\n                    \"Shortsword\": {\n                        \"data.attackBonus\": SPELL_DC - 8,\n                        \"data.damage.parts\": [[`1d6+@mod+${(SPELL_LEVEL || 3)}`, \"piercing\"]],\n                        \"data.description.value\":\n                            `<p><b>Melee Weapon Attack:</b> ${aToken.name}'s spell attack modifier to hit, \n                            reach 5 ft., one target. Hit: 1d6 + 3 (DEX Mod) + ${SPELL_LEVEL} (spell's level) piercing damage\n                            + 1d6 force damage.</p>`,\n                    },\n                },\n            }\n        }\n    }\n    //-----------------------------------------------------------------------------------------------\n    // Done\n    //\n    return updates\n}",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        }
      }
    },
    "midiProperties": {
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "rollOther": false,
      "critOther": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "toggleEffect": false
    },
    "exportSource": {
      "world": "travels-in-barovia-ce",
      "system": "dnd5e",
      "coreVersion": "9.280",
      "systemVersion": "1.6.2"
    }
  }
}