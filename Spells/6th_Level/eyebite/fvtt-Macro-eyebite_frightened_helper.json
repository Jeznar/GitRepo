{
  "name": "eyebite_frightened_helper",
  "type": "script",
  "author": "ZjFlOWYxZjM5ZTZj",
  "img": "icons/magic/perception/eye-ringed-glow-angry-large-red.webp",
  "scope": "global",
  "command": "const MACRONAME = \"eyebite_frightened_helper.js\"\n/*****************************************************************************************\n * helper macro that checks LoS and Distance to the originating token.  If no LoS and far\n * enough, the debuff is cleared.\n * \n * 02/22/22 0.1 Creation of Macro\n * 07/09/22 Replace CUB with CE\n *****************************************************************************************/\nconst MACRO = MACRONAME.split(\".\")[0]     // Trim of the version number and extension\njez.log(`============== Starting === ${MACRONAME} =================`);\nfor (let i = 0; i < args.length; i++) jez.log(`  args[${i}]`, args[i]);\nconst lastArg = args[args.length - 1];\nlet aToken;         // Acting token, token for creature that invoked the macro\nif (lastArg.tokenId) aToken = canvas.tokens.get(lastArg.tokenId); else aToken = game.actors.get(lastArg.tokenId);\nlet msg = \"\";\nconst FRIGHTENED_JRNL = `@JournalEntry[${game.journal.getName(\"Frightened\").id}]{Frightened}`\nconst FRIGHTENED_ICON = \"Icons_JGB/Monster_Features/Frightened.png\"\n//----------------------------------------------------------------------------------\n// Obtain info on the effect\n//\nlet effect = await aToken.actor.effects.find(i => i.data.label === \"Frightened\");\nif (!effect) {\n    msg = `Something went sideways.  ${aToken.name} does not have Frightened effect`    \n    ui.notifications.error(msg)\n    console.log(msg)\n    return(false);\n}\njez.log(\"effect\", effect)\nlet oTokenId = effect.data.origin   // Origin token id stashed here by main program\nlet oToken = canvas.tokens.placeables.find(ef => ef.id === oTokenId)\njez.log(`Origin Token, ${oToken.name}`, oToken)\n//-----------------------------------------------------------------------------------------\n// Check to see if vision is blocked by a wall between current pair\n// COOL-THING: Check LoS between two tokens\n//\nlet goodLoS = true\nlet blocked = canvas.walls.checkCollision(new Ray(aToken.center, oToken.center),\n    { type: \"sight\", mode: \"any\" })\nif (blocked) {\n    jez.log(`${aToken.name} has no LoS to ${oToken.name}`)\n    goodLoS = false\n    // TODO: Do something about blocked LoS\n} else jez.log(`${aToken.name} has GOOD LoS to ${oToken.name}`)\n//-----------------------------------------------------------------------------------------\n// Check to see if pair is within 60 feet of each other\n// COOL-THING: Check range between two tokens\n//\nlet inRange = jez.inRange(oToken, aToken, 60)\njez.log(\"In Range\", inRange)\n//-----------------------------------------------------------------------------------------\n// If LoS is good, post appropriate message and terminate\n//\nif (goodLoS) {\n    msg = `<b>${aToken.name}</b> has unobstructed LoS to <b>${oToken.name}</b> and continues \n        to suffer from ${FRIGHTENED_JRNL}.`\n    jez.postMessage({color:\"dodgerblue\", fSize:14, icon:FRIGHTENED_ICON, \n        msg:msg, title:`${aToken.name} fears ${oToken.name}`, token:aToken})\n    return\n}\n//-----------------------------------------------------------------------------------------\n// If LoS is blocked but within range, post appropriate message and terminate\n//\nif (!goodLoS && inRange) {\n    msg = `<b>${aToken.name}</b> can not see <b>${oToken.name}</b> but can sense the closeness of the \n        source of the fear effect. <b>${aToken.name}</b> remains ${FRIGHTENED_JRNL}.`\n    jez.postMessage({color:\"dodgerblue\", fSize:14, icon:FRIGHTENED_ICON, \n        msg:msg, title:`${aToken.name} fears ${oToken.name}`, token:aToken})\n    return\n}\n//-----------------------------------------------------------------------------------------\n// Tokens lack LoS and are out of range, time to remove the fear effect.\n// \nawait jezcon.remove(\"Frightened\", aToken.actor.uuid, {traceLvl: 1});\nmsg = `<b>${aToken.name}</b> can not see <b>${oToken.name}</b> and is far enough away to \n    rally. <b>${aToken.name}</b> is no longer ${FRIGHTENED_JRNL}.`\njez.postMessage({color:\"dodgerblue\", fSize:14, icon:FRIGHTENED_ICON, \nmsg:msg, title:`${aToken.name} fears ${oToken.name}`, token:aToken})\nreturn",
  "flags": {
    "combat-utility-belt": {
      "macroTrigger": ""
    },
    "advanced-macros": {
      "runAsGM": false
    },
    "exportSource": {
      "world": "travels-in-barovia-ce",
      "system": "dnd5e",
      "coreVersion": "9.269",
      "systemVersion": "1.6.2"
    }
  }
}