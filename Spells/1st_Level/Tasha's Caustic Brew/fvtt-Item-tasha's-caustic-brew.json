{
  "name": "Tasha's Caustic Brew",
  "type": "spell",
  "img": "icons/magic/acid/projectile-glowing-bubbles.webp",
  "data": {
    "description": {
      "value": "<p>A stream of acid emanates from you in a line <strong>30 feet long and 5 feet wide</strong> in a direction you choose.</p>\n<p>Each creature in the line must succeed on a Dexterity saving throw or be covered in acid for the spell&rsquo;s duration or <span style=\"text-decoration: underline;\">until a creature uses its action</span> to scrape or wash the acid off itself or another creature. A creature covered in the acid takes <strong>2d4 acid damage at start of each</strong> of its turns.</p>\n<p><strong>At Higher Levels.</strong>&nbsp;When you cast this spell using a spell slot 2nd level or higher, the damage increases by 2d4 for each slot level above 1st.</p>",
      "chat": "",
      "unidentified": ""
    },
    "source": "",
    "activation": {
      "type": "action",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": 1,
      "units": "minute"
    },
    "target": {
      "value": 30,
      "width": 5,
      "units": "ft",
      "type": "line"
    },
    "range": {
      "value": null,
      "long": null,
      "units": "self"
    },
    "uses": {
      "value": 0,
      "max": "0",
      "per": ""
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": null
    },
    "ability": "",
    "actionType": "save",
    "attackBonus": 0,
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": null
    },
    "damage": {
      "parts": [],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "dex",
      "dc": 30,
      "scaling": "int"
    },
    "level": 1,
    "school": "evo",
    "components": {
      "value": "",
      "vocal": true,
      "somatic": true,
      "material": true,
      "ritual": false,
      "concentration": true
    },
    "materials": {
      "value": "",
      "consumed": false,
      "cost": 0,
      "supply": 0
    },
    "preparation": {
      "mode": "prepared",
      "prepared": false
    },
    "scaling": {
      "mode": "none",
      "formula": ""
    },
    "attributes": {
      "spelldc": 10
    }
  },
  "effects": [
    {
      "_id": "GkoPqfcUkRNOd9M9",
      "flags": {
        "dae": {
          "stackable": false,
          "macroRepeat": "startEveryTurn",
          "transfer": false,
          "specialDuration": []
        }
      },
      "changes": [
        {
          "key": "macro.itemMacro",
          "mode": 0,
          "value": "@token",
          "priority": "20"
        }
      ],
      "disabled": false,
      "duration": {
        "startTime": null
      },
      "icon": "systems/dnd5e/icons/skills/affliction_16.jpg",
      "label": "Tasha's Caustic Brew",
      "origin": "Actor.WBIrtaNqoJKfznb4.OwnedItem.5AYM3YIqw4ZJzEaT",
      "tint": null,
      "transfer": false,
      "selectedKey": "macro.itemMacro"
    }
  ],
  "sort": 0,
  "flags": {
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Tasha's Caustic Brew",
          "type": "script",
          "author": "ZjFlOWYxZjM5ZTZj",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "/*********************************************************************************\n * DAE Macro.itemmacro @token or Macro.execute \"MacroName\" @token\n * Times Up/Macro Repeat: Start of Each Turn\n * \n * JGB: This is Crymic's macro.  I've done nothing beyond adding a header block.\n * \n * COOL-THING: Midi Times Up with Macro Repeat for damage over time (DoT)\n * COOL-THING: Popup dialog offering to let the token cleanse itself\n * *******************************************************************************/\nasync function wait(ms) { return new Promise(resolve => { setTimeout(resolve, ms); }); }\nconst lastArg = args[args.length - 1];\nconst tokenD = canvas.tokens.get(args[1]);\nconst actorD = tokenD.actor;\nconst target = canvas.tokens.get(lastArg.tokenId);\nconst itemD = actorD.items.get(lastArg.efData.flags.dae.itemData._id).data;\nconst origin = lastArg.origin;\nconst level = lastArg.efData.flags.dae.itemData.data.level * 2;\nconst damageType = \"acid\";\n\nif (args[0] === \"each\") {\n    let damageRoll = new Roll(`${level}d4`).evaluate({ async: false });\n    new MidiQOL.DamageOnlyWorkflow(actorD, tokenD, damageRoll.total, damageType, [target], damageRoll, { flavor: `(${CONFIG.DND5E.damageTypes[damageType]})`, itemData: itemD, itemCardId: \"new\" });\n    new Dialog({\n        title: itemD.name,\n        content: \"<p>Spend an <b>Action</b> to scape/wash away the Acid?</p>\",\n        buttons: {\n            yes: {\n                label: \"Yes\", callback: async () => {\n                    await target.actor.deleteEmbeddedDocuments(\"ActiveEffect\", [lastArg.effectId]);\n                    let workflow = await MidiQOL.Workflow.getWorkflow(origin);\n                    let itemCard = await MidiQOL.showItemInfo.bind(workflow.item)();\n                    await wait(1000);\n                    let the_message = `<div class=\"midi-qol-nobox midi-qol-bigger-text\"><b>Condition : Removed</b></div><div><div class=\"midi-qol-nobox\"><div class=\"midi-qol-flex-container\"><div class=\"midi-qol-target-npc midi-qol-target-name\" id=\"${target.id}\"> ${target.name}</div><div><img src=\"${target.data.img}\" width=\"30\" height=\"30\" style=\"border:0px\" /></div></div></div></div>`;\n                    const chatMessage = await game.messages.get(itemCard.id);\n                    let content = await duplicate(chatMessage.data.content);\n                    const searchString = /<div class=\"midi-qol-attack-roll\">[\\s\\S]*<div class=\"end-midi-qol-attack-roll\">/g;\n                    const replaceString = `<div class=\"midi-qol-attack-roll\"><div class=\"end-midi-qol-attack-roll\">${the_message}`;\n                    content = await content.replace(searchString, replaceString);\n                    await chatMessage.update({ content: content });\n                    await ui.chat.scrollBottom();\n                    let findEffect = await canvas.tokens.placeables.filter(i => i.actor.effects.find(x => x.data.label === itemD.name));\n                    if (findEffect.length === 0) {\n                        let conc = tokenD.actor.effects.find(i => i.data.label === \"Concentrating\");\n                        await tokenD.actor.deleteEmbeddedDocuments(\"ActiveEffect\", [conc.id]);\n                    }\n                }\n            },\n            no: { label: \"No\", callback: () => { } }\n        },\n        default: \"Yes\",\n    }).render(true);\n}",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        }
      }
    },
    "autoanimations": {
      "killAnim": false,
      "override": false,
      "animType": "t1",
      "animName": "",
      "color": "n1",
      "dtvar": "dt1",
      "explosion": false,
      "explodeVariant": "ev1",
      "explodeColor": "ec1",
      "explodeRadius": "0",
      "explodeLoop": "1",
      "hmAnim": "a1",
      "uaStrikeType": "physical",
      "selfRadius": "5",
      "animTint": "#ffffff",
      "auraOpacity": 0.75,
      "ctaOption": false,
      "teleDist": 30
    },
    "betterCurses": {
      "isCurse": false,
      "curseName": "",
      "formula": "",
      "mwak": false,
      "rwak": false,
      "msak": false,
      "rsak": false
    },
    "midi-qol": {
      "onUseMacroName": ""
    },
    "favtab": {
      "isFavorite": false
    },
    "core": {
      "sourceId": "Item.5AYM3YIqw4ZJzEaT"
    },
    "enhanced-terrain-layer": {
      "multiple": 1,
      "terraintype": "ground",
      "environment": ""
    },
    "exportSource": {
      "world": "travels-in-barovia",
      "system": "dnd5e",
      "coreVersion": "0.8.9",
      "systemVersion": "1.5.3"
    },
    "enhancedcombathud": {
      "set1p": false,
      "set2p": false,
      "set3p": false
    }
  }
}