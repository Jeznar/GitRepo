{
  "name": "Shield of Faith",
  "type": "spell",
  "img": "Icons_JGB/Spells/1st%20Level/Shield_Yellow.png",
  "data": {
    "description": {
      "value": "<p>A shimmering field appears and surrounds a creature of your choice within range, granting it a +2 bonus to AC for the duration.</p>",
      "chat": "<p>A shimmering field appears and surrounds a creature of your choice within range, granting it a +2 bonus to AC for the duration.</p>",
      "unidentified": ""
    },
    "source": "Basic Rules, Player's Handbook pg 275",
    "activation": {
      "type": "bonus",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": 10,
      "units": "minute"
    },
    "target": {
      "value": 1,
      "width": null,
      "units": "",
      "type": "creature"
    },
    "range": {
      "value": 60,
      "long": null,
      "units": "ft"
    },
    "uses": {
      "value": 0,
      "max": "0",
      "per": ""
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": null
    },
    "ability": "",
    "actionType": "util",
    "attackBonus": 0,
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": null
    },
    "damage": {
      "parts": [],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": null,
      "scaling": "spell"
    },
    "level": 1,
    "school": "abj",
    "components": {
      "value": "a small parchment with a bit of holy text written on it",
      "vocal": true,
      "somatic": true,
      "material": true,
      "ritual": false,
      "concentration": true
    },
    "materials": {
      "value": "a small parchment with a bit of holy text written on it",
      "consumed": false,
      "cost": 0,
      "supply": 0
    },
    "preparation": {
      "mode": "prepared",
      "prepared": true
    },
    "scaling": {
      "mode": "none",
      "formula": ""
    },
    "attunement": 0
  },
  "effects": [
    {
      "_id": "GGw83YdWNiJ94ubi",
      "flags": {
        "dae": {
          "transfer": false,
          "stackable": "none",
          "macroRepeat": "none",
          "specialDuration": [],
          "selfTarget": false,
          "durationExpression": ""
        },
        "dnd5e-helpers": {
          "rest-effect": "Ignore"
        },
        "ActiveAuras": {
          "isAura": false,
          "aura": "None",
          "radius": null,
          "alignment": "",
          "type": "",
          "ignoreSelf": false,
          "height": false,
          "hidden": false,
          "hostile": false,
          "onlyOnce": false,
          "displayTemp": false
        },
        "core": {
          "statusId": ""
        }
      },
      "changes": [
        {
          "key": "data.attributes.ac.bonus",
          "mode": 2,
          "value": "+2",
          "priority": "20"
        },
        {
          "key": "macro.itemMacro",
          "mode": 0,
          "value": "Parm_for_funz",
          "priority": "20"
        }
      ],
      "duration": {
        "startTime": null,
        "seconds": 600,
        "rounds": 100
      },
      "icon": "Icons_JGB/Spells/1st%20Level/Shield_Yellow.png",
      "label": "Shield of Faith",
      "transfer": false,
      "disabled": false,
      "tint": null,
      "selectedKey": [
        "data.attributes.ac.bonus",
        "macro.itemMacro"
      ]
    }
  ],
  "flags": {
    "ddbimporter": {
      "id": 138705,
      "definitionId": 2248,
      "entityTypeId": 435869154,
      "dndbeyond": {
        "lookup": "generic",
        "lookupName": "generic",
        "level": null,
        "castAtLevel": null
      },
      "sources": [
        {
          "sourceId": 1,
          "pageNumber": null,
          "sourceType": 2
        },
        {
          "sourceId": 2,
          "pageNumber": 275,
          "sourceType": 1
        }
      ],
      "tags": [
        "Buff",
        "Warding"
      ]
    },
    "betterRolls5e": {
      "quickVersatile": {
        "altValue": true
      },
      "quickCharges": {
        "value": {
          "use": true,
          "resource": true
        },
        "altValue": {
          "use": true,
          "resource": true
        }
      }
    },
    "midi-qol": {
      "onUseMacroName": "[postActiveEffects]ItemMacro",
      "effectActivation": false,
      "forceCEOn": false
    },
    "cf": {
      "id": "temp_y8e7215chl"
    },
    "core": {
      "sourceId": "Compendium.My-Shared-DDB.spells.F8Oxwv8BsIgIMwtr"
    },
    "enhancedcombathud": {
      "set1s": false,
      "set2s": false,
      "set3s": false
    },
    "betterCurses": {
      "isCurse": false,
      "curseName": "",
      "formula": "",
      "mwak": false,
      "rwak": false,
      "msak": false,
      "rsak": false
    },
    "autoanimations": {
      "killAnim": false,
      "options": {
        "ammo": false,
        "overrideAuto": false
      },
      "override": true,
      "allSounds": {
        "item": {
          "enableAudio": false
        }
      },
      "sourceToken": {
        "enable": false
      },
      "targetToken": {
        "enable": false
      },
      "animLevel": false,
      "animType": "t1",
      "below": false,
      "autoOverride": {
        "enable": false
      },
      "version": 4,
      "audio": {
        "a01": {
          "enable": false,
          "file": "",
          "delay": 0,
          "volume": 0.25
        },
        "e01": {
          "enable": false,
          "file": "",
          "delay": 0,
          "volume": 0.25
        }
      }
    },
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Shield of Faith",
          "type": "script",
          "author": "ZjFlOWYxZjM5ZTZj",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "const MACRONAME = \"Shield_of_Faith.0.4.js\"\n/*********1*********2*********3*********4*********5*********6*********7*********8*********9*********0\n * This spell macro built from a Sequencer example found at:\n * https://github.com/fantasycalendar/FoundryVTT-Sequencer/wiki/Dynamic-Active-Effects-&-JB2A-Shield\n * \n * JB2A Effects can be viewed at: https://www.jb2a.com/Library_Preview/\n * \n * 12/29/22 0.1 Creation of Macro\n * 01/23/22 0.2 Changed VFX opacity and placed beneath token\n * 10/18/22 0.3 General update, pair effects, create relevant convenientDescription\n * 10/19/22 0.4 Converted to use jez.pairEffectsAsGM to fix player permission issue\n *********1*********2*********3*********4*********5*********6*********7*********8*********9*********/ \nconst MACRO = MACRONAME.split(\".\")[0]       // Trim off the version number and extension\nconst TAG = `${MACRO} |`\nconst TL = 5;                               // Trace Level for this macro\nlet msg = \"\";                               // Global message string\n//---------------------------------------------------------------------------------------------------\nif (TL>1) jez.trace(`${TAG} === Starting ===`);\nif (TL>2) for (let i = 0; i < args.length; i++) jez.trace(`  args[${i}]`, args[i]);\nconst LAST_ARG = args[args.length - 1]; // See https://gitlab.com/tposney/dae#lastarg for contents\n//---------------------------------------------------------------------------------------------------\n// Set the value for the Active Token (aToken)\nlet aToken;         \nif (LAST_ARG.tokenId) aToken = canvas.tokens.get(LAST_ARG.tokenId); \nelse aToken = game.actors.get(LAST_ARG.tokenId);\nlet aActor = aToken.actor; \n//\n// Set the value for the Active Item (aItem)\nlet aItem;         \nif (args[0]?.item) aItem = args[0]?.item; \nelse aItem = LAST_ARG.efData?.flags?.dae?.itemData;\n//---------------------------------------------------------------------------------------------------\n// Set Macro specific globals\n//\nconst EFFECT_NAME = \"Shield of Faith\";\nconst EFFECT_ICON = \"Icons_JGB/Spells/1st%20Level/Shield_Yellow.png\";\nconst VFX_NAME  = `${MACRO}-${aToken.id}`\nconst VFX_INTRO = \"modules/jb2a_patreon/Library/1st_Level/Shield/Shield_03_Regular_Yellow_Intro_400x400.webm\"\nconst VFX_LOOP  = \"modules/jb2a_patreon/Library/1st_Level/Shield/Shield_03_Regular_Yellow_Loop_400x400.webm\";\nconst VFX_OUTRO = \"modules/jb2a_patreon/Library/1st_Level/Shield/Shield_03_Regular_Yellow_OutroExplode_400x400.webm\";\n//---------------------------------------------------------------------------------------\n// Do something Useful\n//\nif (args[0] === \"on\") doOn({traceLvl:TL});          \t\t    \nif (args[0] === \"off\") doOff({traceLvl:TL});        \t\t\t    \nif (args[0]?.tag === \"OnUse\") await doOnUse({traceLvl:TL});          \n//---------------------------------------------------------------------------------------\n// That's all folks\n//\nif (TL>1) jez.trace(`=== Finished === ${MACRONAME} ===`);\nreturn;\n/***************************************************************************************\n *    END_OF_MAIN_MACRO_BODY\n *                                END_OF_MAIN_MACRO_BODY\n *                                                             END_OF_MAIN_MACRO_BODY\n ***************************************************************************************/\n\n/***************************************************************************************\n * Perform the steps that runs when this macro is executed by DAE to add to target\n ***************************************************************************************/\n async function doOn(options={}) {\n    const FUNCNAME = \"doOn(options={})\";\n    const FNAME = FUNCNAME.split(\"(\")[0] \n    const TAG = `${MACRO} ${FNAME} |`\n    const TL = options.traceLvl ?? 0\n    if (TL>0) jez.trace(`${TAG} --- Starting ---`);\n    //-----------------------------------------------------------------------------------------------\n    // Update the convenientDescription of the Concentrating effect to describe the spell\n    //\n    await jez.wait(100)\n    // const CE_DESC = `Benefiting from Shield spell`\n    // await jez.setCEDesc(aToken, EFFECT_NAME, CE_DESC, { traceLvl: TL });\n    //-----------------------------------------------------------------------------------------------\n    // Run a VFX on the active (targeted) token\n    //\n    new Sequence()\n    .effect()\n        .file(VFX_INTRO)\n        .attachTo(aToken)\n        .scale(0.5)\n        .opacity(1.0)           \n        .waitUntilFinished(-500) // Negative wait time (ms) clips the effect to avoid fadeout\n    .effect()\n        .file(VFX_LOOP)\n        .attachTo(aToken)\n        .belowTokens()\n        .scale(0.5)\n        .opacity(1.0)  \n        .persist()\n        .name(VFX_NAME)      // Give the effect a uniqueish name\n        .fadeIn(300)            // Fade in for specified time in milliseconds\n        .fadeOut(300)           // Fade out for specified time in milliseconds\n        .extraEndDuration(800)  // Time padding on exit to connect to Outro effect\n    .play()\n    if (TL>1) jez.trace(`${TAG} --- Finished ---`);\n    return;\n}\n\n /***************************************************************************************\n * Perform the code that runs when this macro is removed by DAE, set Off\n * This runs on actor that has the affected removed from it.\n ***************************************************************************************/\nasync function doOff(options = {}) {\n    const FUNCNAME = \"doOff()\";\n    const FNAME = FUNCNAME.split(\"(\")[0]\n    const TAG = `${MACRO} ${FNAME} |`\n    const TL = options.traceLvl ?? 0\n    if (TL > 0) jez.trace(`${TAG} --- Starting ---`);\n    //-----------------------------------------------------------------------------------------------\n    // Terminate the effect on the token\n    //\n    Sequencer.EffectManager.endEffects({ name: VFX_NAME, object: aToken });\n    //-----------------------------------------------------------------------------------------------\n    // Run an temination VFX effect on the token\n    //\n    new Sequence()\n    .effect()\n        .file(VFX_OUTRO)\n        .scale(0.5)\n        .opacity(1.0)  \n        .attachTo(aToken)\n    .play()\n    if (TL>1) jez.trace(`${TAG} --- Finished ---`);\n    return;\n}\n/*********1*********2*********3*********4*********5*********6*********7*********8*********9*********0\n * Perform the \"OnUse\" code to:\n *  1. Check that a target was selected, dropping conc if it wasn't,\n *  2. Pair the two effects\n *  3. Update the convenientDescription on concentrating\n * \n *********1*********2*********3*********4*********5*********6*********7*********8*********9*********/ \n async function doOnUse(options={}) {\n    const FUNCNAME = \"doOnUse()\";\n    const FNAME = FUNCNAME.split(\"(\")[0] \n    const TAG = `${MACRO} ${FNAME} |`\n    const TL = options.traceLvl ?? 0\n    if (TL===1) jez.trace(`${TAG} --- Starting ---`);\n    if (TL>1) jez.trace(`${TAG} --- Starting --- ${FUNCNAME} ---`,\"options\",options);\n    await jez.wait(100)\n    //-----------------------------------------------------------------------------------------------\n    // Verify something was targeted, if not clear concentrating and return a message of sadness\n    //\n    if (!await preCheck()) {\n        msg = `This spell requires that a target be selected before casting.`\n        postResults(msg);\n        await jez.wait(100)\n        let conc = await aToken.actor.effects.find(i => i.data.label === \"Concentrating\");\n        if (TL>1) jez.trace(`${TAG} Clearing concentration from ${aToken.name}`, conc)\n        await conc.delete()\n        return\n    }\n    //----------------------------------------------------------------------------------\n    // Set the targeted token\n    let tToken = canvas.tokens.get(args[0]?.targets[0]?.id); // First Targeted Token, if any\n    // let tActor = tToken?.actor;\n    //-------------------------------------------------------------------------------------------------------------\n    // Pair the effects so concentrating will drop if the effect is terminated\n    //\n    await jez.wait(100)\n    jez.pairEffectsAsGM(aToken.id, \"Concentrating\", tToken.id, EFFECT_NAME)\n    //jez.pairEffects(aToken, \"Concentrating\", tToken, EFFECT_NAME)\n    //-----------------------------------------------------------------------------------------------\n    // Update the convenientDescription of the Concentrating effect to describe the spell\n    //\n    const CE_DESC1 = `Maintaining Shield of Faith spell on ${tToken.name}`\n    await jez.setCEDesc(aActor, \"Concentrating\", CE_DESC1, { traceLvl: TL });\n    const CE_DESC2 = `Benefiting from ${aToken.name}'s Shield of Faith`\n    await jez.setCEDescAsGM(tToken, EFFECT_NAME, CE_DESC2, { traceLvl: TL });\n    //-----------------------------------------------------------------------------------------------\n    // Final message and close up shop\n    //\n    msg = `<b>${aToken.name}</b> is protecting <b>${tToken.name}</b> with a magical shield`\n    postResults(msg)\n    if (TL>1) jez.trace(`${TAG} --- Finished ---`);\n    return true;\n}\n/*********1*********2*********3*********4*********5*********6*********7*********8*********9*********0\n * Post results to the chat card\n *********1*********2*********3*********4*********5*********6*********7*********8*********9*********/ \n function postResults(msg) {\n    const FUNCNAME = \"postResults(msg)\";\n    const FNAME = FUNCNAME.split(\"(\")[0] \n    const TAG = `${MACRO} ${FNAME} |`\n    if (TL>1) jez.trace(`${TAG} --- Starting ---`);\n    if (TL>2) jez.trace(\"postResults Parameters\",\"msg\",msg)\n    //-----------------------------------------------------------------------------------------------\n    let chatMsg = game.messages.get(args[args.length - 1].itemCardId);\n    jez.addMessage(chatMsg, { color: jez.randomDarkColor(), fSize: 14, msg: msg, tag: \"saves\" });\n    if (TL>1) jez.trace(`${TAG}--- Finished ---`);\n}\n/*********1*********2*********3*********4*********5*********6*********7*********8*********9*********0\n* Check the setup of things.  Post bad message and return false fr bad, true for ok!\n*********1*********2*********3*********4*********5*********6*********7*********8*********9*********/ \nasync function preCheck() {\n   if (args[0].targets.length !== 1)       // If not exactly one target \n       return jez.badNews(`Must target exactly one target.  ${args[0]?.targets?.length} were targeted.`,\"w\");\n   return(true)\n}",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        }
      }
    },
    "midiProperties": {
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "rollOther": false,
      "critOther": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "toggleEffect": false
    },
    "exportSource": {
      "world": "travels-in-barovia-ce",
      "system": "dnd5e",
      "coreVersion": "9.280",
      "systemVersion": "1.6.2"
    }
  }
}