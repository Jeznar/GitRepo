{
  "name": "Silent Image",
  "type": "spell",
  "img": "/systems/dnd5e/icons/spells/air-burst-jade-2.jpg",
  "data": {
    "description": {
      "value": "<p>You create the image of an object, a creature, or some other visible phenomenon that is no larger than a 15-foot cube. The image appears at a spot within range and lasts for the duration. The image is purely visual; it isn't accompanied by sound, smell, or other sensory effects.</p>\n<p>See:Â <a href=\"https://www.dndbeyond.com/spells/silent-image\" target=\"_blank\" rel=\"noopener\">D&amp;D Beyond Description</a></p>\n<hr />\n<p><strong>FoundryVTT</strong>: This is automated to place a generic square tile in the area of effect.</p>",
      "chat": "<p>You create the image of an object, a creature, or some other visible phenomenon that is no larger than a 15-foot cube. The image appears at a spot within range and lasts for the duration. The image is purely visual; it isn't accompanied by sound, smell, or other sensory effects.</p>\n<p>You can use your action to cause the image to move to any spot within range. As the image changes location, you can alter its appearance so that its movements appear natural for the image. For example, if you create an image of a creature and move it, you can alter the image so that it appears to be walking.</p>\n<p>Physical interaction with the image reveals it to be an illusion, because things can pass through it. A creature that uses its action to examine the image can determine that it is an illusion with a successful Intelligence (Investigation) check against your spell save DC. If a creature discerns the illusion for what it is, the creature can see through the image.</p>",
      "unidentified": ""
    },
    "source": "Basic Rules, Player's Handbook pg 276",
    "activation": {
      "type": "action",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": 10,
      "units": "minute"
    },
    "target": {
      "value": null,
      "width": null,
      "units": "ft",
      "type": ""
    },
    "range": {
      "value": 60,
      "long": null,
      "units": "ft"
    },
    "uses": {
      "value": 0,
      "max": "0",
      "per": ""
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": null
    },
    "ability": "",
    "actionType": "other",
    "attackBonus": 0,
    "chatFlavor": "",
    "critical": null,
    "damage": {
      "parts": [],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": null,
      "scaling": "spell"
    },
    "level": 1,
    "school": "ill",
    "components": {
      "value": "a bit of fleece",
      "vocal": true,
      "somatic": true,
      "material": true,
      "ritual": false,
      "concentration": true
    },
    "materials": {
      "value": "a bit of fleece",
      "consumed": false,
      "cost": 0,
      "supply": 0
    },
    "preparation": {
      "mode": "prepared",
      "prepared": true
    },
    "scaling": {
      "mode": "none",
      "formula": ""
    },
    "attunement": 0
  },
  "effects": [],
  "flags": {
    "ddbimporter": {
      "id": 138718,
      "definitionId": 2252,
      "entityTypeId": 435869154,
      "dndbeyond": {
        "lookup": "generic",
        "lookupName": "generic",
        "level": null,
        "castAtLevel": null
      },
      "sources": [
        {
          "sourceId": 1,
          "pageNumber": null,
          "sourceType": 2
        },
        {
          "sourceId": 2,
          "pageNumber": 276,
          "sourceType": 1
        }
      ],
      "tags": [
        "Control"
      ]
    },
    "betterRolls5e": {
      "quickVersatile": {
        "altValue": true
      },
      "quickCharges": {
        "value": {
          "use": true,
          "resource": true
        },
        "altValue": {
          "use": true,
          "resource": true
        }
      }
    },
    "cf": {
      "id": "temp_y8e7215chl"
    },
    "core": {
      "sourceId": "Compendium.My-Shared-DDB.spells.gTP49lWolh61ZslH"
    },
    "midi-qol": {
      "effectActivation": false,
      "onUseMacroName": "[postActiveEffects]ItemMacro"
    },
    "midiProperties": {
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "rollOther": false,
      "critOther": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "toggleEffect": false
    },
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Silent Image",
          "type": "script",
          "author": "ZjFlOWYxZjM5ZTZj",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "const MACRONAME = \"Silent_Image.0.2.js\"\n/*********1*********2*********3*********4*********5*********6*********7*********8*********9*********0\n * Call a token via warpgate, most interesting element is the use of jez.warpCrosshairs to control\n * how far away the token can be summoned.\n * \n * 07/20/22 0.1 Creation of Macro\n * 07/31/22 0.3 Add convenientDescription\n *********1*********2*********3*********4*********5*********6*********7*********8*********9*********/\nconst MACRO = MACRONAME.split(\".\")[0]       // Trim of the version number and extension\nconst TL = 0;                               // Trace Level for this macro\nlet msg = \"\";                               // Global message string\n//---------------------------------------------------------------------------------------------------\nif (TL > 1) jez.trace(`=== Starting === ${MACRONAME} ===`);\nif (TL > 2) for (let i = 0; i < args.length; i++) jez.trace(`  args[${i}]`, args[i]);\nconst LAST_ARG = args[args.length - 1];\n//---------------------------------------------------------------------------------------------------\n// Set the value for the Active Token (aToken)\nlet aToken;\nif (LAST_ARG.tokenId) aToken = canvas.tokens.get(LAST_ARG.tokenId);\nelse aToken = game.actors.get(LAST_ARG.tokenId);\nlet aActor = aToken.actor;\n//\n// Set the value for the Active Item (aItem)\nlet aItem;\nif (args[0]?.item) aItem = args[0]?.item;\nelse aItem = LAST_ARG.efData?.flags?.dae?.itemData;\n//---------------------------------------------------------------------------------------------------\n// Set Macro specific globals\n//\nconst MINION = `Silent Image`;\n//---------------------------------------------------------------------------------------------------\n// Run the main procedures, choosing based on how the macro was invoked\n//\nif (args[0] === \"off\") await doOff();                   // DAE removal\nif (args[0]?.tag === \"OnUse\") await doOnUse();          // Midi ItemMacro On Use\n/*********1*********2*********3*********4*********5*********6*********7*********8*********9*********0\n *    END_OF_MAIN_MACRO_BODY\n *                                END_OF_MAIN_MACRO_BODY\n *                                                             END_OF_MAIN_MACRO_BODY\n ****************************************************************************************************\n * Post results to the chat card\n *********1*********2*********3*********4*********5*********6*********7*********8*********9*********/\nfunction postResults(msg) {\n  let chatMsg = game.messages.get(args[args.length - 1].itemCardId);\n  jez.addMessage(chatMsg, { color: jez.randomDarkColor(), fSize: 14, msg: msg, tag: \"saves\" });\n}\n/*********1*********2*********3*********4*********5*********6*********7*********8*********9*********0\n * Perform the code that runs when this macro is removed by DAE, set Off\n *********1*********2*********3*********4*********5*********6*********7*********8*********9*********/\nasync function doOff() {\n  if (TL > 1) jez.trace(\"Token to dismiss\", args[1])\n  warpgate.dismiss(args[1], game.scenes.viewed.id)\n  return;\n}\n/*********1*********2*********3*********4*********5*********6*********7*********8*********9*********0\n * Perform the code that runs when this macro is invoked as an ItemMacro \"OnUse\"\n *********1*********2*********3*********4*********5*********6*********7*********8*********9*********/\nasync function doOnUse() {\n  const FUNCNAME = \"doOnUse()\";\n  const FNAME = FUNCNAME.split(\"(\")[0]\n  await jez.wait(100)\n  if (TL === 1) jez.trace(`--- Starting --- ${MACRONAME} ${FNAME} ---`);\n  //--------------------------------------------------------------------------------------\n  // Perform the actual summon\n  //\n  let summonedID = await summonSilentImage()\n  if (!summonedID) {  // Something went sideways\n    if (TL > 3) jez.trace(`${FNAME} | aToken`, aToken)\n    if (TL > 3) jez.trace(`${FNAME} | aActor`, aActor)\n      jezcon.remove(\"Concentrating\", aToken.actor.uuid, { traceLvl: TL });\n    return false\n  }\n  //--------------------------------------------------------------------------------------\n  // Add watchdog effect to despawn summoned token at expiration (1 hour) via doOff \n  //\n  const EXPIRE = [\"newDay\", \"longRest\", \"shortRest\"];\n  const GAME_RND = game.combat ? game.combat.round : 0;\n  let effectData = {\n    label: aItem.name,\n    icon: aItem.img,\n    origin: LAST_ARG.uuid,\n    disabled: false,\n    duration: {\n      rounds: 600, startRound: GAME_RND,\n      seconds: 3600, startTime: game.time.worldTime,\n      token: aToken.uuid, stackable: false\n    },\n    flags: { \n      dae: { macroRepeat: \"none\", specialDuration: EXPIRE },\n      convenientDescription: `Maintaining Silent Image.  See Spell Description.`\n     },\n    changes: [\n      { key: `macro.itemMacro`, mode: jez.ADD, value: summonedID, priority: 20 },\n    ]\n  };\n  await MidiQOL.socket().executeAsGM(\"createEffects\", { actorUuid: aToken.actor.uuid, effects: [effectData] });\n  //-----------------------------------------------------------------------------------------------\n  // post summary effect message\n  //\n  msg = `${aToken.name} creates a silent image.<br><br>\n    See:&nbsp;<a href=\"https://www.dndbeyond.com/spells/silent-image\" target=\"_blank\" rel=\"noopener\">\n    D&amp;D Beyond Description</a> for details`\n  postResults(msg)\n  if (TL > 1) jez.trace(`--- Finished --- ${MACRONAME} ${FNAME} ---`);\n  return true;\n}\n/***************************************************************************************************\n * Summon the minion and update \n ***************************************************************************************************/\nasync function summonSilentImage() {\n  const FUNCNAME = \"summonSilentImage()\";\n  const FNAME = FUNCNAME.split(\"(\")[0]\n  if (TL === 1) jez.trace(`--- Starting --- ${MACRONAME} ${FNAME} ---`);\n  //-----------------------------------------------------------------------------------------------\n  //\n  let argObj = {\n    defaultRange: 30,\n    duration: 3000,                     // Duration of the intro VFX\n    introTime: 1000,                    // Amount of time to wait for Intro VFX\n    introVFX: '~Energy/SwirlingSparkles_01_Regular_${color}_400x400.webm', // default introVFX file\n    minionName: `${aToken.name}'s ${MINION}`,\n    name: aItem.name,                   // Name of action (message only), typically aItem.name\n    outroVFX: '~Fireworks/Firework*_02_Regular_${color}_600x600.webm', // default outroVFX file\n    scale: 0.7,\t\t\t\t\t\t\t\t// Default value but needs tuning at times\n    source: aToken,                     // Coords for source (with a center), typically aToken\n    templateName: `%${MINION}%`,        // Name of the actor in the actor directory\n    width: 3,                           // Width of token to be summoned\n    traceLvl: TL\n  }\n  //--------------------------------------------------------------------------------------------------\n  // Nab the data for our soon to be summoned critter so we can have the right image (img) and use it\n  // to update the img attribute or set basic image to match this item\n  //\n  let summonData = await game.actors.getName(MINION)\n  argObj.img = summonData ? summonData.img : aItem.img\n  //--------------------------------------------------------------------------------------------------\n  // Do the actual summon\n  //\n  return jez.spawnAt(MINION, aToken, aActor, aItem, argObj)\n}",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        }
      }
    },
    "exportSource": {
      "world": "travels-in-barovia-ce",
      "system": "dnd5e",
      "coreVersion": "9.269",
      "systemVersion": "1.6.2"
    }
  }
}