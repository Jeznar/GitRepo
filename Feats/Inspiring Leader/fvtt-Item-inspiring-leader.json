{
  "name": "Inspiring Leader",
  "type": "feat",
  "img": "icons/skills/social/diplomacy-peace-alliance.webp",
  "data": {
    "description": {
      "value": "<p>You can spend 10 minutes inspiring your companions, shoring up their resolve to fight. When you do so, choose up to&nbsp;<strong>six friendly creatures</strong>&nbsp;(which can include yourself)&nbsp;<strong>within 30 feet of you&nbsp;</strong>who can see or hear you and who can understand you. Each creature can gain temporary hit points equal to&nbsp;<strong>your level + your Charisma modifier</strong>. A creature can't gain temporary hit points from this feat again until it has finished a short or long rest.</p>\n<hr style=\"border-top: 1px solid var(--color-border-light-primary); border-bottom: 1px solid var(--color-border-light-highlight);\" />\n<p><strong>FoundryVTT:&nbsp;</strong>This item will add the prescribed temp HP to&nbsp;<em>all friendly</em>&nbsp;tokens within the range.&nbsp; Players may need to rearrange tokens in current scene so that only those that should be bolstered are in range.&nbsp; Pre-targeting is not required and not used by this item.</p>",
      "chat": "",
      "unidentified": ""
    },
    "source": "",
    "activation": {
      "type": "minute",
      "cost": 10,
      "condition": ""
    },
    "duration": {
      "value": 0,
      "units": ""
    },
    "target": {
      "value": 6,
      "width": null,
      "units": "",
      "type": "creature"
    },
    "range": {
      "value": 30,
      "long": null,
      "units": "ft"
    },
    "uses": {
      "value": 0,
      "max": "0",
      "per": ""
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": null
    },
    "ability": "",
    "actionType": "util",
    "attackBonus": 0,
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": null
    },
    "damage": {
      "parts": [
        [
          "@details.level + @abilities.cha.mod",
          "temphp"
        ]
      ],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": null,
      "scaling": "spell"
    },
    "requirements": "",
    "recharge": {
      "value": 0,
      "charged": false
    }
  },
  "effects": [],
  "flags": {
    "enhancedcombathud": {
      "set1p": false,
      "set2p": false,
      "set3p": false
    },
    "midi-qol": {
      "onUseMacroName": "[postActiveEffects]ItemMacro",
      "effectActivation": false
    },
    "magicitems": {
      "enabled": false,
      "equipped": false,
      "attuned": false,
      "charges": "0",
      "chargeType": "c1",
      "destroy": false,
      "destroyFlavorText": "reaches 0 charges: it crumbles into ashes and is destroyed.",
      "rechargeable": false,
      "recharge": "0",
      "rechargeType": "t1",
      "rechargeUnit": "r1",
      "sorting": "l"
    },
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Inspiring Leader",
          "type": "script",
          "author": "ZjFlOWYxZjM5ZTZj",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "const MACRONAME = \"Inspiring_Leader.0.5.js\"\n/*****************************************************************************************\n * Implemement the Inspiring Leader Feat.  This was originally added by Jon.\n * \n * Process added temp HP to all FRIENDLY tokens within allowed distance who didn't already \n * have temp HP. \n * \n * 11/15/21 0.1 JGB created from version on Rue sheet added \n *                  debug and fixed distance bug. \n * 11/15/21 0.2 JGB Verify a single token is selected\n * 11/23/21 0.3 JGB Fix Not working on non-accessible tokens\n *                  Requires callback macro ActorUpdate\n * 11/23/21 0.4 JGB Improve feedback to item card\n * 05/20/22 0.5 JGB General update when adding to GitRepo\n*****************************************************************************************/\nconst MACRO = MACRONAME.split(\".\")[0]     // Trim of the version number and extension\njez.log(`============== Starting === ${MACRONAME} =================`);\n\n// Token dispostions, strings as shown in UI  \nconst FRIENDLY = 1;\nconst NEUTRAL = 0;\nconst HOSTILE = -1;\njez.log(`Starting: ${MACRONAME} arguments passed: ${args.length}`);\n//---------------------------------------------------------------------------------------\n// Grab the ActorUpdate macro which does magic to run asGM, contents embedded.\n// if(!args[0] || !args[1]) return ui.notifications.error(`${this.name}'s arguments are invalid.`);\n// ActorUpdate must run with \"Execute as GM\" checked\n// Version 11.06.21\n// args[0] = actor ID\n// args[1] = update data\n// if(!args[0] || !args[1]) return ui.notifications.error(`${this.name}'s arguments are invalid.`);\n// await canvas.tokens.get(args[0]).document.actor.update(args[1]);\n//----------------------------------------------------------------------------------------\nconst MAGICMACRO = \"ActorUpdate\";\nconst ActorUpdate = game.macros.getName(MAGICMACRO);\nif (!ActorUpdate) return ui.notifications.error(`Cannot locate ${MAGICMACRO} GM Macro`);\nif (!ActorUpdate.data.flags[\"advanced-macros\"].runAsGM) return ui.notifications.error(`${MAGICMACRO} \"Execute as GM\" needs to be checked.`);\njez.log(` Found ${MAGICMACRO}, verified Execute as GM is checked`);\njez.log(ActorUpdate);\n//----------------------------------------------------------------------------------------\n// Add caster's level plus CHA mod as temp HP to tokens within 10 units \n//\nlet tokenD = canvas.tokens.controlled[0];\njez.log(tokenD);\nlet dist = 30;\nlet sel = canvas.tokens.controlled[0];\nlet level = tokenD.actor.data.data.details.level;\nlet chaMod = tokenD.actor.data.data.abilities.cha.mod;\nlet thp = level + chaMod;\nlet benefittedCount = 0;\nlet receivedTempHP = \"\";\nlet unFriendlyCount = 0;\nlet unFriendly = \"\";\nlet fullTempHPCount = 0;\nlet toFarCount = 0;\nlet toFar = \"\";\nlet fullTempHP = \"\";\nlet results = \"\";\n\njez.log(` Adding up to ${thp} temp HP`)\n\ncanvas.tokens.placeables.forEach(token => {\n    let d = canvas.grid.measureDistance(sel, token);\n    d = d.toFixed(1);\n    jez.log(` Considering ${token.name} at ${d} distance`);\n    if (d > dist) {\n        jez.log(`  ${token.name} is too far away, no HP added`);\n        if (toFarCount++) {toFar += \", \"};\n        toFar += token.name;\n        jez.log(`  To Far #${toFarCount} ${token.name} is ${d} feet. To Fars: ${toFar}`);\n    } else {\n        if (token.data.disposition !== FRIENDLY) {\n            jez.log(`  ${token.name} is not friendly, no HP added`);\n            if (unFriendlyCount++) {unFriendly += \", \"};\n            unFriendly += token.name;\n            jez.log(`  Unfriendly #${unFriendlyCount} ${token.name}. Unfriendlies: ${unFriendly}`);\n        } else {\n            // if (d <= dist && token.data.disposition === FRIENDLY) {\n            let curthp = token.actor.data.data.attributes.hp.temp;\n            if (curthp < thp || curthp == \"\") {\n              // token.actor.update({ \"data.attributes.hp.temp\": thp });            // My original line\n              // ActorUpdate.execute(target.id, { \"data.attributes.hp.value\": 0 }); // Crymic's line from MaceofDisruption.js\n                ActorUpdate.execute(token.id, { \"data.attributes.hp.temp\": thp }); // target equiv token.id?\n                jez.log(`  Setting ${token.name} temp hp to ${thp}.`);\n                if (benefittedCount++) {receivedTempHP += \", \"};\n                receivedTempHP += token.name;\n                jez.log(`  Benefit #${benefittedCount} ${receivedTempHP}`)\n            } else {\n                if (fullTempHPCount++) {fullTempHP += \", \"};\n                fullTempHP += token.name;\n                jez.log(`  Skipped #${fullTempHPCount} ${token.name} had ${curthp} temp HP. Skips: ${fullTempHP}`);\n            }\n        }\n    }\n});\n\n// ui.notifications.info(`${MACRONAME} provided HP to ${benefittedCount} creatures`);\njez.log(` Benefited: ${receivedTempHP}`);\nif (benefittedCount) results += `${benefittedCount} Benefited : ${receivedTempHP}<br>`;\nif (fullTempHPCount) results += `${fullTempHPCount} Full tmpHP: ${fullTempHP}<br>`;\nif (unFriendlyCount) results += `${unFriendlyCount} Unfriendly: ${unFriendly}<br>`;\nif (toFarCount) results += `${toFarCount} out of range.`\npostResults(results);\n/***************************************************************************************************\n *    END_OF_MAIN_MACRO_BODY\n *                                END_OF_MAIN_MACRO_BODY\n *                                                             END_OF_MAIN_MACRO_BODY\n ***************************************************************************************************\n * Post the results to chart card\n ***************************************************************************************************/\nfunction postResults(msg) {\n    jez.log(msg);\n    let chatMsg = game.messages.get(args[args.length - 1].itemCardId);\n    jez.addMessage(chatMsg, { color: jez.randomDarkColor(), fSize: 14, msg: msg, tag: \"saves\" });\n}",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        }
      }
    },
    "betterCurses": {
      "isCurse": false,
      "curseName": "",
      "formula": "",
      "mwak": false,
      "rwak": false,
      "msak": false,
      "rsak": false
    },
    "midiProperties": {
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "rollOther": false,
      "critOther": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "toggleEffect": false
    },
    "exportSource": {
      "world": "travels-in-barovia",
      "system": "dnd5e",
      "coreVersion": "9.269",
      "systemVersion": "1.6.0"
    }
  }
}